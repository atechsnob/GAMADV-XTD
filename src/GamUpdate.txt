4.57.17

Fixed bug whan handling error in gam create course.

4.57.16

Added copyfrom <GroupItem> to gam create/update group to allow copying of group attributes from one group to another.
The following attributes are not copied: name, description, email, admincreated, aliases, noneditablealiases.
Any <GroupAttributes> specified will override the copied attributes.

gam create|add group <EmailAddress> [copyfrom <GroupItem>] <GroupAttributes>*
gam update group|groups <GroupEntity> [admincreated <Boolean>] [email <EmailAddress>] [copyfrom <GroupItem>] <GroupAttributes>*

Added copyfrom <CourseID> [announcementstates <CourseAnnouncementStateList>] [workstates <CourseWorkStateList>] [members none|all|students|teachers]
to gam create/update course to allow copying of course announcements, work and members from one course to another.

In order for GAM to be able to copy course announcements and work, it must have a special oauth2.txt file for the the course owner.
The create/update course commands will create the special oauth2.txt when executed by starting a browser to get authentication.
If this is not convenient, you can manually build the files before creating/updating the course.
These files will be created in the directory specified by config_dir in gam.cfg; they will be named classroom-<OwnerID>-oauth2.txt.

gam <UserTypeEntity> create classroomoauth2
gam <UserTypeEntity> delete classroomoauth2
gam <UserTypeEntity> info classroomoauth2

gam create|add course [id|alias <CourseAlias>] <CourseAttributes>*
        [copyfrom <CourseID> [announcementstates <CourseAnnouncementStateList>] [workstates <CourseWorkStateList>] [members none|all|students|teachers]]
gam update course <CourseID> <CourseAttributes>+
        [copyfrom <CourseID> [announcementstates <CourseAnnouncementStateList>] [workstates <CourseWorkStateList>] [members none|all|students|teachers]]
gam update courses <CourseEntity> <CourseAttributes>+
        [copyfrom <CourseID> [announcementstates <CourseAnnouncementStateList>] [workstates <CourseWorkStateList>] [members none|all|students|teachers]]

4.57.15

In gam get drivefile you can now include the strings #email#, #user# and #username# in targetfolder <FilePath> and targetname <FileName>
which will be replaced by the the user's full emailaddress or just the name portion.

4.57.14

Improved error message given when a duplicate teacher/student is added to a class.

The options name <String> and teacher <UserItem> are now required when creating a class.
Previously, name defaulted to "Unknown Course" and teacher defaulted to the admin user named in oauth2.txt.

Classes can only be deleted when they are in the ARCHIVED state; previously, to delete a class, you had to issue two gam commands:
gam update course <CourseID> state archived
gam delete course <CourseID>
Now you can optionally specify that the class should be archived as an option when deleting the class.
gam delete course <CourseID> [archived]

4.57.13

Fixed bug in gam print filepaths where extraneous data was output before header row.

4.57.12

Handle domainCannotUseApis error in gam print groupmembers.

4.57.11

Fixed bug in gam create vaultmatter collaborators <EmailItemList> that caused a trap.

4.57.10

Fixed error in gam print events formatjson where extraneous columns were included.

4.57.09

Added json <JSONData> option to <ContactAttributes>; this will allow creating/updating complex contacts.
If charset <Charset> is not specified, the value of charset from gam.cfg is assumed.
For example, to copy contacts from one user to another you could do the following:
gam redirect csv ./User1ContactGroups.csv user user1@domain.com print contactgroups full formatjson quotechar "'"
gam csv ./User1ContactGroups.csv gam user user2@domain.com create contactgroup json ~JSON
gam redirect csv ./User1Contacts.csv user user1@domain.com print contacts full formatjson quotechar "'"
gam csv ./User1Contacts.csv gam user user2@domain.com create contact json ~JSON

4.57.08

Added showprogress option to gam get drivefile which will show file download progress as a percentage.

4.57.07

Updated gam info/show drivefileacl to show deleted field.

4.57.06

Update cachetools, googleapiclient, httplib2, pyasn1, pyasn1_modules libraries.

4.57.05

If you copy a folder into its existing parent folder without specifying newfilename <DriveFileName> and duplicatefolders merge is set (the default),
the copied folder will be named 'Copy of <ExistingName>'.
For example, 'gam user user@domain.com copy drivefile drivefilename TestFolder' will copy 'TestFolder' to 'Copy of TestFolder'.

4.57.04

Corrected the error message "Add Failed: Invalid Role" to "Add Failed: Invalid Member address" when an invalid email address was used in gam update group add.

4.57.03

Added support for Collaborative Inbox Groups.
* Feature documentation: https://support.google.com/a/answer/167430?hl=en
* API documentation: https://developers.google.com/admin-sdk/groups-settings/v1/reference/groups
* GAM documentation: https://github.com/taers232c/GAMADV-XTD/wiki/Groups

4.57.02

Extend drive filename escaping to all options:
drivefilename, anyownerdrivefilename, teamdrivefilename,
parentname, anyownerparentname, teamdriveparentname,
addparentname, addanyownerparentname, removeparentname, removeanyownerparentname, 
tdparent

4.57.01

Drive filenames that contain a single quote (') or a backslash (\) have to be escaped before being passed to the Drive REST API;
otherwise, Google gives an invalid query error.` GAM now performs this escaping, you do not have to escape them on the command line.
drivefilename "Foo'Bar"
drivefilename "Foo\Bar"

Drive filenames that contain a double quote (") or open single quote (`), do not have to be escaped before being passed to the Drive REST API;
however, you may have to escape them on the command line for Gam to receive the correct value.
drivefilename "Foo\"Bar" - Linux, Mac OS
drivefilename "Foo\`Bar" - Linux, Mac OS
drivefilename "Foo\"Bar' - Command Prompt
drivefilename "Foo`Bar" - Command Prompt
drivefilename 'Foo`"Bar' - PowerShell
drivefilename 'Foo`Bar' - PowerShell

4.57.00

Rewrote gam copy/move drivefile to provide more options and more useful (in my opinion) default options.

In prior versions of Gam, if you copied a source file/folder to a target folder that contained a file/folder of the same name as the source,
a new copy with the same name was created. Now, a source file is copied only it it is newer than the target file of the same name
in the target folder. Now, a source folder and its contents are merged with the target folder of the same name. There are options that
allow you to get the prior behavior.

Read the dcomentation here (https://github.com/taers232c/GAMADV-XTD/wiki/Users-Drive-Copy-Move) and test before using in production.

4.56.18

Modified code to mitigate a Google API bug that causes gam update group sync member to erroneously delete owners and managers.
There is small performance cost but as Google has introduced the bug twice, it's probably worth it.

4.56.17

Allow customreplyto "" in gam create/update group to allow for an empty custom reply-to email address.

Added cros_sn/crosfile_sn/croscsvfile_sn to <CrOSEntity> and <CrOSTypeEntity> to allow specifying ChromeOS devices by serial number.
This requires an additional API call per serial number to convert it to the deviceId that is required by the API.
For example:
    gam cros_ns 01234,56789 update ou "/PathToOu"
    gam info cros cros_ns 01234,56789
<CrOSEntity> ::=
        <CrOSIDList> | (cros_ns <SerialNumberList>) |
        (query:<QueryCrOS>)|(query:orgunitpath:<OrgUnitPath>)|(query <QueryCrOS>) |
        <FileSelector> | <CSVkmdSelector>
<CrOSTypeEntity> ::=
        (all cros)|
        (cros <CrOSList>)|
        (cros_sn <SerialNumberList>)|
        (cros_ou|cros_org <OrgUnitItem>)|
        (cros_ou_and_children|cros_org_and_children <OrgUnitItem>)|
        (cros_ous|cros_orgs <OrgUnitList>)|
        (cros_ous_and_children|cros_orgs_and_children <OrgUnitList>)|
        (crosfile|crosfile_sn <FileName> [charset <Charset>] [delimiter <Character>])|
        (croscsvfile|croscsvfile_sn <FileName>(:<FieldName>)+ [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <Character>])|
        (crosquery <QueryCrOS>)|
        (crosqueries <QueryCrOSList>)|
        (datafile cros|cros_sn|cros_ous|cros_ous_and_children
                <FileName> [charset <Charset>] [delimiter <Character>])|
        (csvkmd cros|cros_sn|cros_ous|cros_ous_and_children
                <FileName> [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>]
                keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <Character>]
                subkeyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <Character>]
                (matchfield <FieldName> <RegularExpression>)*
                [datafield <FieldName>(:<FieldName)* [delimiter <Character>]])|
        (croscsvdata <FieldName>(:<FieldName>*))

4.56.16

Added today and now options to date and time specifications.
<Date> ::=
        <Year>-<Month>-<Day> |
        (+|-)<Number>(d|w) |
        today
<DateTime> ::=
        <Year>-<Month>-<Day>(<Space>|T)<Hour>:<Minute> |
        (+|-)<Number>(m|h|d|w) |
        now|today
<Time> ::=
        <Year>-<Month>-<Day>(<Space>|T)<Hour>:<Minute>:<Second>[.<MilliSeconds>](Z|(+|-(<Hour>:<Minute>))) |
        (+|-)<Number>(m|h|d|w) |
        now|today
For <DateTime> and <Time>, now specifies the current hour, minute and second; today specifies zero for hour, minute and second.

Added elements to `<UserTypeEntity>` to allow specification of suspended members of groups and organization units:
    group_susp, groups_susp, group_users_susp, ou_susp, ou_and_children_susp, ous_susp, ous_and_children_susp

<UserTypeEntity> ::=
        (all users)|
        (user <UserItem>)|
        (users <UserList>)|
        (group|group_ns|group_susp <GroupItem>)|
        (groups|groups_ns|groups_susp <GroupList>)|
        (group_users|group_users_ns|group_users_susp <GroupList> [members] [managers] [owners] [primarydomain] [domains <DomainNameList>] [recursive] end)|
        (ou|ou_ns|ou_susp <OrgUnitItem>)|
        (ou_and_children|ou_and_children_ns|ou_and_children_susp <OrgUnitItem>)|
        (ous|ous_ns|ous_susp <OrgUnitList>)|
        (ous_and_children|ous_and_children_ns|ous_and_children_susp <OrgUnitList>)|
        (courseparticipants <CourseIDList>)|
        (students <CourseIDList>)|
        (teachers <CourseIDList>)|
        (license|licenses|licence|licences <SKUIDList>)|
        (file <FileName> [charset <Charset>] [delimiter <Character>])|
        (csvfile <FileName>(:<FieldName>)+ [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <Character>])|
        (query <QueryUser>)|
        (queries <QueryUserList>)|
        (datafile users|groups|groups_ns|groups_susp|ous|ous_ns|ous_susp|ous_and_children|ous_and_children_ns|ous_and_children_susp|courseparticipants|students|teachers
                <FileName> [charset <Charset>] [delimiter <Character>])|
        (csvkmd users|groups|groups_ns_|groups_susp|ous|ous_ns|ous_susp|ous_and_children|ous_and_children_ns|ous_and_children_susp|courseparticipants|students|teachers
                <FileName> [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>]
                keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <Character>]
                subkeyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <Character>]
                (matchfield <FieldName> <RegularExpression>)*
                [datafield <FieldName>(:<FieldName)* [delimiter <Character>]])|
        (csvdata <FieldName>(:<FieldName>*))

Updated gam update group create/sync to allow specification of suspended users.
gam update group|groups <GroupEntity> create|add [owner|manager|member] [usersonly|groupsonly] [notsuspended|suspended] <UserTypeEntity>
gam update group|groups <GroupEntity> sync [owner|manager|member] [usersonly|groupsonly] [addonly|removeonly] [notsuspended|suspended] <UserTypeEntity>

Updated `gam update group clear` to allow specification of non-suspended users.
gam update group|groups <GroupEntity> clear [member] [manager] [owner] [notsuspended|suspended]

Updated gam info org to allow specification of suspended users.
gam info org|ou <OrgUnitItem> [nousers|notsuspended|suspended] [children|child]
gam info orgs|ous <OrgUnitEntity> [nousers|notsuspended|suspended] [children|child]

4.56.15

Added formatjson option to gam info/show/print drivefileacls; added quotechar <Character> option to gam print drivefileacls.
gam info drivefileacl <TeamDriveEntityAdmin> <DriveFilePermissionIDorEmail> [showtitles] [formatjson]
gam show drivefileacl <TeamDriveEntityAdmin> [oneitemperrow] [showtitles] [formatjson]
        (orderby <DriveFileOrderByFieldName> [ascending|descending])*
gam print drivefileacls <TeamDriveEntityAdmin> [todrive [<ToDriveAttributes>]] [oneitemperrow] [showtitles] [formatjson] [quotechar <Character>]
        (orderby <DriveFileOrderByFieldName> [ascending|descending])*
gam <UserTypeEntity> info drivefileacl <TeamDriveEntityAdmin> <DriveFilePermissionIDorEmail> [showtitles] [formatjson] adminaccess
gam <UserTypeEntity> show drivefileacl <TeamDriveEntityAdmin> [oneitemperrow] [showtitles] [formatjson]
        (orderby <DriveFileOrderByFieldName> [ascending|descending])* adminaccess
gam <UserTypeEntity> print drivefileacls <TeamDriveEntityAdmin> [todrive [<ToDriveAttributes>]] [oneitemperrow] [showtitles] [formatjson] [quotechar <Character>]
        (orderby <DriveFileOrderByFieldName> [ascending|descending])* adminaccess
gam <UserTypeEntity> info drivefileacl <DriveFileEntity> <DriveFilePermissionIDorEmail> [showtitles] [formatjson]
gam <UserTypeEntity> show drivefileacl <DriveFileEntity> [oneitemperrow] [showtitles] [formatjson]
        (orderby <DriveFileOrderByFieldName> [ascending|descending])*
gam <UserTypeEntity> print drivefileacls <DriveFileEntity> [todrive [<ToDriveAttributes>]] [oneitemperrow] [showtitles] [formatjson] [quotechar <Character>]
        (orderby <DriveFileOrderByFieldName> [ascending|descending])*

4.56.14

Added commands to display information aboout a specific drive file ACL.
gam info drivefileacl <TeamDriveEntityAdmin> <DriveFilePermissionIDorEmail> [showtitles]
gam <UserTypeEntity> info drivefileacl <TeamDriveEntityAdmin> <DriveFilePermissionIDorEmail> [showtitles] adminaccess
gam <UserTypeEntity> info drivefileacl <DriveFileEntity> <DriveFilePermissionIDorEmail> [showtitles]

4.56.13

Added descriptionmatchpattern <RegularExpression> to the following commands to allow filtering on the group description;
Gam applies this filter after downloading the groups from the API.
gam print groups [todrive [<ToDriveAttributes>]] ([domain <DomainName>] ([member <UserItem>]|[query <QueryGroup>]))|[select <GroupEntity>]
        [emailmatchpattern <RegularExpression>] [namematchpattern <RegularExpression>] [descriptionmatchpattern <RegularExpression>]
        [maxresults <Number>] [allfields|([settings] <GroupFieldName>* [fields <GroupFieldNameList>])]
        [members|memberscount] [managers|managerscount] [owners|ownerscount] [countsonly]
        [convertcrnl] [delimiter <Character>] [sortheaders] [formatjson] [quotechar <Character>]
gam print group-members [todrive [<ToDriveAttributes>]]
        [domain <DomainName>] ([member <UserItem>]|[query <QueryGroup>]))|[group|group_ns <GroupItem>]|[select <GroupEntity>] [notsuspended]
        [emailmatchpattern <RegularExpression>] [namematchpattern <RegularExpression>] [descriptionmatchpattern <RegularExpression>]
        [roles <GroupRoleList>] [members] [managers] [owners] [membernames] <MembersFieldName>* [fields <MembersFieldNameList>]
        [userfields <UserFieldNameList>] [recursive [noduplicates]] [nogroupemail]
gam show group-members
        ([domain <DomainName>] ([member <UserItem>]|[query <QueryGroup>]))|[group|group_ns <GroupItem>]|[select <GroupEntity>] [notsuspended]
        [emailmatchpattern <RegularExpression>] [namematchpattern <RegularExpression>] [descriptionmatchpattern <RegularExpression>]
        [roles <GroupRoleList>] [members] [managers] [owners] [depth <Number>]

Modified gam update customer to use the patch API so that single fields of the customer address can be updated;
previously, all fields had to be specified in order to update a single field.

!4.56.12

Added query <QueryGroup> to gam print groups and gam print/show groupmembers to take advantage of API group filtering.
See: https://developers.google.com/admin-sdk/directory/v1/guides/search-groups

The emailmatchpattern <RegularExpression> and namematchpattern <RegularExpression> already did filtering but this was after downloading
all groups; query <QueryGroup> does the filtering at Google but is limited to exact and prefix-only filtering.

The arguments member <UserItem> and query <QueryGroup> are mutually exclusive.

gam print groups [todrive [<ToDriveAttributes>]] ([domain <DomainName>] ([member <UserItem>]|[query <QueryGroup>]))|[select <GroupEntity>]
        [emailmatchpattern <RegularExpression>] [namematchpattern <RegularExpression>]
        [maxresults <Number>] [allfields|([settings] <GroupFieldName>* [fields <GroupFieldNameList>])]
        [members|memberscount] [managers|managerscount] [owners|ownerscount] [countsonly]
        [convertcrnl] [delimiter <Character>] [sortheaders] [formatjson] [quotechar <Character>]
gam print group-members [todrive [<ToDriveAttributes>]]
        [domain <DomainName>] ([member <UserItem>]|[query <QueryGroup>]))|[group|group_ns <GroupItem>]|[select <GroupEntity>] [notsuspended]
        [emailmatchpattern <RegularExpression>] [namematchpattern <RegularExpression>]
        [roles <GroupRoleList>] [members] [managers] [owners] [membernames] <MembersFieldName>* [fields <MembersFieldNameList>]
        [userfields <UserFieldNameList>] [recursive [noduplicates]] [nogroupemail]
gam show group-members
        ([domain <DomainName>] ([member <UserItem>]|[query <QueryGroup>]))|[group|group_ns <GroupItem>]|[select <GroupEntity>] [notsuspended]
        [emailmatchpattern <RegularExpression>] [namematchpattern <RegularExpression>]
        [roles <GroupRoleList>] [members] [managers] [owners] [depth <Number>]

4.56.11

Allow empty replyto <EmailAddress> in gam create/update sendas and gam signature.

4.56.10

Added updateprimaryemail <RegularExpression> <EmailReplacement> option to gam update user to allow modifying the user's current primary email address.
For example, to change the domain of a set of users from the current domain to newdomain.com:
gam ou /Path/To/Ou update user updateprimaryemail "^(.+)@.*$" "\1@newdomain.com"
To change graduating students email addresses from flastname@domain.com to flastname_grad@domain.com:
gam ou /Path/To/Ou update user updateprimaryemail "^(.+)@(.+)$" "\1_grad@\2"
If the user's current primary email address does not match the <RegularExpression> then no modification is made.

4.56.09

Added support for License SKU G Suite Enterprise for Education.

4.56.08

Fixed bug in gam update calattendees.

4.56.07

Added delete <EmailAddress> option to gam update calattendees to allow for attendee deletion.
gam <UserTypeEntity> update calattendees <CalendarManageEntity> <EventEntity> [anyorganizer]
        [csv <FileName>] (replace <EmailAddress> <EmailAddress>)* (delete <EmailAddress>)* [doit]
For details, see: https://github.com/taers232c/GAMADV-XTD/wiki/Users-Calendars-Events

Updated gam update user to be able to send a notification email when a user's password is changed.
For details, see: https://github.com/taers232c/GAMADV-XTD/wiki/Users

4.56.06

Fixed a parsing error in gam print/show tokens where an invalid argument was not caught.

Added countsonly option to gam print/show messages/threads that displays only the count of number of messages/threads, not any message content.
gam <UserTypeEntity> show messages|threads (((query <QueryGmail>) (matchlabel <LabelName>) [or|and])* [quick|notquick] [max_to_show|max_to_process <Number>] [includespamtrash])|(ids <MessageIDEntity>)
        [countsonly] [headers <SMTPHeaderList>] [showlabels] [showbody] [showsize] [showsnippet] [showattachments [attachmentnamepattern <RegularExpression>]]
gam <UserTypeEntity> print messages|threads (((query <QueryGmail>) (matchlabel <LabelName>) [or|and])* [quick|notquick] [max_to_print|max_to_process <Number>] [includespamtrash])|(ids <MessageIDEntity>)
        [countsonly] [headers <SMTPHeaderList>] [showlabels] [showbody] [showsize] [showsnippet] [convertcrnl] [delimiter <Character>] [todrive [<ToDriveAttributes>]]

Added formatjson argument to gam info/show calendars/calsettings/calendaracls/events/resources.
gam <UserTypeEntity> info calendars <CalendarManageEntity> [formatjson]
gam <UserTypeEntity> show calendars <CalendarPrintShowEntity> [permissions] [formatjson]
gam <UserTypeEntity> show calsettings [formatjson]
gam calendar|calendars <CalendarEntity> info calendaracls <CalendarACLScopeEntity> [formatjson]
gam calendar|calendars <CalendarEntity> show calendaracls [formatjson]
gam calendar|calendars <CalendarEntity> showacl [formatjson]
gam resource <ResourceID> info calendaracls <CalendarACLScopeEntity> [formatjson]
gam resource <ResourceID> show calendaracls [formatjson]
gam resources <ResourceEntity> info calendaracls <CalendarACLScopeEntity> [formatjson]
gam resources <ResourceEntity> show calendaracls [formatjson]
gam <UserTypeEntity> info calendaracls <CalendarManageEntity> <CalendarACLScopeEntity> [formatjson]
gam <UserTypeEntity> show calendaracls <CalendarManageEntity> [formatjson]
gam calendar|calendars <CalendarEntity> info events <EventEntity> [maxinstances <Number>] [formatjson]
gam calendar|calendars <CalendarEntity> show events ([allevents] <EventSelectProperties>*) <EventDisplayProperties>* [formatjson]
gam <UserTypeEntity> info events <CalendarManageEntity> <EventEntity> [maxinstances <Number>] [formatjson]
gam <UserTypeEntity> show events <CalendarPrintShowEntity> ([allevents] <EventSelectProperties>*) <EventDisplayProperties>* [formatjson]
gam show resources [allfields|<ResourceFieldName>*|(fields <ResourceFieldNameList>)] [convertcrnl] [formatjson]

Added formatjson and quotechar <Character> arguments to gam print calendars/calsettings/calendaracls/events/resources.
gam <UserTypeEntity> print calendars <CalendarPrintShowEntity> [todrive [<ToDriveAttributes>]] [permissions]
         [formatjson] [quotechar <Character>]
gam <UserTypeEntity> print calsettings [todrive [<ToDriveAttributes>]] [formatjson] [quotechar <Character>]
gam calendar|calendars <CalendarEntity> print calendaracls [todrive [<ToDriveAttributes>]] [formatjson] [quotechar <Character>]
gam resource <ResourceID> print calendaracls [todrive [<ToDriveAttributes>]] [formatjson] [quotechar <Character>]
gam resources <ResourceEntity> print calendaracls [todrive [<ToDriveAttributes>]] [formatjson] [quotechar <Character>]
gam <UserTypeEntity> print calendaracls <CalendarManageEntity> [todrive [<ToDriveAttributes>]] [formatjson] [quotechar <Character>]
gam calendar|calendars <CalendarEntity> print events [todrive [<ToDriveAttributes>]] <EventSelectProperties>*) [todrive [<ToDriveAttributes>]] <EventDisplayProperties>*
         [formatjson] [quotechar <Character>]
gam <UserTypeEntity> print events <CalendarPrintShowEntity> ([allevents] <EventSelectProperties>*) [todrive [<ToDriveAttributes>]] <EventDisplayProperties>*
         [formatjson] [quotechar <Character>]
gam print resources [todrive [<ToDriveAttributes>]] [allfields|<ResourceFieldName>*|(fields <ResourceFieldNameList>)] [convertcrnl]
        [formatjson] [quotechar <Character>]

4.56.05

Fixed a bug in gam copy drivefile that would cause a trap.

4.56.04

Fixed a bug in gam print messages that would cause a trap when the showlabels option was specified.

4.56.03

Added fields <TeamDriveFieldNameList> and formatjson arguments to gam info teamdrive and gam show teamdriveinfo/teamdrives.

gam info teamdrive <TeamDriveEntity> [fields <TeamDriveFieldNameList>] [formatjson]
gam show teamdriveinfo <TeamDriveEntity> [fields <TeamDriveFieldNameList>] [formatjson]
gam show teamdrives [teamdriveadminquery|query <QueryTeamDrive>] [matchname <RegularExpression>]
        [fields <TeamDriveFieldNameList>] [formatjson]
gam <UserTypeEntity> info teamdrive <TeamDriveEntity> adminaccess [fields <TeamDriveFieldNameList>] [formatjson]
gam <UserTypeEntity> show teamdriveinfo <TeamDriveEntity> adminaccess [fields <TeamDriveFieldNameList>] [formatjson]
gam <UserTypeEntity> show teamdrives [adminaccess|asadmin [teamdriveadminquery|query <QueryTeamDrive>]] [matchname <RegularExpression>] (role <TeamDriveACLRole>)*
        [fields <TeamDriveFieldNameList>] [formatjson]

Added fields <TeamDriveFieldNameList> and formatjson and quotechar <Character> arguments to gam print teamdrives.

gam print teamdrives [teamdriveadminquery|query <QueryTeamDrive>] [matchname <RegularExpression>] [todrive [<ToDriveAttributes>]]
        [fields <TeamDriveFieldNameList>] [formatjson] [quotechar <Character>]
gam <UserTypeEntity> print teamdrives [adminaccess|asadmin [teamdriveadminquery|query <QueryTeamDrive>]] [matchname <RegularExpression>] (role <TeamDriveACLRole>)* [todrive [<ToDriveAttributes>]]
        [fields <TeamDriveFieldNameList>] [formatjson] [quotechar <Character>]

4.56.02

When formatjson argument is used with gam info/show contacts/contactgroups/gal, non JSON output is suppressed.

Handle "cannotChangeOrganizer - Cannot change the organizer of attendees copy of the event." error in the following commands:
gam calendar|calendars <CalendarEntity> move events <EventEntity> to <CalendarItem> [notifyattendees]
gam <UserTypeEntity> move events <CalendarManageEntity> <EventEntity> to <CalendarItem> [notifyattendees]

4.56.01

Added formatjson argument to gam info/show contacts/contactgroups/gal.
gam info contacts <ContactEntity> [basic|full] [showgroups]
        [fields <ContactFieldNameList>] [formatjson]
gam show contacts [query <QueryContact>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>]
        [basic|full] [showgroups] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]]
        [fields <ContactFieldNameList>] [formatjson]
gam <UserTypeEntity> info contacts <ContactEntity> [basic|full] [showgroups]
        [fields <ContactFieldNameList>] [formatjson]
gam <UserTypeEntity> show contacts [query <QueryContact>] [contactgroup <ContactGroupItem>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>]
        [basic|full] [showgroups] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]]
        [fields <ContactFieldNameList>] [formatjson]
gam <UserTypeEntity> print contacts [todrive [<ToDriveAttributes>]] [query <QueryContact>] [contactgroup <ContactGroupItem>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>]
        [basic|full] [showgroups] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]]
        [fields <ContactFieldNameList>] [formatjson] [quotechar <Character>]
gam <UserTypeEntity> info contactgroups <ContactGroupEntity> [formatjson]
gam <UserTypeEntity> show contactgroups [updated_min <Date>]
        [basic|full] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]]
gam info gal <ContactEntity> [basic|full]
        [fields <ContactFieldNameList>] [formatjson]
gam show gal [query <QueryContact>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>]
        [basic|full] [orderby <ContactOrderByFieldName> [ascending|descending]]
        [fields <ContactFieldNameList>] [formatjson]

Added formatjson and quotechar <Character> arguments to gam print contacts/contactgroups/gal.
gam print contacts [todrive [<ToDriveAttributes>]] [query <QueryContact>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>]
        [basic|full] [showgroups] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]]
        [fields <ContactFieldNameList>] [formatjson] [quotechar <Character>]
gam <UserTypeEntity> print contactgroups [todrive [<ToDriveAttributes>]] [updated_min <Date>]
        [basic|full] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]]
        [formatjson] [quotechar <Character>]
gam print gal [todrive [<ToDriveAttributes>]] [query <QueryContact>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>]
        [basic|full] [orderby <ContactOrderByFieldName> [ascending|descending]]
        [fields <ContactFieldNameList>] [formatjson] [quotechar <Character>]

4.56.00

Update httplib2 to 0.11.3.

4.55.59

Added formatjson argument to gam info customer/instance/domain.
gam info customer [formatjson]
gam info instance [logo <FileName>] [formatjson]
gam info domain [<DomainName>] [formatjson]

Added formatjson argument to gam info course/courses.
gam info course <CourseID> [owneremail] [alias|aliases] [show all|students|teachers] [countsonly]
        [fields <CourseFieldNameList>] [skipfields <CourseFieldNameList>] [formatjson]
gam info courses <CourseEntity> [owneremail] [alias|aliases] [show all|students|teachers] [countsonly]
        [fields <CourseFieldNameList>] [skipfields <CourseFieldNameList>] [formatjson]

Added formatjson and quotechar <Character> arguments to gam print domains/courses/course-participants/course-announcements/course-work/course-submissions.
gam print domains [todrive [<ToDriveAttributes>]] [formatjson] [quotechar <Character>]
gam print courses [todrive [<ToDriveAttributes>]] (course|class <CourseEntity>)*|([teacher <UserItem>] [student <UserItem>] [states <CourseStateList>])
        [owneremail] [owneremailmatchpattern <RegularExpression>] [alias|aliases][delimiter <Character>] [show all|students|teachers] [countsonly]
        [fields <CourseFieldNameList>] [skipfields <CourseFieldNameList>] [formatjson] [quotechar <Character>]
gam print course-participants [todrive [<ToDriveAttributes>]] (course|class <CourseEntity>)*|([teacher <UserItem>] [student <UserItem>] [states <CourseStateList>])
        [show all|students|teachers] [formatjson] [quotechar <Character>]
gam print course-announcements [todrive [<ToDriveAttributes>]] (course|class <CourseEntity>)*|([teacher <UserItem>] [student <UserItem>] states <CourseStateList>])
        (announcementids <CourseAnnouncementIDEntity>)|((announcementstates <CourseAnnouncementStateList>)* (orderby <CourseAnnouncementOrderByFieldName> [ascending|descending])*)
        [creatoremail] [fields <CourseAnnouncementFieldNameList>] [formatjson] [quotechar <Character>]
gam print course-work [todrive [<ToDriveAttributes>]] (course|class <CourseEntity>)*|([teacher <UserItem>] [student <UserItem>] states <CourseStateList>])
        (workids <CourseWorkIDEntity>)|((workstates <CourseWorkStateList>)* (orderby <CourseWorkOrderByFieldName> [ascending|descending])*)
        [creatoremail] [fields <CourseWorkFieldNameList>] [formatjson] [quotechar <Character>]
gam print course-submissions [todrive [<ToDriveAttributes>]] (course|class <CourseEntity>)*|([teacher <UserItem>] [student <UserItem>] states <CourseStateList>])
        (workids <CourseWorkIDEntity>)|((workstates <CourseWorkStateList>)* (orderby <CourseWorkOrderByFieldName> [ascending|descending])*)
        (submissionids <CourseSubmissionIDEntity>)|((submissionstates <CourseSubmissionStateList>)*) [late|notlate]
        [fields <CourseSubmissionFieldNameList>] [formatjson] [quotechar <Character>] [showuserprofile]

4.55.58

Improved error handling for gam update/delete/info mobile when an invalid <MobileID> is given. The API returns an error indicating that Gam should retry the command
but this will usually never succeed. Gam now retries the command once rather than ten times and then generates an error.

Mobile devices can have a deviceId with an embedded newline (NL) character; these are now converted to "\n" in gam print mobile if gam.cfg csv_output_convert_cr_nl = True.

4.55.57

GAM has been updated to address the issues addressed in the article: "Discontinuing support for JSON-RPC and Global HTTP Batch Endpoints" at https://developers.googleblog.com/.

GAM has been updated to use the `patch` method with `gam update calendar` so that the values of parameters `selected` and `hidden` are preserved.

Thanks to Jan Almeroth for suggesting the following enhancement.
Added [csv [todrive [<ToDriveAttributes>]]] to gam create drivefile so that the user, name and drive file ID
of the created files will be written to a CSV file.
gam <UserTypeEntity> create|add drivefile [drivefilename <DriveFileName>] <DriveFileAddAttributes>* [csv [todrive [<ToDriveAttributes>]]]

Added the ability to transfer all of a user's assets: drive files, calendars and Google+ information, in a single command.
<DataTransferService> ::=
        calendar|
        googledrive|gdrive|drive|"drive and docs"|
        gplus|googleplus|google+
<DataTransferServiceList> ::= "<DataTransferService>(,<DataTransferService>)*"

gam create|add datatransfer|transfer <OldOwnerID> <DataTransferServiceList> <NewOwnerID>
        [private|shared|all] (<ParameterKey> <ParameterValue>)*
        [release_resources]

Added a command to display transfer requests in a formatted form.
gam show datatransfers|transfers [olduser|oldowner <UserItem>] [newuser|newowner <UserItem>] [status <String>] [delimiter <Character>]

4.55.56

In gam info group/user, aliases will be displayed as `alias: <EmailAddress>` to be consistent with other items.

4.55.55

Fixed a bug where <FileName>(:<FieldName>)+ was not parsed correctly on Windows when <FileName> contained a drive specification;
e.g., csvfile C:\Users\Admin\Downloads\Data.csv:primaryEmail.

<CrOSTypeEntity> ::=
        croscsvfile <FileName>(:<FieldName>)+ [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <Character>]
<UserTypeEntity> ::=
        csvfile <FileName>(:<FieldName>)+ [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <Character>]
<FileSelector> ::=
        csvfile <FileName>(:<FieldName>)+ [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <Character>]

4.55.54

Code cleanup.

Added onlyteamdrives to <CorporaAttribute>; this is used in gam print filelist/filecounts to limit the operation to files/folders on Team Drives.
The <CorporaAttribute> allteamdrives actually means files owned by or shared to the user and Team Drive files.
<CorporaAttribute> ::= allteamdrives|domain|onlyteamdrives|user

The Drive REST API V3 does not return permissions for Team Drive files, only permissionsIds which are not typically useful.
gam show fileinfo/print filelist have been enhanced to get permissions for Team Drive files if permissions is explicitly
specified in <DriveFieldName>*|(fields <DriveFieldNameList>). This requires an extra API call per Team Drive file so use sparingly.

4.55.53

Update to Google API CLient 1.6.5. This should resolve a problem with downloading large Google Docs.

4.55.52

Allow having an empty buildingid with gam create/update resource; this is only valid for resources with
category category_unknown.

4.55.51

Added cacerts_pem variable to gam.cfg to allow specification of an alternative SSL Root CA certificates file.
This would typically be used when your site uses SSL decryption and you need a vendor specific certificate.
By default, GAM uses an internal copy of the cacerts.pem file found in the folder containing gam.py/gam.exe.
If you need to add a vendor specific certificate, copy cacerts.pem to the folder containing gam.cfg, append your
vendor certificate PEM file to the copied file and change gam.cfg/cacerts_pem to point to the copied file.
cacerts_pem
        SSL Root CA certificates file
        Default: Blank, internal cacerts.pem will be used

Fixed a bug where a duplicate extension was added to a file downloaded from Google Drive; this occurred when the file
had an uppercase extension on Google Drive.

4.55.50

Added category synonyms category_unknown and unknown to <ResourceAttributes>.
<ResourceAttributes> ::=
        (category other|room|conference_room|category_unknown|unknown)|

4.55.49

Added the ability to specify multiple queries in the following print commands.
gam print alias|aliases [todrive [<ToDriveAttributes>]]
        [(query <QueryUser>)|(queries <QueryUserList>)]
gam [<CrOSTypeEntity>] print cros [todrive [<ToDriveAttributes>]]
        [(query <QueryCrOS>)|(queries <QueryCrOSList>)|(select <CrOSTypeEntity>)] [limittoou <OrgUnitItem>]
gam [<CrOSTypeEntity>] print crosactivity [todrive [<ToDriveAttributes>]]
        [(query <QueryCrOS>)|(queries <QueryCrOSList>)|(select <CrOSTypeEntity>)] [limittoou <OrgUnitItem>]
gam print mobile [todrive [<ToDriveAttributes>]]
        [(query <QueryMobile>)|(queries <QueryMobileList>)]
gam print printer|printers [todrive [<ToDriveAttributes>]]
        [(query <QueryPrinter>)|(queries <QueryPrinterList>)] [type <String>] [status <String>]
gam printjob|printjobs <PrinterID>|any fetch
        [(query <QueryPrintJob>)|(queries <QueryPrintJobList>)] [olderthan|newerthan <PrintJobAge>] [status <PrintJobStatus>]
gam print printjob|printjobs [todrive [<ToDriveAttributes>]] [printer|printerid <PrinterID>]
        [(query <QueryPrintJob>)|(queries <QueryPrintJobList>)] [olderthan|newerthan <PrintJobAge>] [status <PrintJobStatus>]
gam print users [todrive [<ToDriveAttributes>]]
        ([domain <DomainName>] [(query <QueryUser>)|(queries <QueryUserList>)] [deleted_only|only_deleted])|[select <UserTypeEntity>]

4.55.48

Added the ability to specify multiple queries when specifying collections of Users or ChromeOS devices.
<QueryCrOSList> ::= "<QueryCrOS>(,<QueryCrOS>)*"
<QueryUserList> ::= "<QueryUser>(,<QueryUser>)*"
<CrOSTypeEntity> ::=
        (crosqueries <QueryCrOSList>)|
<UserTypeEntity> ::=
        (queries <QueryUserList>)|

Quoting a query list takes some thought, in particular if a query contains a space, a comma or a single quote.
In all cases, the list of queries is surrounded with double quotes.
If a query doesn't contain spaces or single quotes, no special quoting is required.
gam queries "orgTitle=Specialist,orgTitle=Technician" print users allfields
gam cros_queries "id:HY3,id:5CD" print cros allfields nolists
If a query does contain a single quote, you surround it with escaped double quotes.
gam queries "\"orgName='Sales Org' orgTitle=Manager\",\"orgName='Marketing Org'\"" print users allfields

For quoting rules, see: https://github.com/taers232c/GAMADV-XTD/wiki/Lists

4.55.47

The Google Reports API does not have complete data available in real time, you must go back some number of days to get the full report data.
The fulldatarequired all|<ReportsAppList> option tells Gam to go backward a day at a time until the Reports API indicates that full data is
available for the applications specified in <ReportsAppList>.
<ReportsApp> ::=
      accounts|
      app_maker|
      apps_scripts|
      calendar|
      classroom|
      cros|
      device_management|
      drive|
      gmail|
      gplus|
      meet|
      mobile|
      sites
<ReportsAppList> ::= "<ReportsApp>(,<ReportsApp>)*"

gam report users|user [todrive [<ToDriveAttributes>]] [date <Date>] [nodatechange | (fulldatarequired all|<ReportsAppList>)]
        [(user all|<UserItem>)|(select <UserTypeEntity>)] [filter|filters <String>] [fields|parameters <String>]
        [maxactivities <Number>] [maxresults <Number>]
gam report customers|customer|domain [todrive [<ToDriveAttributes>]] [date <Date>] [nodatechange | (fulldatarequired all|<ReportsAppList>)]
        [fields|parameters <String>]

A good example is user drive quotas: accounts:drive_used_quota_in_mb,accounts:gmail_used_quota_in_mb,accounts:total_quota_in_mb,accounts:used_quota_in_mb.
These items are not available immediately, you must go back several days to get the full data.

gam report users user user@domain.com fulldatarequired accounts

4.55.46

Handle errors when gamcache directory is not accessible.

4.55.45

Fixed incompatability with Basic Gam when the fields option is used with gam print group-members.
With Basic Gam, the command "gam print group-members fields email,type" produced three columns: group,email,type
With Advanced Gam, the command "gam print group-members fields email,type" produced two columns: email,type
The group email address column was included only if group was in the fields list; now, Advanced Gam will also output the group
email address column even if it's not in the field list. In the special case where you don't want the group email address column,
use the option nogroupemail.
gam print group-members [todrive [<ToDriveAttributes>]]
        [domain <DomainName>] [member <UserItem>])|[group|group_ns <GroupItem>]|[select <GroupEntity>] [notsuspended]
        [emailmatchpattern <RegularExpression>] [namematchpattern <RegularExpression>]
        [roles <GroupRoleList>] [members] [managers] [owners] [membernames] <MembersFieldName>* [fields <MembersFieldNameList>]
        [userfields <UserFieldNameList>] [recursive [noduplicates]] [nogroupemail]

4.55.44

Improve MacOS version of GAM's use of OpenSSL 1.0.2n.
Recode pyinstaller .spec files.

4.55.43

Added Team Drive support to print/show file counts by MIME type for users.
gam <UserTypeEntity> show filecounts [corpora <CorporaAttribute>] [anyowner|(showownedby any|me|others)]
        [query <QueryDriveFile>] [fullquery <QueryDriveFile>] [<DriveFileQueryShortcut>] [showmimetype [not] <MimeTypeList>]
        [select <TeamDriveEntity>]
gam <UserTypeEntity> print filecounts [todrive [<ToDriveAttributes>]] [corpora <CorporaAttribute>] [anyowner|(showownedby any|me|others)]
        [query <QueryDriveFile>] [fullquery <QueryDriveFile>] [<DriveFileQueryShortcut>] [showmimetype [not] <MimeTypeList>]
        [select <TeamDriveEntity>]

4.55.42

Added commands to print/show file counts by MIME type for users.
gam <UserTypeEntity> show filecounts [anyowner|(showownedby any|me|others)]
        [query <QueryDriveFile>] [fullquery <QueryDriveFile>] [<DriveFileQueryShortcut>] [showmimetype [not] <MimeTypeList>]
gam <UserTypeEntity> print filecounts [todrive [<ToDriveAttributes>]] [anyowner|(showownedby any|me|others)]
        [query <QueryDriveFile>] [fullquery <QueryDriveFile>] [<DriveFileQueryShortcut>] [showmimetype [not] <MimeTypeList>]

4.55.41

Fixed bug that made some gam print commands throw an exception.

4.55.40

Update MacOS version of GAM to use OpenSSL 1.0.2n.

4.55.39

Fixed bug in gam update group sync when the command was of the following form:
gam update group csvkmd groups.csv keyfield group matchfield role MEMBER datafield email sync member csvdata email

4.55.38

Display allowedConferenceSolutionTypes in gam info/print/show calendars.

4.55.37

Added command to print classic sites ACLs.
gam [<UserTypeEntity>] print siteacls <SiteEntity> [todrive [<ToDriveAttributes>]]

4.55.36

Changed gam print filelist to display parents information in the same format regardless of the value of drive_v3_native_name in gam.cfg.
Previously, if drive_v3_native_names was false, the columns were:
* parents - The number of parents
# parents.N.id - The id of parent N: N repeats from 0 to number of parents-1
Previously, if drive_v3_native_names was true, the single column was:
* parents - The space separated list of parent ids
Now, regardless of the value of drive_v3_native_names, the columns are:
* parents - The number of parents
# parents.N.id - The id of parent N: N repeats from 0 to number of parents-1
# parents.N.isRoot - True if parents.N.id is the root folder id, False otherwise

4.55.35

Code cleanup.

Fixed bug in gam print filelist where specifying the field owners.emailaddress caused an exception.

4.55.34

Added showstudentemails option to gam show/print guardians so that the student email address will be displayed in addition to the student ID.
This requires an additional API call per guardian.
gam show guardian|guardians invitations [showstudentemails] [states <GuardianStateList>] [invitedguardian <EmailAddress>] [student <StudentItem>] [<UserTypeEntity>]
gam print guardian|guardians invitations [todrive [<ToDriveAttributes>]] [showstudentemails] [states <GuardianStateList>] [invitedguardian <EmailAddress>] [student <StudentItem>] [<UserTypeEntity>]
gam show guardian|guardians [showstudentemails] [invitedguardian <EmailAddress>] [student <StudentItem>] [<UserTypeEntity>]
gam print guardian|guardians [todrive [<ToDriveAttributes>]] [showstudentemails] [invitedguardian <EmailAddress>] [student <StudentItem>] [<UserTypeEntity>]

4.55.33

Added formatjson argument to gam info cros/print cros/print crosactivity to cause output to be in JSON format.

By default, when writing CSV files, Gam uses a quote character of double quote ". The quote character is used to enclose columns that contain
the quote character itself, the column delimiter (comma by default) and new-line characters. Any quote characters within the column are doubled.
When using the gam print cros/crosactivity commands with the formatjson option, double quotes are used extensively in the data resulting in hard to read/process output.
The quotechar <Character> option allows you to choose an alternate quote character, single quote for instance, that makes for readable/processable output.
quotechar defaults to gam.cfg/csv_output_quote_char.

gam info cros <CrOSEntity> [nolists] [listlimit <Number>] [start <Date>] [end <Date>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>] [downloadfile latest|<Time>] [targetfolder <FilePath>] [formatjson]
gam <CrOSTypeEntity> info [nolists] [listlimit <Number>] [start <Date>] [end <Date>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>] [downloadfile latest|<Time>] [targetfolder <FilePath>] [formatjson]
gam [<CrOSTypeEntity>] print cros [todrive [<ToDriveAttributes>]] [query <QueryCrOS>]|[select <CrOSTypeEntity>] [limittoou <OrgUnitItem>]
        [orderby <CrOSOrderByFieldName> [ascending|descending]] [nolists|recentusers|timeranges|devicefiles] [listlimit <Number>] [start <Date>] [end <Date>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>] [sortheaders] [formatjson] [quotechar <Character>]
gam [<CrOSTypeEntity>] print crosactivity [todrive [<ToDriveAttributes>]] [query <QueryCrOS>]|[select <CrOSTypeEntity>] [limittoou <OrgUnitItem>]
        [orderby <CrOSOrderByFieldName> [ascending|descending]] [recentusers] [timeranges] [both] [devicefiles] [all] [listlimit <Number>] [start <Date>] [end <Date>]
        [delimiter <Character>] [formatjson] [quotechar <Character>]

4.55.32

Add special handling for Organizational Unit names containing the characters + and %.

4.55.31

Fixed error in `gam update drivefileacl/updatedrivefileacl` where specifying a group email address caused the command to fail.

Added support for domain/user contact photos.
gam update contactphotos <ContactEntity>|([query <QueryContact>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>]) [drivedir|(sourcefolder <FilePath>)] [filename <FileNamePattern>]
gam get contactphotos <ContactEntity>|([query <QueryContact>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>]) [drivedir|(targetfolder <FilePath>)] [filename <FileNamePattern>]
gam delete contactphotos <ContactEntity>|([query <QueryContact>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>])
gam <UserTypeEntity> update contactphotos <ContactEntity>|([query <QueryContact>] [contactgroup <ContactGroupItem>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>]) [drivedir|(sourcefolder <FilePath>)] [filename <FileNamePattern>]
gam <UserTypeEntity> get contactphotos <ContactEntity>|([query <QueryContact>] [contactgroup <ContactGroupItem>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>]) [drivedir|(targetfolder <FilePath>)] [filename <FileNamePattern>]
gam <UserTypeEntity> delete contactphotos <ContactEntity>|([query <QueryContact>] [contactgroup <ContactGroupItem>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>])
The default directory is the current working directory, drivedir specifies the value of drive_dir from gam.cfg and
sourcefolder/targetfolder <FilePath> specifies a user-chosen path.
<FileNamePattern> can contain the strings #email# and #contactid# which will be replaced by the the contact's primary emailaddress or the contact ID.
If not specified, <FileNamePattern> defaults to "#contactid#.jpg".

Previously, when upating a user's photo, you specified a <FileNamePattern> that> had to specify a full file path and
could contain the strings #email#, #user# and #username# which would be replaced by the the user's full emailaddress or just the name portion.
<FileNamePattern> can now be omitted, it defaults to "#email#.jpg".
gam <UserTypeEntity> update photo [<FileNamePattern>]

A new form of the command allows you to separate the directory and file name specifications.
The default directory is the current working directory, drivedir specifies the value of drive_dir from gam.cfg and
sourcefolder <FilePath> specifies a user-chosen path.
If not specified, <FileNamePattern> defaults to "#email#.jpg".
gam <UserTypeEntity> update photo [drivedir|(sourcefolder <FilePath>)] [filename <FileNamePattern>]

Previously, when downloading a user's photo, the file name was always the user's email address with a .jpg extension.
You can now specify a <FileNamePattern> that can contain the strings #email#, #user# and #username# which will be replaced by the the user's full emailaddress or just the name portion.
<FileNamePattern> defaults to "#email#.jpg".
gam <UserTypeEntity> get photo [drivedir|(targetfolder <FilePath>)] [filename <FileNamePattern>] [noshow]

4.55.30

Handle mysterious start_time and end_time values in gam report calendar.

4.55.29

Fixed bug where {RT}...{Tag}...{/RT} was not properly deleted when Tag was not defined/empty.

4.55.28

Added the ability to update domain/user contacts by querying for them.
gam update contacts <ContactEntity>|([query <QueryContact>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>]) <ContactAttributes>+
gam <UserTypeEntity> update contacts <ContactEntity>|([query <QueryContact>] [contactgroup <ContactGroupItem>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min <Date>] [endquery]) [contactgroup <ContactGroupItem>] <ContactAttributes>+

4.55.27

Fixed bug in gam get drivefile where Google Docs files would not be downloaded if format <FileFormatList> was not specified.

4.55.26

Added targetname <FileName> and overwrite [<Boolean>] to gam get drivefile. By default, the target (local) filename is the Google Drive filename; targetname <FileName>
let's you specify the target filename. By default, an existing target file will not be overwritten; a numeric prefix is added to the filename.
Specifying overwrite or overwrite true will cause the target file to be overwritten. Not specifying overwrite or specifying overwrite false means a new file will be created.
gam <UserTypeEntity> get drivefile <DriveFileEntity> [format <FileFormatList>] [targetfolder <FilePath>] [targetname <FileName>] [overwrite [<Boolean>]] [revision <DriveFileRevisionID>]

4.55.25

Added the ability to select owners subfields in gam show fileinfo and gam print filelist; these fields are included
in <DriveFieldName> and <DriveFieldNameList>.
<DriveOwnersSubfieldName> ::=
        owners.displayname|
        owners.emailaddress|
        owners.isauthenticateduser|
        owners.me|
        owners.permissionid|
        owners.photolink|
        owners.picture

4.55.24

Commands that use the emailmatchpattern, owneremailmatchpattern, namematchpattern or attachmentnamepattern options will now
perform case insensitive matches. The same is true for the matchfield option in gam info/show/print events.

4.55.23

Added emailmatchpattern <RegularExpression> and namematchpattern <RegularExpression> to the following commands to
allow filtering on the group email address and name; Gam applies these filters after downloading the groups from the API.
gam print groups [todrive [<ToDriveAttributes>]] ([domain <DomainName>] [member <UserItem>])|[select <GroupEntity>]
        [emailmatchpattern <RegularExpression>] [namematchpattern <RegularExpression>]
        [maxresults <Number>] [allfields|([settings] <GroupFieldName>* [fields <GroupFieldNameList>])]
        [members|memberscount] [managers|managerscount] [owners|ownerscount] [countsonly]
        [convertcrnl] [delimiter <Character>] [sortheaders] [formatjson] [quotechar <Character>]
gam print group-members [todrive [<ToDriveAttributes>]]
        [domain <DomainName>] [member <UserItem>])|[group|group_ns <GroupItem>]|[select <GroupEntity>] [notsuspended]
        [emailmatchpattern <RegularExpression>] [namematchpattern <RegularExpression>]
        [roles <GroupRoleList>] [members] [managers] [owners] [membernames] <MembersFieldName>*
        [fields <MembersFieldNameList>] [userfields <UserFieldNameList>] [recursive [noduplicates]]
gam show group-members
        ([domain <DomainName>] [member <UserItem>])|[group|group_ns <GroupItem>]|[select <GroupEntity>] [notsuspended]
        [emailmatchpattern <RegularExpression>] [namematchpattern <RegularExpression>]
        [roles <GroupRoleList>] [members] [managers] [owners] [depth <Number>]

4.55.22

Improve error reporting when scopes are not authorized.

4.55.21

Added owneremailmatchpattern <RegularExpression> option to gam print courses to allow filtering of courses based on the owner emailaddress.
The `<RegularExpression>` can be used to match a specific address "foo@bar.com", a pattern ".*test.*" or the special value "Unknown user" for those
courses where the owner has been deleted.
gam print courses [todrive [<ToDriveAttributes>]] (course|class <CourseEntity>)*|([teacher <UserItem>] [student <UserItem>] [states <CourseStateList>])
        [owneremail] [owneremailmatchpattern <RegularExpression>] [alias|aliases][delimiter <Character>] [show all|students|teachers] [countsonly]
        [fields <CourseFieldNameList>] [skipfields <CourseFieldNameList>]

4.55.20

Added from and replyto options to gam sendemail. By default, emails will be from the admin user named in oauth2.txt, override this with the from <UserItem> option.
gam sendemail <RecipientEntity> [from <UserItem>] [replyto <EmailAddress>] subject <String> (message <String>)|(file <FileName> [charset <CharSet>]) (replace <Tag> <String>)*
        [newuser <UserItem> firstname|givenname <String> lastname|familyname <string> password <Password>]

4.55.19

Added error handling for invalid ownerId/creatorUserId in gam print courses/course-announcements/course-work.

4.55.18

Many gam print commands display "Getting ... (n/m)" messages while stepping through lists of items; this let's you monitor Gam's progress.
Other gam print commands display no output as they progress; a "Getting ... (n/m)" message has been added to these commands.

Added enabledonly option to gam print forward/vacation to disable output of users with these options disabled.
gam <UserTypeEntity> print forward [enabledonly] [todrive [<ToDriveAttributes>]]
gam <UserTypeEntity> print vacation [enabledonly] [todrive [<ToDriveAttributes>]]

Added retainname option to gam update drivefile to allow updating a Google Drive file from a local file without renaming it.
gam <UserTypeEntity> update drivefile <DriveFileEntity> [copy] [retainname | (newfilename <DriveFileName>)] <DriveFileUpdateAttributes>*
Here are the file naming rules:
create drivefile localfile "LocalFile.csv" - Google Drive file is named "LocalFile.csv"
create drivefile drivefilename "GoogleFile.csv" localfile "LocalFile.csv" - Google Drive file is named "GoogleFile.csv"
update drivefile drivefilename "GoogleFile.csv" localfile "NewLocalFile.csv" - Google Drive file "GoogleFile.csv" is renamed "NewLocalFile.csv"
update drivefile drivefilename "GoogleFile.csv" newfilename "NewGoogleFile.csv" localfile "NewLocalFile.csv" - Google Drive file "GoogleFile.csv" is renamed "NewGoogleFile.csv"
update drivefile drivefilename "GoogleFile.csv" retainname localfile "NewLocalFile.csv" - Google Drive file "GoogleFile.csv" is not renamed

Added matchname <RegularExpression> argument to all commands that print or show Team Drives to allow retrieving Team Drives with names that match a pattern.
It is more flexible that the administrator query for a Team Drive name described here: https://developers.google.com/drive/v3/web/search-parameters#team_drive_fields
It can be used with all commands, the administrator query can ony be used when adminaccess is implied or explicitly specified.

gam print teamdrives [teamdriveadminquery|query <QueryTeamDrive>] [matchname <RegularExpression>] (role <TeamDriveACLRole>)* [todrive [<ToDriveAttributes>]]
gam show teamdrives [teamdriveadminquery|query <QueryTeamDrive>] [matchname <RegularExpression>] (role <TeamDriveACLRole>)*

gam <UserTypeEntity> print teamdrives adminaccess [teamdriveadminquery|query <QueryTeamDrive>] [matchname <RegularExpression>] (role <TeamDriveACLRole>)* [todrive [<ToDriveAttributes>]]
gam <UserTypeEntity> show teamdrives adminaccess [teamdriveadminquery|query <QueryTeamDrive>] [matchname <RegularExpression>] (role <TeamDriveACLRole>)*

gam <UserTypeEntity> print teamdrives [matchname <RegularExpression>] (role <TeamDriveACLRole>)* [todrive [<ToDriveAttributes>]]
gam <UserTypeEntity> show teamdrives [matchname <RegularExpression>] (role <TeamDriveACLRole>)*

Added commands to display Team Drive ACLs. These commands can be time consuming as Gam gets the list of Team Drives with one API call and then makes an API call per Team Drive to get the ACL information.
gam print teamdriveacls [teamdriveadminquery|query <QueryTeamDrive>] [matchname <RegularExpression>] [user|group <EmailAddress> [checkgroups]] (role <TeamDriveACLRole>)* [oneitemperrow] [todrive [<ToDriveAttributes>]]
gam show teamdriveacls [teamdriveadminquery|query <QueryTeamDrive>] [matchname <RegularExpression>] [user|group <EmailAddress> [checkgroups]] (role <TeamDriveACLRole>)*
gam <UserTypeEntity> print teamdriveacls adminaccess [teamdriveadminquery|query <QueryTeamDrive>] [matchname <RegularExpression>] [user|group <EmailAddress> [checkgroups]] (role <TeamDriveACLRole>)* [oneitemperrow] [todrive [<ToDriveAttributes>]]
gam <UserTypeEntity> show teamdriveacls adminaccess [teamdriveadminquery|query <QueryTeamDrive>] [matchname <RegularExpression>] [user|group <EmailAddress> [checkgroups]] (role <TeamDriveACLRole>)*

4.55.17

Added fulltimeequivalent <Integer> field to organization item in <UserAttributes>.
From the API documentation: the full-time equivalent percent within the organization (100000 = 100%).

Added showuserprofile option to gam print course-submissions to display the user email address and name in addition to the numeric userId.

Updated sync operations for classrooms, groups and printers to allow more control over adds and removes.
A sync operation gets the current roster for an entity and compares it to the proposed roster.

Current/Default:
* members in the proposed roster that are not in the current roster will be added
* members in the current roster that are not in the proposed roster will deleted

When the addonly option is specified:
* members in the proposed roster that are not in the current roster will be added
* members in the current roster that are not in the proposed roster will not be deleted

When the removeonly option is specified:
* members in the proposed roster that are not in the current roster will not be added
* members in the current roster that are not in the proposed roster will be deleted

gam courses <CourseEntity> sync teachers|students [addonly|removeonly] <UserTypeEntity>
gam update group|groups <GroupEntity> sync [owner|manager|member] [usersonly|groupsonly] [addonly|removeonly] [notsuspended] <UserTypeEntity>
gam printer|printers <PrinterIDEntity> sync user|manager|owner [usersonly|groupsonly] [addonly|removeonly] <PrinterACLScopeEntity> [notify]

Added a command to simplify moving a Drive file/folder to a new location; this command replaces all existing parents with a new parent.
Use gam <UserTypeEntity> update for more complex parent changes.
<DriveFileMoveAttributes> ::=
        ((parentid <DriveFolderID>)|(parentname <DriveFolderName>)|(anyownerparentname <DriveFolderName>))|
         (teamdriveparentid <DriveFolderID>)|
         ((teamdriveparentid <TeamDriveID>)|(teamdriveparent <TeamDriveName>) [teamdriveparentname <DriveFolderName>]))
gam <UserTypeEntity> move drivefile <DriveFileEntity> [newfilename <DriveFileName>] <DriveFileMoveAttributes>*

Moving a Drive folder to a Team Drive is not directly supported by the API; Gam has to make a copy of the folder on the Team Drive and
recursively adjust the files/folders within it to point to the new parent folder.

Added the ability to replace tags with user attributes in the following commands: import message, insert message, create sendas, update sendas, signature, vacation.
See: https://github.com/taers232c/GAMADV-XTD/wiki/Tag-Replace

4.55.16

The following command has been restored.
gam <UserTypeEntity> create|add teamdrive <Name> [(theme|themeid <String>) | ([customtheme <DriveFileID> <Float> <Float> <Float>] [color <ColorValue>])]

4.55.15

Improved error handling for gam audit commands.
Miscellaneous cleanup.

4.55.14

Added the ability to add/remove attachments to/from calendar events.
<EventAttributes> ::=
        (attachment <String> <URL>)
<EventUpdateAttributes> ::=
        clearattachments

On an add or update, you can specify multiple attachments; <String> is the title of the attachment and <URL> is a sharable link from Google Drive.
You must specify all attachments in each command, you can not incrementally add attachmets. You delete all attachments with the clearattachments option.

4.55.13

Fixed error where the following collections of users were not recognized; these all select non-suspended users from OUs.
<UserTypeEntity> ::=
        (ou_ns <OrgUnitItem>)|
        (ou_and_children_ns <OrgUnitItem>)|
        (ous_ns <OrgUnitList>)|
        (ous_and_children_ns <OrgUnitList>)

4.55.12

Fixed errors in gam transfer drive command.

4.55.11

Fixed error in setting file properties.

4.55.10

Update 4.55.07 broke the error message handling for unknown/inapplicable users, it has been corrected.

4.55.09

Fixed bug in gam add/delete permissions that caused an exception.
Improved output formatting in gam add/delete permissions.

4.55.08

Added options to gam show filetree to allow additional fields beyond the file/folder name to be shown.

See: https://github.com/taers232c/GAMADV-XTD/wiki/Users-Drive-Files

4.55.07

Based on initial work by Jay, converted service account access to use the google-auth library for authentication rather than the deprecated oauth2client library.

4.55.06

Properly output tpmVersionInfo field in gam info/print cros.

4.55.05

Handle API exception when trying to update an unknown group.

4.55.04

Fixed bug related to using fields argument with gam info/print/show commands.

4.55.03

Fixed a bug in gam delete contacts where using just the emailmatchpattern option threw an exception.

Cleaned up code for print courses, print course-work, print course-submissions, print course_participants.

Added command to print course announcements.
You need to execute the following command to enable the scope that authorizes this command: gam oauth create

See: https://github.com/taers232c/GAMADV-XTD/wiki/Courses

gam print course-announcements [todrive [<ToDriveAttributes>]] (course|class <CourseEntity>)*|([teacher <UserItem>] [student <UserItem>] states <CourseStateList>])
        (courseannouncementids <CourseAnnouncementIDEntity>)|((announcementstates <CourseAnnouncementStateList>)* (orderby <CourseAnnouncementOrderByFieldName> [ascending|descending])*)
        [creatoremail] [fields <CourseAnnouncementFieldNameList>]

4.55.02

Fixed bug in gam transfer drive.

4.55.01

Fixed bug in gam sendemail.

4.55.00

The GAMADV-X and GAMADVX-TD version numbers are now the same.

Added option to allow setting Google Drive file properties.
See: https://developers.google.com/drive/v2/reference/properties#resource

<DriveFileAttributes> ::=
        (privateproperty <PropertyKey> <PropertyValue>)|
        (publicproperty <PropertyKey> <PropertyValue>)|
        (property <PropertyKey> <PropertyValue> [private|public])|
The first two forms are similar to other Gam commands, the third form can accept fields from a CSV files produced by print filelist.
In the third form, if neither private or public is specified, public is assumed.
To clear a property, set <PropertyValue> to the empty string "".

Based on initial work by Jay, added support for ChromeOS device files; these are associated with ChromeOS devices running in kiosk mode.
See: https://support.google.com/chrome/a/answer/1375678?hl=en#kiosk
See: https://github.com/taers232c/GAMADV-XTD/wiki/ChromeOS-Devices

<CrOSFieldName> ::=
        devicefiles|
gam [<CrOSTypeEntity>] print cros [todrive [<ToDriveAttributes>]] [query <QueryCrOS>]|[select <CrOSTypeEntity>] [limittoou <OrgUnitItem>]
        [orderby <CrOSOrderByFieldName> [ascending|descending]] [nolists|recentusers|timeranges|devicefiles] [listlimit <Number>] [start <Date>] [end <Date>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>]
gam [<CrOSTypeEntity>] print crosactivity [todrive [<ToDriveAttributes>]] [query <QueryCrOS>]|[select <CrOSTypeEntity>] [limittoou <OrgUnitItem>]
        [orderby <CrOSOrderByFieldName> [ascending|descending]] [recentusers] [timeranges] [both] [devicefiles] [all] [listlimit <Number>] [start <Date>] [end <Date>]
        [delimiter <Character>]

gam info cros <CrOSEntity> [nolists] [listlimit <Number>] [start <Date>] [end <Date>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>] [downloadfile latest|<Time>] [targetfolder <FilePath>]
gam <CrOSTypeEntity> info [nolists] [listlimit <Number>] [start <Date>] [end <Date>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>] [downloadfile latest|<Time>] [targetfolder <FilePath>]

You can download a ChromeOS device file by specifying the downloadfile latest|<Time> option in the previous two commands.
The following commands provide more options for downloading device files.

gam get devicefile <CrOSEntity> [select <DeviceFileEntity>] [targetfolder <FilePath>]
gam <CrOSTypeEntity> get devicefile [select <DeviceFileEntity>] [targetfolder <FilePath>]

Based on initial work by Jay, added support for buildings and features in resource calendars.
See: https://github.com/taers232c/GAMADV-XTD/wiki/Resource-Calendars

Added command to allow Gam to send emails.
See: https://github.com/taers232c/GAMADV-XTD/wiki/Send-Email

4.54.59

Fix reporting of target free space in gam transfer drive.

4.54.58

Updated options in gam transfer drive to give more control over processing files.

See: https://github.com/taers232c/GAMADV-XTD/wiki/Users-Drive-Transfer

gam <UserTypeEntity> transfer drive <UserItem> [select <DriveFileEntity>]
        [(targetfolderid <DriveFolderID>)|(targetfoldername <DriveFolderName>)] [targetuserfoldername <DriveFolderName>] [targetuserorphansfoldername <DriveFolderName>]
        [keepuser | (retainrole reader|commenter|writer|editor|none)] [noretentionmessages]
        [nonowner-retainrole reader|commenter|writer|editor|current|none] [nonowner-targetrole reader|commenter|writer|editor|current|none|source]
        (orderby <DriveFileOrderByFieldName> [ascending|descending])*
        [preview] [todrive [<ToDriveAttributes>]]

Added commands to print course work and course submissions.
You need to execute the following command to enable the scope that authorizes these commands: gam oauth create

See: https://github.com/taers232c/GAMADV-XTD/wiki/Courses

gam print course-work [todrive [<ToDriveAttributes>]] (course|class <CourseEntity>)*|([teacher <UserItem>] [student <UserItem>] states <CourseStateList>])
        (courseworkids <CourseWorkIDEntity>)|((workstates <CourseWorkStateList>)* (orderby <CourseWorkOrderByFieldName> [ascending|descending])*)
        [fields <CourseWorkFieldNameList>]
gam print course-submissions [todrive [<ToDriveAttributes>]] (course|class <CourseEntity>)*|([teacher <UserItem>] [student <UserItem>] states <CourseStateList>])
        (courseworkids <CourseWorkIDEntity>)|((workstates <CourseWorkStateList>)* (orderby <CourseWorkOrderByFieldName> [ascending|descending])*)
        (coursesubmissionids <CourseSubmissionIDEntity>)|((submissionstates <CourseSubmissionStateList>)*) [late|notlate]
        [fields <CourseSubmissionFieldNameList>]

4.54.57

Fixed bug in gam oauth create where entering `e` to exit without changes didn't exit.

4.54.56

Added options to allow getting only non-suspended users from groups and OUs. Using a type with a trailing _ns causes Gam to get only
the non-suspended users.
<UserTypeEntity> ::=
        (group|group_ns <GroupItem>)|
        (groups|groups_ns <GroupList>)|
        (group_users|group_users_ns <GroupList> [members] [managers] [owners] [primarydomain] [domains <DomainNameList>] [recursive] end)|
        (ou|ou_ns <OrgUnitItem>)|
        (ou_and_children|ou_and_children_ns <OrgUnitItem>)|
        (ous|ous_ns <OrgUnitList>)|
        (ous_and_children|ous_and_children_ns <OrgUnitList>)|

gam print group-members [todrive [<ToDriveAttributes>]]
        [domain <DomainName>] [member <UserItem>])|[group|group_ns <GroupItem>]|[select <GroupEntity>] [notsuspended]
        [members] [managers] [owners] [membernames] <MembersFieldName>*
        [fields <MembersFieldNameList>] [userfields <UserFieldNameList>] [recursive [noduplicates]]
gam show group-members
        ([domain <DomainName>] [member <UserItem>])|[group|group_ns <GroupItem>]|[select <GroupEntity>] [notsuspended]
        [members] [managers] [owners] [depth <Number>]

To maintain compatabiity with Jay Lee's Gam, gam oauth create has been changed to prompt for the G Suite admin email address
after the scopes have been selected.

4.54.55

Handle error when trying to delete a Team Drive that contains files/folders.

4.54.54

Fixed bug in gam info group.

Made gam info group and gam info user consistent when printing aliases.
Previously:
* gam info user showed the Aliases: and Non-Editable Aliases: lines even if there were no aliases of the type; counts for each alias type were not shown.
* gam info group showed the Aliases: and Non-Editable Aliases: lines only if there were aliases of the type; counts for each alias type were shown.

Currently:
* gam info user shows the Aliases: and Non-Editable Aliases: lines only if there are aliases of the type; counts for each alias type are shown.
* gam info group shows the Aliases: and Non-Editable Aliases: lines only if there are aliases of the type; counts for each alias type are shown.

4.54.53

Code cleanup for "Getting ..." messages.

4.54.52

* Added noretentionmessages option to the following commands.
It causes GAM to suppress the progress messages that detail what role the original owner retains.
(If there is an error in assigning the retained role, it will be displayed.)

gam <UserTypeEntity> transfer calendars <CalendarManageEntity> <UserItem> [keepuser | (retainrole <CalendarACLRole>)] [noretentionmessages]
gam <UserTypeEntity> claim ownership <DriveFileEntity> ...  [keepuser | (retainrole commenter|reader|writer|none)] [noretentionmessages]
gam <UserTypeEntity> transfer drive <UserItem> ... [keepuser | (retainrole commenter|reader|writer|none)] [noretentionmessages]

* Added usersonly|groupsonly option to the following commands.

gam update group|groups <GroupEntity> create|add [owner|manager|member] [usersonly|groupsonly] [notsuspended] <UserTypeEntity>
gam update group|groups <GroupEntity> delete|remove [owner|manager|member] [usersonly|groupsonly] <UserTypeEntity>
gam update group|groups <GroupEntity> sync [owner|manager|member] [usersonly|groupsonly] [notsuspended] <UserTypeEntity>
gam update group|groups <GroupEntity> update [owner|manager|member] [usersonly|groupsonly] <UserTypeEntity>

gam printer|printers <PrinterIDEntity> create|add user|manager|owner [usersonly|groupsonly] <PrinterACLScopeEntity> [notify]
gam printer|printers <PrinterIDEntity> delete [usersonly|groupsonly] <PrinterACLScopeEntity>
gam printer|printers <PrinterIDEntity> sync user|manager|owner [usersonly|groupsonly] <PrinterACLScopeEntity> [notify]

Assume that at your school there is a group for each grade level and the members come from an OU; here is a sample CSV file GradeOU.csv
Grade,OU
seniors@domain.org,/Students/ClassOf2018
juniors@domain.org,/Students/ClassOf2019
...

This allows you to do: gam csv GradeOU.csv gam update group ~Grade sync members ou ~OU
But suppose that at each grade level there are additional group members that are groups of faculty/staff; e.g., senioradvisors@domain.org.
In this scenario, you can't do the update group sync command as the members that are groups will be deleted; the usersonly option allows
the update group sync command to work: gam csv GradeOU.csv gam update group ~Grade sync members usersonly ou ~OU
The users from the OU are matched against the user members of the group and adds/deletes are done as necessary to synchronize them;
the group members of the group are unaffected.

The usersonly option is most useful when used with the sync option, it can be used with create/delete/update when <UserTypeEntity> specifies
a group or groups. In ths case, only the user members from the specified groups are processed.

The groupsonly option works in the same manner as the usersonly option; it only processes group members that are groups.
It only makes sense to use it when <UserTypeEntity> specifies a group or groups.

* Updated handling of group name and description to account for Google API behavior.

There are two APIs that can set a group name or description: the Directory API and the Group Settings API;
they have different behaviors when updating these two fields.

Define four fields: d-name, d-description, gs-name and gs-description.
The Directory API sets d-name and d-description: newline (\n), <, > and = are not allowed.
The Group Settings API sets gs-name and gs-description, all characters are allowed.
If you set d-name/d-description with the Directory API, gs-name/gs-description are unaffected.
If you set gs-name/gs-description with the Group Settings API, d-name/d-description are unaffected.

When retrieving these fields for an individual group, the Directory API returns d-name and d-description and
the Group Settings API returns gs-name and gs-description. However, when using the Directory API to retrieve these fields
for a list of groups, the gs-name and gs-description values are returned.

If you use the Admin console, the character limitations for the Directory API still apply, but both d-name/gs-name and d-description/gs-description are set.

If you use groups.google.com, there are no character limitations, and both d-name/gs-name and d-description/gs-description are set.

When you update a group name or description, GAM will use both APIs to set the values. When updating the value with the Directory API,
each disallowed character is replaced by a space.

When you print groups, the name and description columns contain the gs-name and gs-description values. When you get info for a single grooup,
the name and description lines contain the gs-name and gs-description values. If the d-name value differs from the gs-name value, it will
shown on a separate line as groupName. If the d-description value differs from the gs-description  value, it will shown on a separate line as groupDescription.

* Added capabilty to add/remove parent folders by name when updating a Google Drive file/folder.

Previously, the gam update drivefile command had the following options for adding/removing parent folders:
        (addparents <DriveFolderIDList>)|
        (removeparents <DriveFolderIDList>)|
You had to specify the parents by ID. The following new options have been added to allow specification of the parents by folder name.
        (addparentname <DriveFolderName>)|
        (addanyownerparentname <DriveFolderName>)|
        (removeparentname <DriveFolderName>)|
        (removeanyownerparentname <DriveFolderName>)|
Gam performs a query to convert <DriveFolderName> to its <DriveFolderID>.
* addparentname|removeparentname <DriveFolderName> - The query is: "'me' in owners and name='<DriveFolderName>'".
* addanyownerparentname|removeanyownerparentname <DriveFolderName> - The query is: "name='<DriveFolderName>'".

4.54.51

Fixed bug where "utf-8" was written to empty fields when todrive was specified.

4.54.50

Added nodetails option to gam create/update drivefileacl to allow suppression of the output of the ACL details.
gam create|add drivefileacl <TeamDriveEntityAdmin> anyone|(user <UserItem>)|(group <GroupItem>)|(domain <DomainName>)
        (role <DriveFileACLRole>) [withlink|(allowfilediscovery|discoverable [<Boolean>])] [expires|expiration <Time>] [sendemail] [emailmessage <String>] [showtitles] [nodetails]
gam update drivefileacl <TeamDriveEntityAdmin> <DriveFilePermissionIDorEmail>
        (role <DriveFileACLRole>) [withlink|(allowfilediscovery|discoverable [<Boolean>])] [expires|expiration <Time>] [removeexpiration [<Boolean>]] [showtitles] [nodetails]
gam <UserTypeEntity> create|add drivefileacl <DriveFileEntity> anyone|(user <UserItem>)|(group <GroupItem>)|(domain <DomainName>)
        (role <DriveFileACLRole>) [withlink|(allowfilediscovery|discoverable [<Boolean>])] [expires|expiration <Time>] [sendemail] [emailmessage <String>] [showtitles] [nodetails]
gam <UserTypeEntity> update drivefileacl <DriveFileEntity> <DriveFilePermissionIDorEmail>
        (role <DriveFileACLRole>) [withlink|(allowfilediscovery|discoverable [<Boolean>])] [expires|expiration <Time>] [removeexpiration [<Boolean>]] [showtitles] [nodetails]

4.54.49

Updated gam add filter to send actions to the API in a particular order so that Google will correctly identify duplicate filters.

Fixed bug in gam info user where primary field was not printed for addresses.

4.54.48

Fixed bug in gam update teamdrive command line parsing.

Added customtheme and color options to gam create teamdrive. These options are not supported in the API when creating a Team Drive so GAM
creates the Team Drive and then updates it with the specified values. If you use the theme|themeid option, no update is necessary as that
option is supported when creating a Team Drive.

gam <UserTypeEntity> create teamdrive <Name> [(theme|themeid <String>) | ([customtheme <DriveFileID> <Float> <Float> <Float>] [color <ColorValue>])]
* customtheme - set the backgroundImageFile property described here:  https://developers.google.com/drive/v3/reference/teamdrives
* color - set the Team Drive color

4.54.47

Added commands to stay compatible with Jay's Gam.
gam show teamdriveinfo <TeamDriveEntity>
gam <UserTypeEntity> show teamdriveinfo <TeamDriveEntity> adminaccess
gam <UserTypeEntity> show teamdriveinfo <TeamDriveEntity>

Equivalent GAMADVX-TD commands.
gam info teamdrive <TeamDriveEntity>
gam <UserTypeEntity> info teamdrive <TeamDriveEntity> adminaccess
gam <UserTypeEntity> info teamdrive <TeamDriveEntity>

4.54.46

Improved memory usage of print filelist/show filetree.

Added additional column headers to gam print users output when groups or licenses options are specified.
* groups - a column labeled GroupsCount is output indicating the number of groups to which the user belongs.
* licenses - a column labeled LicensesCount is output indicating the number of licenses the user holds.

Thanks to Jay for providing a color name table for use when specifying colors for calendars, drive folders and Team Drives.
For example, you can now specify purple instead of #800080.

<ColorName> ::=
        aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|
        cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|
        darkblue|darkcyan|darkgoldenrod|darkgray|darkgrey|darkgreen|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|
        darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|
        firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|grey|green|greenyellow|
        honeydew|hotpink|indianred|indigo|ivory|khaki|
        lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgrey|lightgreen|lightpink|
        lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|
        magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|
        mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|
        oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|
        papayawhip|peachpuff|peru|pink|plum|powderblue|purple|red|rosybrown|royalblue|
        saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|
        tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen
<ColorHex> ::= #<Hex><Hex><Hex><Hex><Hex><Hex>
<ColorValue> ::= <ColorName>|<ColorHex>

<CalendarAttributes> ::=
        (backgroundcolor <ColorValue>)|
        (foregroundcolor <ColorValue>)
<DriveFileAttributes> ::=
        (folderColorRgb <ColorValue>)

Thanks to Jay for providing impetus to add customtheme and color options to gam update teamdrive.

gam <UserTypeEntity> update teamdrive <TeamDriveEntity> [name <Name>] [(theme|themeid <String>) | ([customtheme <DriveFileID> <Float> <Float> <Float>] [color <ColorValue>])]
gam <UserTypeEntity> show teamdrivethemes
* customtheme - set the backgroundImageFile property described here:  https://developers.google.com/drive/v3/reference/teamdrives
* color - set the Team Drive color

Google enhanced the ability of domain administrators to manage Team Drives.
See: https://developers.google.com/drive/v3/web/manage-teamdrives#managing_team_drives_for_domain_administrators

See: https://github.com/taers232c/GAMADV-XTD/wiki/Domain-Administrator-Team-Drives

4.54.45

Code cleanup for email settings commands: arrows, language, pagesize, shortcuts, snippets, utf, webclips.

4.54.44

The following commands have been removed as the Google Email Audit API no longer supports them.

gam audit activity request <EmailAddress>
gam audit activity delete <EmailAddress> <RequestID>
gam audit activity download <EmailAddress> <RequestID>
gam audit activity status [<EmailAddress> <RequestID>]

The gam audit uploadkey command was enhanced to take the public key file name as a parameter.
gam audit uploadkey [<FileName>]
Previously, the key file was read from stdin; you had to do: cat <FileName> | gam audit uploadkey

4.54.43

Added two special-purpose commands for importing/exporting oauth2.txt.

Because of all the scopes that GAM uses, it has to split the set of scopes into two lists, get client credentials
for each list and then store them in a specially formatted oauth2.txt file that is base64 encoded.
GAM can now export its oauth2.txt into a JSON formatted file so its contents can be viewed.
gam oauth export [<FileName>]
If <FileName> is not specified, the JSON data is written to stdout.

Because of the special format of the oauth2.txt that GAM uses, it is not possible to directly use a traditional
oauth2.txt file from a third-party. GAM can now import traditional oauth2.txt files and convert them to its special format.
gam oauth import <FileName>

4.54.42

Added command gam show group-members that displays a hierarchical membership list for groups.
gam show group-members
        ([domain <DomainName>] [member <UserItem>])|[group <GroupItem>]|[select <GroupEntity>]
        [members] [managers] [owners] [depth <Number>]

For details, see: https://github.com/taers232c/GAMADV-XTD/wiki/Group-Membership

4.54.41

Previously, in gam print filelist, when the filepath option was specified, the paths column appeared after all path.n columns.
Now, the paths column will come before the path.n columns.

4.54.40

Extended gam print/show teamdrives role processing. Previously, a user had to directly have one of the specified roles
for a Team Drive for it to be included in the output. Now, the checkgroups options causes a Team Drive to be displayed
if a group has one of the specified roles and the user is a member of the group.

gam <UserTypeEntity> print teamdrives (role commenter|organizer|owner|reader|writer)* [checkgroups] [todrive [<ToDriveAttributes>]]
gam <UserTypeEntity> show teamdrives (role commenter|organizer|owner|reader|writer)* [checkgroups]

4.54.39

Added csv_output_line_terminator variable to gam.cfg.
csv_output_line_terminator
        Allowed values: cr, lf, crlf
        Designates character(s) used to terminate the lines of a CSV file.
        For Linux and Mac OS, this would typically be lf.
        For Windows, this would typically be crlf.
        Default: lf
        Environment variable: GAM_CSV_OUTPUT_LINE_TERMINATOR

4.54.38

By default, Gam displays all Team Drives to which the user has access; you can limit the display
by using the `role` option; multiple instances of `role` are allowed.

gam <UserTypeEntity> print teamdrives (role commenter|organizer|owner|reader|writer)* [todrive [<ToDriveAttributes>]]
gam <UserTypeEntity> show teamdrives (role commenter|organizer|owner|reader|writer)*

4.54.37

Thanks to Jay for suggesting extending gam delete asps to delete all of a user's Application Specific Passwords or a list of ASPs.
gam <UserTypeEntity> delete asps|applicationspecificpasswords all|<ASPIDList>

Extended commands relating to administrators.
gam print privileges [todrive [<ToDriveAttributes>]]
gam show privileges
gam print adminroles|roles [todrive [<ToDriveAttributes>]] [privileges]
gam show adminroles|roles [privileges]
gam print admins [todrive [<ToDriveAttributes>]] [user <UserItem>] [role <RoleItem>]
gam show admins [user <UserItem>] [role <RoleItem>]

4.54.36

Added formatjson argument to gam print groups/users to cause output to be in JSON format.
By default, when writing CSV files, Gam uses a quote character of double quote ". The quote character is used to enclose columns that contain
the quote character itself, the column delimiter (comma by default) and new-line characters. Any quote characters within the column are doubled.
When using the gam print groups/users commands with the formatjson option, double quotes are used extensively in the data resulting in hard to read/process output.
The quotechar <Character> option allows you to choose an alternate quote character, single quote for instance, that makes for readable/processable output.
quotechar defaults to gam.cfg/csv_output_quote_char.

gam print groups [todrive [<ToDriveAttributes>]] ([domain <DomainName>] [member <UserItem>])|[select <GroupEntity>]
        [maxresults <Number>] [allfields|([settings] <GroupFieldName>* [fields <GroupFieldNameList>])]
        [members|memberscount] [managers|managerscount] [owners|ownerscount] [countsonly]
        [convertcrnl] [delimiter <Character>] [sortheaders] [formatjson] [quotechar <Character>]
gam [<UserTypeEntity>] print users [todrive [<ToDriveAttributes>]] ([domain <DomainName>] [query <QueryUsers>] [deleted_only|only_deleted])|[select <UserTypeEntity>]
        [groups] [license|licenses|licence|licences] [emailpart|emailparts|username] [schemas|custom all|<SchemaNameList>]
        [orderby <UserOrderByFieldName> [ascending|descending]]
        [userview] [basic|full|allfields | <UserFieldName>* | fields <UserFieldNameList>]
        [delimiter <Character>] [sortheaders] [formatjson] [quotechar <Character>]

4.54.35

Allow user attribute gender to be cleared.
<UserAttributes> ::=
        (gender clear|(female|male|unknown|(other <String>) [addressmeas <String>]))

4.54.34

Added new user attributes.
<UserAttributes> ::=
        (gender type female|male|unknown|(other <String>) [addressmeas <String>])|
        (keyword|keywords clear|(type occupation|outlook|(custom <string>) <String>))|
        (language|languages clear|<LanguageList>)|
<UserFieldName> ::=
        gender|
        keyword|keywords|
        language|languages|

4.54.33

Added the ability to select subfields in gam show fileinfo and gam print filelist; these fields are included
in <DriveFieldName> and <DriveFieldNameList>.

<DriveParentsSubfieldName> ::=
        parents.id

<DrivePermissionsSubfieldName> ::=
        permissions.additionalroles|
        permissions.allowfilediscovery|
        permissions.deleted|
        permissions.displayname|
        permissions.domain|
        permissions.emailaddress|
        permissions.expirationdate|
        permissions.expirationtime|
        permissions.id|
        permissions.name|
        permissions.photolink|
        permissions.role|
        permissions.teamdrivepermissiondetails|
        permissions.type|
        permissions.withlink

<DrivePropertiesSubfieldName> ::=
        properties.key|
        properties.value|
        properties.visibility

<DriveLastModifyingUserSubfieldName> ::=
        lastmodifyinguser.displayname|
        lastmodifyinguser.emailaddress|
        lastmodifyinguser.isauthenticateduser|
        lastmodifyinguser.me|
        lastmodifyinguser.name|
        lastmodifyinguser.permissionid|
        lastmodifyinguser.photolink|
        lastmodifyinguser.picture

<DriveSharingUserSubfieldName> ::=
        sharinguser.displayname|
        sharinguser.emailaddress|
        sharinguser.isauthenticateduser|
        sharinguser.me|
        sharinguser.name|
        sharinguser.permissionid|
        sharinguser.photolink|
        sharinguser.picture

<DriveTrashingUserSubfieldName> ::=
        trashinguser.displayname|
        trashinguser.emailaddress|
        trashinguser.isauthenticateduser|
        trashinguser.me|
        trashinguser.name|
        trashinguser.permissionid|
        trashinguser.photolink|
        trashinguser.picture

gam <UserTypeEntity> show fileinfo <DriveFileEntity> [filepath] [allfields|<DriveFieldName>*|(fields <DriveFieldNameList>)] (orderby <DriveFileOrderByFieldName> [ascending|descending])*
gam <UserTypeEntity> print|show filelist [todrive [<ToDriveAttributes>]] [anyowner|(showownedby any|me|others)]
        [query <QueryDriveFile>] [fullquery <QueryDriveFile>] [<DriveFileQueryShortcut>]
        [select <DriveFileEntityListTree>] [selectsubquery <QueryDriveFile>] [mimetype [not] <MimeTypeList>] [depth <Number>] [showparent]
        [filepath] [buildtree] [allfields|<DriveFieldName>*|(fields <DriveFieldNameList>)] (orderby <DriveFileOrderByFieldName> [ascending|descending])* [delimiter <Character>]

4.54.32

Fixed additional error handling in gam copy drivefile.

4.54.31

Added additional error handling to gam copy drivefile.

4.54.30

Code cleanup.

4.54.29

Added showparent option to gam print filelist. By default, when the select <DriveFileEntityListTree> option is used,
only the children of the selected folder are displayed; the showparent option causes the selected folder to also be displayed.
gam <UserTypeEntity> print|show filelist [todrive [<ToDriveAttributes>]] [anyowner|(showownedby any|me|others)]
        [query <QueryDriveFile>] [fullquery <QueryDriveFile>] [<DriveFileQueryShortcut>]
        [select <DriveFileEntityListTree>] [selectsubquery <QueryDriveFile>] [mimetype [not] <MimeTypeList>] [depth <Number>] [showparent]
        [filepath] [buildtree] [allfields|<DriveFieldName>*|(fields <DriveFieldNameList>)] (orderby <DriveFileOrderByFieldName> [ascending|descending])* [delimiter <Character>]

4.54.28

Added retainrole reader|commenter|writer|editor|none option to gam claim ownership to allow specification of the role
that the original owner will retain; by default, the orginal owner retains writer access.
gam <UserTypeEntity> claim ownership <DriveFileEntity> [includetrashed]
        (orderby <DriveFileOrderByFieldName> [ascending|descending])*
        [skipids <DriveFileEntity>] [skipusers <UserTypeEntity>] [subdomains <DomainNameEntity>]
        [restricted [<Boolean>]] [writerscanshare|writerscantshare [<Boolean>]] [keepuser | (retainrole reader|commenter|writer|editor|none)]
        [preview] [filepath] [buildtree] [todrive [<ToDriveAttributes>]]

For details, see: https://github.com/taers232c/GAMADV-XTD/wiki/Users-Drive-Ownership

4.54.27

Flush stdout before every write to stderr to keep output in sync.

4.54.26

Handle input errors in gam update customer.

4.54.25

Improve handling of Google Internal errors.

4.54.24

Added batchsuborgs [<Boolean>] option to gam print orgs and gam show orgtree to handle a special case when the
account has thousands of organizational units. By default, these commands issue a single API call to get the
list of organizational units. If the number is large, greater than 4000 in an observed case, the API call may fail.
When batchsuborgs is specified, Gam gets all of the top level org units with one API call; then Gam uses batch processing
in subsequent API calls to get the sub org units. There is no benefit to using this option unless the commands fail
without it. The number of sub org units processed in each batch is controlled by batch_size in gam.cfg.

gam print orgs|ous [todrive [<ToDriveAttributes>]] [showparent] [toplevelonly] [fromparent <OrgUnitItem>]
        [allfields|<OrgUnitFieldName>*|(fields <OrgUnitFieldNameList>)] [convertcrnl] [batchsuborgs [<Boolean>]]
gam show orgtree [fromparent <OrgUnitItem>] [batchsuborgs [<Boolean>]]

4.54.23

Code cleanup.

4.54.22

Correct processing of owneremail option in gam info/print courses.

4.54.21

Eliminate superfluous header `capabilities` in gam print filelist.

4.54.20

Handle uncopyable files in gam copy drivefile.

4.54.19

Added additional error handling to gam copy drivefile.

4.54.18

When todrive is specified on a print command and todrive_conversion = true in gam.cfg, Gam checks to see if the CSV file being uploaded meets
Google's requirements for the maximum number of cells and columns for a Google Sheet. If the requirements are met, the file is uploaded as a Google Sheet,
otherwise it is uploaded as a CSV file. The limit for the number of columns is 256, the limit for the maximum number of cells has been raised to 2000000.

If a group has a member of type CUSTOMER (all users in domain are members), the gam print group-members command puts the Customer ID in the
id column and leaves the email column blank in the CSV file. This means that the email column of the CSV file can't be used in
subsequent commands processing group membership because the blank value will cause an error. Gam now puts the Customer ID in the id and email columns
to avoid this error. All Gam commands that process group membership properly recognize the Customer ID in the email column.

Users that have applied to join a group or who have been invited to join a group but have not accepted are in a PENDING state. If you
print the group membership, the PENDING members do not appear. However, if you try to add a member to a group and the member is in
the PENDING stete, you will get a duplicate member error. When Gam gets a duplicate member error from the API, it checks to see if the member is
already in the group; if so, the duplicate error is appropriate. If the member is not found in the group, then it must be in the PENDING state.
In this case Gam deletes and adds the user which changes it from the PENDING state to the ACTIVE state.
Thanks to Jay for suggesting this solution.

4.54.17

Added states <CourseStateList> option to gam print courses/course-participants to allow selection of courses by state.

<CourseState> ::= active|archived|provisioned|declined
<CourseStateList> ::= "<CourseState>(,<CourseState>)*"
gam print courses [todrive [<ToDriveAttributes>]] (course|class <CourseID>)*|([teacher <UserItem>] [student <UserItem>] [states <CourseStateList>])
        [owneremail] [alias|aliases][delimiter <Character>] [show all|students|teachers] [countsonly]
        [fields <CourseFieldNameList>] [skipfields <CourseFieldNameList>]
gam print course-participants [todrive [<ToDriveAttributes>]] (course|class <CourseID>)*|([teacher <UserItem>] [student <UserItem>] [states <CourseStateList>])
        [show all|students|teachers]

By default, all course states are selected.

4.54.16

Added quick option to gam info groups/users as a way to quickly suppress some output.
* For groups, quick is equivalent to noaliases nousers
* For users, quick is equivalent to noaliases nogroups nolicenses noschemas

gam info groups <GroupEntity> [members] [managers] [owners] [quick] [noaliases] [nousers] [groups] <GroupFieldName>* [fields <GroupFieldNameList>] [formatjson]
gam info users <UserTypeEntity> [quick] [noaliases] [nogroups] [nolicenses|nolicences] [noschemas] [schemas|custom <SchemaNameList>]
        [userview] <UserFieldName>* [fields <UserFieldNameList>] [(products|product <ProductIDList>)|(skus|sku <SKUIDList>)] [formatjson]
gam <UserTypeEntity> info users [quick] [noaliases] [nogroups] [nolicenses|nolicences] [noschemas] [schemas|custom <SchemaNameList>]
        [userview] <UserFieldName>* [fields <UserFieldNameList>] [(products|product <ProductIDList>)|(skus|sku <SKUIDList>)] [formatjson]

4.54.15

Added maxactivities <Number> option to gam report to allow specification of the maximum number of activities to report.

gam report users|user [todrive [<ToDriveAttributes>]] [nodatechange] [maxresults <Number>] [maxactivities <Number>]
        [date <Date>] [(user all|<UserItem>)|(select <UserTypeEntity>)] [filter|filters <String>] [fields|parameters <String>]
gam report admin|calendar|calendars|drive|docs|doc|groups|group|logins|login|mobile|tokens|token [todrive [<ToDriveAttributes>]] [maxresults <Number>] [maxactivities <Number>]
        [([start <Time>] [end <Time>])|yesterday] [(user all|<UserItem>)|(select <UserTypeEntity>)] [event <String>] [filter|filters <String>] [ip <String>] [countsonly] [summary]

(n.b., maxresults <Number> limits the number of activities downloaded per API call, not the total number of activities.)

4.54.14

Make `ERROR: 500: unknownError - Unknown` recoverable in Drive operations.

4.54.13

Fixed bug where <SpreadsheetJSONRangeValuesList> was not handled properly.

4.54.12

Added commands to create, update and display information about spreadsheets.

gam <UserTypeEntity> create sheet json <SpreadsheetJSONCreateRequest> [formatjson]
        [parentid <DriveFolderID>] | [parentname <DriveFolderName>] | [anyownerparentname <DriveFolderName>]
        [teamdriveparentid <DriveFolderID>] [teamdriveparent <TeamDriveName>] [teamdriveparentname <DriveFolderName>]
gam <UserTypeEntity> update sheet <DriveFileEntity> json <SpreadsheetJSONUpdateRequest> [formatjson]
gam <UserTypeEntity> info sheet <DriveFileEntity> (range <SpreadsheetRange>)* [includegriddata [<Boolean>]] [formatjson]

For details, see: https://github.com/taers232c/GAMADV-XTD/wiki/Users-Spreadsheets

4.54.11

Added json <SpreadsheetJSONRangeValuesList> argument to gam append/update sheetrange so that these commands can directly process the output
from gam print sheetrange formatjson.

In the following lines defining Spreadsheet items, the following right-hand side characters are literal: {}[],'":
The following right-hand side characters are part of the meta-syntax: <>()*|
<SpreadsheetRange> ::= <String>
<SpreadsheetValue> ::= "<String>"|<Number>|true|false
<SpreadsheetValueList> ::= [<SpreadsheetValue>(,<SpreadsheetValue>)*]
<SpreadsheetJSONRangeValues> ::= {"range": <String>, "values": [<SpreadsheetValueList>(,<SpreadsheetValueList>)*], "majorDimension": ROWS|COLUMNS}
<SpreadsheetJSONRangeValuesList> ::= '[<SpreadsheetJSONRangeValues>(,<SpreadsheetJSONRangeValues>)*]'

gam <UserTypeEntity> append sheetrange <DriveFileEntity> json <SpreadsheetJSONRangeValues>|<SpreadsheetJSONRangeValuesList> [overwrite|insertrows]
        [raw|userentered] [formula|formattedvalue|unformattedvalue] [serialnumber|formattedstring]
        [includevaluesinresponse [<Boolean>]] [formatjson]
gam <UserTypeEntity> update sheetrange <DriveFileEntity> (json <SpreadsheetJSONRangeValues>|<SpreadsheetJSONRangeValuesList>)+
        [raw|userentered] [formula|formattedvalue|unformattedvalue] [serialnumber|formattedstring]
        [includevaluesinresponse [<Boolean>]] [formatjson]

The output from gam append/update/clear/show sheetranges formatjson has been changed to match the style of output from gam print sheetranges formatjson.
The output will look like this: {"User": "user@domain.com", "spreadsheetId": "xxxxx", "JSON": <Command JSON output here>}

Added csv_input_quote_char and csv_output_quote_char variables to gam.cfg.

By default, when writing CSV files, Gam uses a quote character of double quote ". The quote character is used to enclose columns that contain
the quote character itself, the column delimiter (comma by default) and new-line characters. Any quote characters within the column are doubled.
By default, when reading CSV files, Gam uses a quote character of double quote ". Previously, Gam could not read CSV files that used a different quote character.

csv_input_quote_char
        A one-character string used to quote fields containing special characters, such as the csv_input_column_delimiter or csv_input_quote_char,
        or new-line characters. This typically used when reading CSV files produced by gam print ranges formatjson where csv_output_char
        was set to a value other than double quote.
        Defaults: '"'
        Environment variable: GAM_CSV_INPUT_QUOTE_CHAR

csv_output_quote_char
        A one-character string used to quote fields containing special characters, such as the csv_output_column_delimiter or csv_output_quote_char,
        or new-line characters. This is most useful with gam print sheetranges formatjson where the JSON column contains many
        double quotes; by setting csv_output_quote_char to a single quote, the output is much cleaner.
        Defaults: '"'
        Environment variable: GAM_CSV_OUTPUT_QUOTE_CHAR

When specifying a CSV file as input, you can define the quote character as part of the file specification. This would typically be used when you have
been supplied a CSV file from an external source that uses a different quote character.

<CrOSTypeEntity> ::=
        (croscsvfile <FileName>(:<FieldName>)+ [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <Character>])|
        (csvkmd cros|cros_ous|cros_ous_and_children <FileName> [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>]
                keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <Character>]
                subkeyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <Character>]
                (matchfield <FieldName> <RegularExpression>)*
                [datafield <FieldName>(:<FieldName)* [delimiter <Character>]])
<UserTypeEntity> ::=
        (csvfile <FileName>(:<FieldName>)+ [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <Character>])|
        (csvkmd users|groups|ous|ous_and_children|courseparticipants|students|teachers <FileName> [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>]
                keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <Character>]
                subkeyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <Character>]
                (matchfield <FieldName> <RegularExpression>)*
                [datafield <FieldName>(:<FieldName)* [delimiter <Character>]])
<CSVkmdSelector> ::=
        csvkmd <FileName> [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>]
               keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <Character>]
               subkeyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <Character>]
               (matchfield <FieldName> <RegularExpression>)*
               [datafield <FieldName>(:<FieldName)* [delimiter <Character>]]
<FileSelector> ::=
        (csvfile <FileName>(:<FieldName>)+ [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <Character>])
gam csv <FileName>|- [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* gam <GAMArgumentList>
gam loop <FileName>|- [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* gam <GAMArgumentList>

When specifying a CSV file as output, you can define the quote character as part of the file specification. This would typically be used when you have
to supply a CSV file to an external source that uses a different quote character.
<Redirect> ::=
        redirect csv <FileName> [multiprocess] [append] [noheader] [charset <Charset>] [columndelimiter <Character>] [quotechar <Character>]

When using the gam print sheetranges command with the formatjson option, double quotes are used extensively in the data resulting in hard to read output.
This command allows you to define the quote character directly.

gam <UserTypeEntity> print sheetrange <DriveFileEntity> (range <SpreadsheetRange>)+  [todrive [<ToDriveAttributes>]]
        [rows|columns] [formula|formattedvalue|unformattedvalue] [serialnumber|formattedstring]
        [formatjson] [quotechar <Character>]

4.54.10

Clean up gam import/insert message code.

4.54.09

Added formatjson to gam clear sheetrange.
    gam <UserTypeEntity> clear sheetrange <DriveFileEntity> (range <SpreadsheetRange>)+
        [formatjson]

4.54.08

Fixed an error in gam append/update sheetrange that caused an exception when includevaluesinresponse was not specified.

4.54.07

Added commands to manipulate spreadsheets.

    <SpreadsheetRange> ::= <String>
    <SpreadsheetValue> ::= "<String>"|<Number>|true|false
    <SpreadsheetValueList> ::= [<SpreadsheetValue>(,<SpreadsheetValue>)*]
    <SpreadsheetJSONValues> ::= '{"values": [<SpreadsheetValueList>(,<SpreadsheetValueList>)*]}'

    gam <UserTypeEntity> append sheetrange <DriveFileEntity> (range <SpreadsheetRange> <SpreadsheetJSONValues>) [overwrite|insertrows]
        [raw|userentered] [rows|columns] [formula|formattedvalue|unformattedvalue] [serialnumber|formattedstring]
        [includevaluesinresponse [<Boolean>]] [formatjson]
    gam <UserTypeEntity> update sheetrange <DriveFileEntity> (range <SpreadsheetRange> <SpreadsheetJSONValues>)+
        [raw|userentered] [rows|columns] [formula|formattedvalue|unformattedvalue] [serialnumber|formattedstring]
        [includevaluesinresponse [<Boolean>]] [formatjson]

    gam <UserTypeEntity> clear sheetrange <DriveFileEntity> (range <SpreadsheetRange>)+

    gam <UserTypeEntity> print sheetrange <DriveFileEntity> (range <SpreadsheetRange>)+  [todrive [<ToDriveAttributes>]]
        [rows|columns] [formula|formattedvalue|unformattedvalue] [serialnumber|formattedstring]
        [formatjson]
    gam <UserTypeEntity> show sheetrange <DriveFileEntity> (range <SpreadsheetRange>)+
        [rows|columns] [formula|formattedvalue|unformattedvalue] [serialnumber|formattedstring]
        [formatjson]

For details, see: https://github.com/taers232c/GAMADV-XTD/wiki/Users-Spreadsheets

To use these commands, you must update your project to use the Google Sheets API and you must update your service account authorization.
You can update your project manually or with the command: gam update project
Update your service account authorization with the command: gam user user@domain.com check serviceaccount

4.54.06

Calendars can now be transferred from one user to another.
    <DataTransferService> ::= googledrive|gdrive|drive|"drive and docs"|calendar
    gam create datatransfer|transfer <OldOwnerID> <DataTransferService> <NewOwnerID> [private|shared|all] (<ParameterKey> <ParameterValue>)*

4.54.05

Update code to reflect changes in PyInstaller.

4.54.04

Update passlib to 1.7.1.

4.54.03

Import a message into a user's mailbox, with standard email delivery scanning and classification similar to receiving via SMTP.
API Documentation: https://developers.google.com/gmail/api/v1/reference/users/messages/import
    gam <UserTypeEntity> import message (<SMTPDateHeader> <Time>)* (<SMTPHeader> <String>)* (header <String> <String>)* (addlabel <LabelName>)*
        (textmessage <String>)|(textfile <FileName> [charset <CharSet>]) (htmlmessage <String>)|(htmlfile <FileName> [charset <CharSet>])
        (replace <Tag> <String>)* (attach <FileName>)*
        [deleted [<Boolean>]] [nevermarkspam [<Boolean>]] [processforcalendar [<Boolean>]]

Insert a message into a user's mailbox similar to IMAP APPEND, bypassing most scanning and classification.
API Documentation: https://developers.google.com/gmail/api/v1/reference/users/messages/insert
    gam <UserTypeEntity> insert message (<SMTPDateHeader> <Time>)* (<SMTPHeader> <String>)* (header <String> <String>)* (addlabel <LabelName>)*
        (textmessage <String>)|(textfile <FileName> [charset <CharSet>]) (htmlmessage <String>)|(htmlfile <FileName> [charset <CharSet>])
        (replace <Tag> <String>)* (attach <FileName>)*
        [deleted [<Boolean>]]

For details, see: https://github.com/taers232c/GAMADV-X/wiki/Users-Gmail-Messages-Threads

4.54.02

Add a User column to the CSV file produced by gam print teamdrives.

4.54.01

In gam update cros, the handling of the quickcrosmove option has changed.
See: https://github.com/taers232c/GAMADV-XTD/wiki/ChromeOS-Devices

4.54.00

File display

Added showmimetype [not] <MimeTypeList> option to print|show filelist and show filetree to allow filtering of the output by MIME type.
By default, all types of files and folders are displayed. You can specify a list of MIME types to display or a list of MIME types to suppress.
    <MimeType> ::=
        gdoc|gdocument|
        gdrawing|
        gfolder|gdirectory|
        gform|
        gfusion|
        gmap|
        gpresentation|
        gscript|
        gsite|
        gsheet|gspreadsheet|
        <String>
    <MimeTypeList> ::= "<MimeType>(,<MimeType>)*"
    gam <UserTypeEntity> print|show filelist [todrive [<ToDriveAttributes>]] [anyowner|(showownedby any|me|others)]
        [query <QueryDriveFile>] [fullquery <QueryDriveFile>] [<DriveFileQueryShortcut>]
        [select <DriveFileEntityListTree>] [selectsubquery <QueryDriveFile>] [mimetype [not] <MimeTypeList>] [depth <Number>]
        [filepath] [buildtree] [allfields|<DriveFieldName>*|(fields <DriveFieldNameList>)] (orderby <DriveFileOrderByFieldName> [ascending|descending])* [delimiter <String>]
    gam <UserTypeEntity> show filetree [anyowner|(showownedby any|me|others)]
        [select <DriveFileEntityListTree>] [selectsubquery <QueryDriveFile>] [showmimetype [not] <MimeTypeList>] [depth <Number>]
        (orderby <DriveFileOrderByFieldName> [ascending|descending])*

The gam print|show filelist command has been updated to provide two modes of operation when you use
the select <DriveFileEntityListTree> option. Currently, GAM downloads the user's entire list of files with one API call
(of course, there may be many entries downloaded) and then uses that information to build a file tree. The file tree is used to
display the list of files/folders contained in the selected folder. Some GAM users find this big download confusing.

The new mode, which will be the default when you use the select <DriveFileEntityListTree> option, makes recursive API calls to get the children
of the specified folder to display. The new mode will make N API calls instead of 1 API call; N is the number of folders
recursively beneath the specified folder. Depending on the number of folders, this mode may be faster even though
additional API calls are being made.

The buildtree argument specifies that you want the first mode (build file tree) mode of operation.
    gam <UserTypeEntity> print|show filelist [todrive [<ToDriveAttributes>]] [anyowner|(showownedby any|me|others)]
        [query <QueryDriveFile>] [fullquery <QueryDriveFile>] [<DriveFileQueryShortcut>]
        [select <DriveFileEntityListTree>] [showmimetype [not] <MimeTypeList>] [depth <Number>]
        [filepath] [buildtree] [allfields|<DriveFieldName>*|(fields <DriveFieldNameList>)] (orderby <DriveFileOrderByFieldName> [ascending|descending])* [delimiter <String>]

The filepath option is used to display the path to each file. If buildtree is specified, you will see the full path to each file.
If buildtree is not specified, you will see the relative file path starting from the top level folder being displayed.

If you don't use the select <DriveFileEntityListTree> option, the user's entire list of folders is downloaded and the filepath option will show
the full path to each file.

Claim ownership

The gam claim ownership command has been updated to provide two modes of operation.
Currently, GAM downloads the user's entire list of files with one API call (of course, there may be many
entries downloaded) and then uses that information to build a file tree. The file tree is used to
recursively find the children of the specified folders to transfer. Some GAM users find this big download
confusing.

The new mode, which will be the default, makes recursive API calls to get the children of the specified
folders to transfer. The new mode will make N API calls instead of 1 API call; N is the number of folders
recursively beneath the specified folder. Depending on the number of folders, this mode may be faster even though
additional API calls are being made.

The buildtree argument specifies that you want the first mode (build file tree) mode of operation.
    gam <UserTypeEntity> claim ownership <DriveFileEntity> [skipids <DriveFileEntity>] [skipusers <UserTypeEntity>] [subdomains <DomainNameEntity>]
        [includetrashed] [restricted [<Boolean>]] [writerscantshare [<Boolean>]]
        [filepath] [preview] [buildtree] [todrive [<ToDriveAttributes>]]

Typically, the filepath option is used with the preview option so you can verify what files are going to be transferred.
If buildtree is specified, you will see the full path to each file. If buildtree is not specified, you will see the
relative file path starting from the top level folder being transferred.

User attributes

There are several user attributes that can have multiple values; each value can be marked notprimary or primary.
It is a Google API error to mark more than one value primary; Gam now checks that only one value is marked primary.
The affected attributes are: addresses, ims, organizations, posixaccounts, phones, websites.
For posixaccounts, no two values with the same systemId can be marked primary.

4.53.26

With thanks to Jay for the initial code, new user attributes have been added.
See: https://developers.google.com/admin-sdk/directory/v1/reference/users#resource

    <UserAttributes> ::=
        (location|locations clear|([type default|desk|<String>] area <String> [building|buildingid <String>] [floor|floorname <String>] [section|floorsection <String>] [desk|deskcode <String>] endlocation))|
        (posix|posixaccounts clear|(username <String> uid <Integer> [gid <Integer>] [system|systemid <String>] [home|homedirectory <String>] [shell <String>] [gecos <String>] [primary <Boolean>] endposix))|
        (ssh|sshkeys|sshpublickeys clear|(key <String> [expires <Integer>] endssh))|

* location - area <String> is required; all other items are optional.
* posix - username <String> and uid <Integer> are required; all other items are optional. The uid must be >= 1000.
* ssh - key <strings> is required; ; all other items are optional.

4.53.25

Fix CSV file reader to accept universal newlines; this allows Mac users to save files from Excel as Comma Separated Values (.csv) files;
that format uses \r as a line terminator and it was not recognized by Gam.

4.53.24

Added command to print Gmail labels to a CSV file.
    gam <UserTypeEntity> print labels|label [onlyuser [<Boolean>]] [showcounts [<Boolean>]] [todrive [<ToDriveAttributes>]]

Added select <DriveFileEntity> argument to gam transfer drive to allow transferring selected files/folders of a source user
to a target user rather that all of the source users file/folders.
    gam <UserTypeEntity> transfer drive <UserItem> [select <DriveFileEntity>] [keepuser | (retainrole reader|commenter|writer|editor)]
        (orderby <DriveFileOrderByFieldName> [ascending|descending])*
        [(targetfolderid <DriveFolderID>)|(targetfoldername <DriveFolderName>)] [targetuserfoldername <DriveFolderName>]
        [preview] [todrive [<ToDriveAttributes>]]

Added owneremail option to gam info/print courses to have Gam display the course owners email address. There is an extra API call per course to
get the email address.
    gam info course <CourseID> [owneremail] [alias|aliases] [show all|students|teachers] [countsonly]
        [fields <CourseFieldNameList>] [skipfields <CourseFieldNameList>]
    gam info courses <CourseEntity> [owneremail] [alias|aliases] [show all|students|teachers] [countsonly]
        [fields <CourseFieldNameList>] [skipfields <CourseFieldNameList>]
    gam print courses [todrive [<ToDriveAttributes>]] (course|class <CourseID>)*|([teacher <UserItem>] [student <UserItem>])
        [owneremail] [alias|aliases][delimiter <String>] [show all|students|teachers] [countsonly]
        [fields <CourseFieldNameList>] [skipfields <CourseFieldNameList>]

4.53.23

Fixed error in gam transfer ownership where My Drive was included in list of files to transfer; this, of course, is not allowed.

4.53.22

Anywhere you can specify an absolute <Date> or <DateTime> value,
you can now specify a positive or negative offset from the current time.
    <Date> ::=
        <Year>-<Month>-<Day> |
        (+|-)<Number>(d|w)
    <DateTime> ::=
        <Year>-<Month>-<Day>(<Space>|T)<Hour>:<Minute> |
        (+|-)<Number>(m|h|d|w)
m - minutes
h - hours
d - days
w - weeks

Example: gam user user@domain.com print filerevisions drivefilename "Test File" select range -10d -5d

4.53.21

Fix error when specifying delta <Time> and timezone is utc.

4.53.20

Handle Unicode issues in error messages with accented/extended characters.

Thanks to DanielX for suggesting the following enhancement. Anywhere you can specify an absolute <Time> value,
you can now specify a positive or negative offset from the current time.
    <Time> ::=
        <Year>-<Month>-<Day>(<Space>|T)<Hour>:<Minute>:<Second>[.<MilliSeconds>](Z|(+|-(<Hour>:<Minute>))) |
        (+|-)<Number>(m|h|d|w)
m - minutes
h - hours
d - days
w - weeks

Example: gam report logins start -1w end -1d

4.53.19

Improve filepath display in gam transfer ownership.

4.53.18

The gam transfer ownership command has been updated to provide two modes of operation.
Currently, GAM downloads the user's entire list of files with one API call (of course, there may be many
entries downloaded) and then uses that information to build a file tree. The file tree is used to
recursively find the children of the specified folders to transfer. Some GAM users find this big download
confusing.

The new mode, which will be the default, makes recursive API calls to get the children of the specified
folders to transfer. The new mode will make N API calls instead of 1 API call; N is the number of folders
recursively beneath the specified folder. Depending on the number of folders, this mode may be faster even though
additional API calls are being made.

The buildtree argument specifies that you want the first mode (build file tree) mode of operation.
    gam <UserTypeEntity> transfer ownership <DriveFileEntity> <UserItem> [includetrashed] (orderby <DriveFileOrderByFieldName> [ascending|descending])*
        [filepath] [preview] [buildtree] [todrive [<ToDriveAttributes>]]

Typically, the filepath option is used with the preview option so you can verify what files are going to be transferred.
If buildtree is specified, you will see the full path to each file. If buildtree is not specified, you will see the
relative file path starting from the top level folder being transferred.

Added notify option to gam printers add/sync to allow control over sending notifications when a printer is shared with a user.
    gam printer|printers <PrinterIDEntity> add user|manager|owner <PrinterACLScopeEntity> [notify]
    gam printer|printers <PrinterIDEntity> sync user|manager|owner <PrinterACLScopeEntity> [notify]
If notify is not specified, no notification will be sent.

4.53.17
Fixed code so that forwardingaddress is recognized as documented.
    gam <UserTypeEntity> delete forwardingaddress|forwardingaddresses <EmailAddressEntity>

4.53.16

Due to Google limitations, Gam now preserves the case of all aliases when calling the Directory API.
In particular, you must use the exact case of an alias in order to delete it.

4.53.15

Updated todrive to allow choosing whether to open a browser to view the uploaded file.
The default value is the value of no_browser from gam.cfg.
    <ToDriveAttributes> ::=
        (tduser <EmailAddress>)|
        (tdtitle <String>)|
        (tdparent id:<DriveFolderID>|<DriveFolderName>)|(tdfileid <DriveFileID>)
        (tdtimestamp [<Boolean>] [tddaysoffset <Number>] [tdhoursoffset <Number])|
        (tdlocalcopy [<Boolean>])|
        (tdnobrowser [<Boolean>])

4.53.14

Correct errors in gam update group add|remove|sync|update member when the members are specified by user/group IDs rather than email addresses.

4.53.13

Corrected gam delete guardian to properly delete a guardian specified by email address.

4.53.12

Updated todrive to allow updating an existing file rather than creating a new file.
<ToDriveAttributes> ::=
        (tduser <EmailAddress>)|
        (tdtitle <String>)|
        (tdparent id:<DriveFolderID>|<DriveFolderName>)|(tdfileid <DriveFileID>)
        (tdtimestamp [<Boolean>] [tddaysoffset <Number>] [tdhoursoffset <Number])|
        (tdlocalcopy [<Boolean>])

tdfileid <DriveFileID> specifies the file to be updated.

4.53.11

Recoded gam print|show drivesettings to provide more flexibility; print and show are now separate
and you can select the desired output fields.
The field names are always the Google Drive REST API v3 native names; drive_v3_native_names in gam.cfg is not used.

<DriveSettingsFieldName> ::=
        appinstalled|
        exportformats|
        foldercolorpalette|
        importformats|
        largestchangeid|
        limit|
        maximportsizes|
        maxuploadsize|
        name|
        permissionid|
        rootfolderid|
        teamdrivethemes|
        usage|
        usageindrive|
        usageindrivetrash
<DriveSettingsFieldNameList> ::= "<DriveSettingsFieldName>(,<DriveSettingsFieldName>)*"

gam <UserTypeEntity> print drivesettings [todrive [<ToDriveAttributes>]] [allfields|<DriveSettingsFieldName>*|(fields <DriveSettingsFieldNameList>)] [delimiter <String>]
gam <UserTypeEntity> show drivesettings [allfields|<DriveSettingsFieldName>*|(fields <DriveSettingsFieldNameList>)] [delimiter <String>]

If no fields are selected, these fields will be displayed:
    name,appInstalled,largestChangeId,limit,maxUploadSize,permissionId,rootFolderId,usage,usageInDrive,usageInDriveTrash

When executing commands in batches, GAM may exceed Google's rate limits on command execution; added inter_batch_wait to gam.cfg to allow rate limiting.
    inter_batch_wait
        When processing items in batches, how many seconds should GAM wait between batches
        Default: 0
        Range: 0 - 60
        Environment variable: GAM_INTER_BATCH_WAIT
For example, when removing users from groups, batch_size = 25 and inter_batch_wait = 2 seems to avoid exceeding the rate limit.

4.53.10

Handle additional API errors when updating the teacher of a course.

4.53.09

Added teacher <UserItem> to gam update course as Google now supports updating the teacher for a course.
See: https://support.google.com/edu/classroom/answer/7477648

4.53.08

Fix coding error in gam print groups.

4.53.07

In <CrOSTypeEntity>, a selection name was changed to make it consistent with other selection names.
If you have scripts that use the previous name, uopdate them to have the current name.
Previous: csvcros <FieldName>(:<FieldName>*)
Current:  croscsvdata <FieldName>(:<FieldName>*)

Handle quotaExceeded errors when deleting members from groups.

Fix coding error in gam add permissions.

4.53.06

Added new method (query:orgunitpath:<OrgUnitPath>) of specifying CrOS OU for backwards compatability with Jay's version.
    <CrOSItem> ::= <CrOSID>|(query:<QueryCrOS>)|(query:orgunitpath:<OrgUnitPath>)|(query <QueryCrOS>)
    <CrOSEntity> ::= <CrOSItem> | <CrOSList> | <FileSelector> | <CSVkmdSelector>
    gam info cros <CrOSEntity> [nolists] [listlimit <Number>] [start <Date>] [end <Date>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>]
    gam update cros <CrOSEntity> (<CrOSAttributes>+ [quickcrosmove [<Boolean>]])|(action <CrOSAction> [acknowledge_device_touch_requirement])
Example: move CrOS devices from one OU to another:
    gam update cros query:orgunitpath:/Students/2017 ou /Students/2018
The simpler way to do this is:
    gam cros_ou /Students/2017 update ou /Students/2018

Google has introduced a new, faster method for moving CrOS devices to a new OU. The quickcrosmove argument in the
following commands causes Gam to use the new method; if not specified, the previous individual/batch method is used.
In the CrOS update commands, the quickcrosmove is applicable only if the OU is the only <CrOSAttribute> being updated;
if other <CrOSAttributes> are being updated, each CrOS device is updated individually.
In the new method, Google doesn't seem to do any error checking of the CrOS deviceIds, there is no error message
given if invalid CrOS deviceIds are specified.
    gam update cros <CrOSEntity> (<CrOSAttributes>+ [quickcrosmove [<Boolean>]])|(action <CrOSAction> [acknowledge_device_touch_requirement])
    gam <CrOSTypeEntity> update (<CrOSAttributes>+ [quickcrosmove [<Boolean>]])|(action <CrOSAction> [acknowledge_device_touch_requirement])
    gam update org|ou <OrgUnitItem> add|move <CrOSTypeEntity> [quickcrosmove [<Boolean>]]
    gam update orgs|ous <OrgUnitEntity> add|move <CrOSTypeEntity> [quickcrosmove [<Boolean>]]
If <Boolean> is not specified for quickcrosmove, the default is True.

4.53.05

Improved performance of gam print group-members when recursive noduplicates is specified.

Added additional error checking for gam add drivefileacl.

4.53.04

Fix coding error in gam print groups that caused trap.

4.53.03

Changed anyparentname to sharedparentname in gam add/copy/update drivefile.

4.53.02

Added members, managers, owners arguments to gam info group and gam print group-members to allow display of specific roles.
By default, all members, managers and owners are displayed.
    gam info group|groups <GroupEntity> [members] [managers] [owners] [nousers] [noaliases] [groups] <GroupFieldName>* [fields <GroupFieldNameList>] [formatjson]
    gam print group-members|groups-members [todrive [<ToDriveAttributes>]] ([domain <DomainName>] [member <UserItem>])|[group <GroupItem>]|[select <GroupEntity>]
        [members] [managers] [owners] [membernames] <MembersFieldName>* [fields <MembersFieldNameList>] [userfields <UserFieldNameList>] [recursive [noduplicates]]

Added sharedparentname argument to gam add/copy/update drivefile to allow specifying a parent folder owned by anyone,
not just the user in the command. This is typically used to specify a shared folder.
    <DriveFileAddAttributes> ::=
        <DriveFileAttributes>|
        ignoredefaultvisibility|
        (modifieddate|modifiedtime <Time>)|
        (parentid <DriveFolderID>)|
        (parentname <DriveFolderName>)|
        (sharedparentname <DriveFolderName>)|
        (teamdriveparent <TeamDriveName>)|
        (teamdriveparentid <TeamDriveID>|<DriveFolderID>)|
        (teamdriveparentname <DriveFolderName>)|
        usecontentasindexabletext
    gam <UserTypeEntity> add drivefile [drivefilename <DriveFileName>] <DriveFileAddAttributes>*

    <DriveFileCopyAttributes> ::=
        <DriveFileAttributes>|
        ignoredefaultvisibility|
        (parentid <DriveFolderID>)|
        (parentname <DriveFolderName>)|
        (sharedparentname <DriveFolderName>)|
        (teamdriveparent <TeamDriveName>)|
        (teamdriveparentid <TeamDriveID>|<DriveFolderID>)|
        (teamdriveparentname <DriveFolderName>)
    gam <UserTypeEntity> copy drivefile <DriveFileEntity> [newfilename <DriveFileName>] [recursive [depth <Number>]] <DriveFileCopyAttributes>*

    <DriveFileUpdateAttributes> ::=
        <DriveFileAttributes>|
        (addparents <DriveFolderIDList>)|
        (removeparents <DriveFolderIDList>)|
        (parentid <DriveFolderID>)|
        (parentname <DriveFolderName>)|
        (sharedparentname <DriveFolderName>)|
        usecontentasindexabletext
    gam <UserTypeEntity> update drivefile <DriveFileEntity> [copy] [newfilename <DriveFileName>] <DriveFileUpdateAttributes>*

parentid <DriveFolderID> - Specify parent folder by Id
parentname <FolderName> - Specify parent folder by name, folder is owned by user in command
sharedparentname <FolderName> - Specify parent folder by name, folder is owned by any user
If none of the parent options are specified, the parent folder is the root folder,

Added commands to import events into calendars; this is useful when you want to import
events from .ics files. Importing events is similar to adding events; the principal difference
is that you must specify an iCalUID. All instances of recurring events will have the same
iCalUID but different event IDs. The import command supports two new attributes to set the
event organizer, but the API doesn't seem to honor the values; the organizer is set to
the calendar owner.
See: https://developers.google.com/google-apps/calendar/v3/reference/events/import
    <EventImportAttributes> ::=
        <EventAttributes>|
        (organizername <String>)|
        (organizeremail <EmailAddress>)
    gam calendar|calendars <CalendarEntity> import event icaluid <iCalUID> <EventImportAttributes>+
    gam <UserTypeEntity> import event <CalendarEntity> icaluid <iCalUID> <EventImportAttributes>+

Added maxinstances argument to gam info events to allow display of instances of recurring events.
    gam calendar|calendars <CalendarEntity> info events <EventEntity> [maxinstances <Number>]
    gam <UserTypeEntity> info events <CalendarManageEntity> <EventEntity> [maxinstances <Number>]
maxinstances -1 - Default, display base event
maxinstances 0 - Display all instances of a recurring event
maxinstances N - Display first N instances of a recurring event

Added event_max_results to gam.cfg
    event_max_results
        When retrieving lists of Calendar events/event instances from API, how many should be retrieved in each chunk
        Default: 250

4.53.01

Fix coding error in gam print/show contacts.

4.53.00

It's a batch from the past; added command gam tbatch to allow gam batch files to invoke gam csv commands.
    gam tbatch <FileName>|- [charset <Charset>] [showcmds]
In Gam version 4.36.00, multithreading was changed to multiprocessing to increase performance; unfortunately,
this change broke the ability of a Gam batch file to invoke gam csv commands. With tbatch, multithreading
is again used to process the batch file and gam csv commands can be included in the batch file. You should also use
tbatch if auto_batch_min in gam.cfg  has a value greater than zero and there are commands in the batch file that would
invoke auto batch processing. If you're not using gam csv or auto_batch_min is zero, use gam batch as performance will be better.

Added num_tbatch_threads to gam.cfg,
    num_tbatch_threads
        Number of threads for gam tbatch
        Default: 2
With gam tbatch there are potentially 1+num_tbatch_threads*num_threads Gam threads/processes running simultaneously;
exercise caution to avoid overloading your system.

With gam tbatch, Gam has no ability to intelligently process redirected stdout/stderr files.
For example, if you execute: gam redirect stdout ./Batch.out redirect stderr ./Batch.err tbatch Batch.bat
all of the threads will have stdout set to ./Batch.out and stderr to ./Batch.err, but the multiple threads will be 
writing to the output files simultaneously. Of course, you can use redirect on the commands within the batch file
to precisely control the output.

Added showcmds argument to gam batch and gam tbatch commands; this causes Gam to display each command to stderr
as it is initiated so you can monitor Gam's progress.
    gam batch <FileName>|- [charset <Charset>] [showcmds [<Boolean>]]
    gam tbatch <FileName>|- [charset <Charset>] [showcmds [<Boolean>]]
If <Boolean> is omitted, True is assumed.
If stderr is redirected, the commands will be written to the redirected stderr and to sys.stderr so you can still
monitor Gam's progress on your screen.

Added print <String> command that can be embedded in Gam batch files.  <String> will be written to any
redirected stderr and to sys.stderr.

4.52.03

Added shownames argument to gam info vaulthold to control whether account and org unit names are displayed.
This makes info consistent with show and print.
Additional API calls are required to get the names.
    gam info vaulthold|hold <HoldItem> matter <MatterItem> [shownames]

4.52.02

In the Vault commands, matters and holds are displayed as Name(ID).
In gam print holds the matterName column was added.

4.52.01

Fixed error in copy drivefile recursive where only the first 100 files in a folder were copied.

4.52.00

Added arguments to print aliases to allow selection of aliases to print.
    gam print alias|aliases [todrive [<ToDriveAttributes>]] [shownoneditable] [nogroups] [nousers] [query <QueryUser>]
By default, all group and user aliases are printed.
nogroups - Print only user aliases
nousers - Print only group aliases
query <QueryUser> - Print aliases for selected users

Based on initial code provided by Jay Lee, Google Vault is now supported.
    gam create vaulthold|hold corpus drive|groups|mail matter <MatterItem> [name <String>] [query <QueryVaultCorpus>]
        [(accounts|groups|users <EmailItemList>) | (orgunit|ou <OrgUnit>)]
        [starttime <Date>|<DateTime>] [endtime <Date>|<DateTime>] 
    gam update vaulthold|hold <HoldItem> matter <MatterItem> [query <QueryVaultCorpus>]
        [([addaccounts|addgroups|addusers <EmailItemList>] [removeaccounts|removegroups|removeusers <EmailItemList>]) | (orgunit|ou <OrgUnit>)]
        [starttime <Date>|<DateTime>] [endtime <Date>|<DateTime>] 
    gam delete vaulthold|hold <HoldItem> matter <MatterItem>
    gam info vaulthold|hold <HoldItem> matter <MatterItem>
    gam show vaultholds|holds [matter|matters <MatterItemList>] [shownames]
    gam print vaultholds|holds [todrive [<ToDriveAttributes>]] [matter|matters <MatterItemList>] [shownames]

    gam create vaultmatter|matter [name <String>] [description <string>]
        [collaborator|collaborators <CollaboratorItemList>]
    gam update vaultmatter|matter <MatterItem> [name <String>] [description <string>]
        [addcollaborator|addcollaborators <CollaboratorItemList>] [removecollaborator|removecollaborators <CollaboratorItemList>]
    gam close vaultmatter|matter <MatterItem>
    gam reopen vaultmatter|matter <MatterItem>
    gam delete vaultmatter|matter <MatterItem>
    gam undelete vaultmatter|matter <MatterItem>
    gam info vaultmatter|matter <MatterItem>
    gam show vaultmatters|matters [basic|full]
    gam print vaultmatters|matters [todrive [<ToDriveAttributes>]] [basic|full]


To use Vault commands you must do the following two steps.
Add Google Vault API to your project; do this manually in the Developer's Console or with the following command if you used Gam to create your project.
    gam update project

Update authentication; select Vault API and then continue to authorization.
    gam oauth create

4.51.09

Code cleanup.

4.51.08

Handle httplib2.ServerNotFoundError in callGData and callGAPI.

4.51.07

Fix error where gam csvkmd cros_ous/cros_ous_and_children ... was not handled properly.

4.51.06

Extend notsuspended argument of gam update group <GroupItem> add/sync to allow suspended users in other groups to be excluded from being added to the group.
    gam update group <GroupItem> add [owner|manager|member] [notsuspended] <UserTypeEntity>
    gam update group <GroupItem> sync [owner|manager|member] [notsuspended] <UserTypeEntity>
This option is effective for the following values of <UserTypeEntity>:
    all users|
    group <GroupItem>|
    groups <GroupList>|
    group_users <GroupList> [members] [managers] [owners] [primarydomain] [domains <DomainNameList>] [recursive] end|
    ou|org <OrgUnitPath|ou_and_children|ou_and_child <OrgUnitPath>|
    query <Query>

4.51.05

Code cleanup.

4.51.04

Update googleapiclient library from 1.6.1 to 1.6.2.

Handle additional Team Drive errors.

4.51.03

* Suspend/Unsuspend Users
Added commands to suspend/unsuspend users; these are equivalent to update user with the suspended argument.
    gam suspend user <UserItem>
    gam unsuspend user <UserItem>
    gam suspend users <UserTypeEntity>
    gam unsuspend users <UserTypeEntity>
    gam <UserTypeEntity> suspend users
    gam <UserTypeEntity> unsuspend users

* Add Drivefile
When adding a drive file, the fileId will be output along with the name.

4.51.02

* Create Course
Change in 4.51.01 reversed, courses are created in the PROVISIONED state by default.

4.51.01

* Print Delegates
The column headings in gam print delegates are controlled by gam.cfg print_native_names.
    print_native_names = false - Delegator,Delegate,Delegate Email,Status
    print_native_names =  true - User,delegateName,delegateAddress,delegationStatus

4.51.00

* Create Course
Courses are now created in the ACTIVE state, previously they were created in the PROVISIONED state.

* Create Group
Updated gam create group to avoid a Google API issue that generated an error when the group description contains a <, > or =.

* Create User
Added arguments to gam create user to allow sending a message with account details to a secondary email address upon successful creation.
    gam create user <EmailAddress> <UserAttributes>* [notify <EmailAddress>] [subject <String>] [message <String>|(file <FileName> [charset <CharSet>])]
In the subject and message, these strings will be replaced with the specified values:
#givenname# - first/given name
#familyname# - last/family name
#email# - user's email address
#user# - user's email address
#username# - portion of user's email address before @
#domain# - portion of user's email after after @
#password# - password

If subject is not specified, the following value will be used:
    Welcome to #domain#
If message is not specified, the following value will be used:
    Hello #givenname# #familyname#,\n\nYou have a new account at #domain#\nAccount details:\n\nUsername\n#user#\n\nPassword\n#password#\n\n
    Start using your new account by signing in at\nhttps://www.google.com/accounts/AccountChooser?Email=#user#&continue=https://apps.google.com/user/hub\n
If you want a language/organization specific message, use a template file: message file <FileName> [charset <CharSet>]

The email is sent from the admin user identified in oauth2.txt, gam oauth info will show the value.
Gam gets no indication as to the status of the message delivery; the admin user user will get a non-delivery receipt if the message
could not be sent to the notify <EmailAddress>.

* Print Delegates
The column headings for gam print delegates were changed to match Jay Lee's Gam. The Delegation ID column was dropped as it was redundant.
Old: Delegator,Delegate,Delegate Email,Delegation ID,Status
New: User,delegateName,delegateAddress,delegationStatus

* Print Groups/Orgs
A variable, print_native_names (default value is False), has been added to gam.cfg to control the field names used in gam print groups/orgs.
When true, the native Directory API field names are used; when false, Gam specific field names are used. When true, the field names output
in gam print groups/orgs will match the fields names output in gam info group/org.

Groups:
    print_native_names = false - Email,ID,Name,Description,DirectMembersCount,Aliases,NonEditableAliases,Admin_Created
    print_native_names =  true - email,id,name,description,directMembersCount,aliases,nonEditableAliases,adminCreated
Orgs:
    print_native_names = false - Path,ID,Parent,ParentID,Name,Description,InheritanceBlocked
    print_native_names =  true - orgUnitPath,OrgUnitId,parentOrgUnitPath,parentOrgUnitId,name,description,blockInheritance

Added showparent argument to gam print orgs.
    gam print orgs|ous [todrive [<ToDriveAttributes>]] [showparent] [toplevelonly] [fromparent <OrgUnitItem>]
        [allfields|<OrgUnitFieldName>*|(fields <OrgUnitFieldNameList>)] [convertcrnl]
By default, gam print orgs prints all child org units of /; if fromparent <OrgUnitItem> is specified, gam prints all child org units of <OrgUnitItem>.
The showparent argument causes the parent org unit, / or fromparent <OrgUnitItem>, to be printed as well.
Previously, if no fields were specified, only the Path field was displayed. Now, the default fields printed are:
    print_native_names = false - Path,ID,Name,ParentID.
    print_native_names =  true - orgUnitPath,orgUnitId,name,orgUnitParentId.

* Update Mobile
Eliminated model, os and useragent arguments from gam update mobile as the Directory API no longer supports them.

* Print Mobile
Added arguments to gam info/print mobile to allow field specification.
    <MobileFieldName> ::=
        adbstatus|
        applications|
        basebandversion|
        bootloaderversion|
        brand|
        buildnumber|
        defaultlanguage|
        developeroptionsstatus|
        devicecompromisedstatus|
        deviceid|
        devicepasswordstatus|
        email|
        encryptionstatus|
        firstsync|
        hardware|
        hardwareid|
        imei|
        kernelversion|
        lastsync|
        managedaccountisonownerprofile|
        manufacturer|
        meid|
        model|
        name|
        networkoperator|
        os|
        otheraccountsinfo|
        privilege|
        releaseversion|
        resourceid|
        securitypatchlevel|
        serialnumber|
        status|
        supportsworkprofile|
        type|
        unknownsourcesstatus|
        useragent|
        wifimacaddress

    <MobileFieldNameList> ::= "<MobileFieldName>(,<MobileFieldName>)*"

    <MobileOrderByFieldName> ::=
        deviceid|email|lastsync|model|name|os|status|type

    gam info mobile <MobileEntity>
        [basic|full|allfields] <MobileFieldName>* [fields <MobileFieldNameList>]
    gam print mobile [todrive [<ToDriveAttributes>]] [query <QueryMobile>]
        [orderby <MobileOrderByFieldName> [ascending|descending]]
        [basic|full|allfields] <MobileFieldName>* [fields <MobileFieldNameList>]
        [delimiter <String>] [appslimit <Number>] [listlimit <Number>]

The email, name and otheraccountsinfo fields can have multiple values; the listlimit argument controls how these fields are displayed.
listlimit -1 - print no values for the field
listlimit 0 - print all values for the field
listlimit 1 - print one value for the field, default
listlinit N - print the first N values for the field

The applications field can have multiple values; the appslimit argument controls how this field is displayed.
appslimit -1 - print no values for the field, default
appslimit 0 - print all values for the field
appslinit N - print the first N values for the field

delimiter - The items in the applications, email, name and otheraccountsinfo fields are separated by delimiter, it defaults to the value of csv_output_field_delimiter in gam.cfg.

4.50.11

When gam copy drivefile is copying a folder and the parentname <DriveFolderName> option is specified, the folder is copied to the root folder,
not <DriveFolderName>; this has been corrected.

Added depth <Number> argument to gam copy drivefile to control folder copying.
    gam <UserTypeEntity> copy drivefile <DriveFileEntity> [newfilename <DriveFileName>] [recursive [depth <Number>]]
        [parentid <DriveFolderID>] [parentname <DriveFolderName>]
        [teamdriveparentid <DriveFolderID>] [teamdriveparent <TeamDriveName>] [teamdriveparentname <DriveFolderName>]

To copy a folder, you must specify the recursive argument; this copies the folder and all of its descendants to the new location.
Specifying depth <Number> allows you to specify that you do not want to copy all descendants but only decendants to the specified depth.
depth -1 - copy the folder and all descendants, default
depth 0 - copy the folder and no descendants
depth 1 - copy the folder and its immediate descendants
depth N - copy the folder and N levels of descendants

Added arguments to gam add/copy drivefile to allow adding/copying files to Team Drives.
    <DriveFileAddAttributes> ::=
        <DriveFileAttributes>|
        ignoredefaultvisibility|
        (modifieddate|modifiedtime <Time>)|
        (parentid <DriveFolderID>)|
        (parentname <DriveFolderName>)|
        (teamdriveparent <TeamDriveName>)|
        (teamdriveparentid <TeamDriveID>|<DriveFolderID>)|
        (teamdriveparentname <DriveFolderName>)|
        usecontentasindexabletext
    <DriveFileCopyAttributes> ::=
        <DriveFileAttributes>|
        ignoredefaultvisibility|
        (parentid <DriveFolderID>)|
        (parentname <DriveFolderName>)|
        (teamdriveparent <TeamDriveName>)|
        (teamdriveparentid <TeamDriveID>|<DriveFolderID>)|
        (teamdriveparentname <DriveFolderName>)
    gam <UserTypeEntity> add drivefile [drivefilename <DriveFileName>] <DriveFileAddAttributes>*
    gam <UserTypeEntity> copy drivefile <DriveFileEntity> [newfilename <DriveFileName>] [recursive [depth <Number>]] <DriveFileCopyAttributes>*
To add/copy a file to the root folder of a Team Drive, specify one of the following arguments:
    teamdriveparentid <TeamDriveID> - <TeamDriveID> identifies a Team Drive by ID
    teamdriveparent <TeamDriveName> - <TeamDriveName> identifies a Team Drive by name
To add/copy a file to a folder by identified by name on a Team Drive, specify one of the following arguments and the third argument:
    teamdriveparentid <TeamDriveID> - <TeamDriveID> identifies a Team Drive by ID
    teamdriveparent <TeamDriveName> - <TeamDriveName> identifies a Team Drive by name
    teamdriveparentname <DriveFolderName> - <DriveFolderName> identifies a folder on the Team Drive identified by the previous argument
To add/copy a file to a folder identified by ID on a Team Drive, specify the following argument:
    teamdriveparentid <DriveFolderID> - <DriveFolderID> identifies a drive folder on a Team Drive

4.50.10

Handle international characters in socket error message.

4.50.09

Sort rows in gam report customer.

4.50.08

Fix error when redirecting stdout with gam loop.

4.50.07

Improve getUsersToModify memory use.

4.50.06

Error handling cleanup.

4.50.05

Fix issue where gam org "/" ... fails when a domain has a very large number of users.

4.50.04

Added additional query shortcuts.
    <DriveFileQueryShortcut> ::=
        all_files | all_folders | all_google_files | all_non_google_files | all_items |
        my_files | my_folders | my_google_files | my_non_google_files | my_items |
        others_files | others_folders | others_google_files | others_non_google_files | others_items |
        writable_files
    <TeamDriveFileQueryShortcut> ::=
        all_files | all_folders | all_google_files | all_non_google_files | all_items

Keyword to query mappings:
all_files - "mimeType != application/vnd.google-apps.folder"
all_folders - "mimeType = application/vnd.google-apps.folder"
all_google_files - "mimeType != application/vnd.google-apps.folder and mimeType contains 'vnd.google'"
all_non_google_files - "not mimeType contains 'vnd.google'"
all_items - "" (An empty query specifies all files and folders)
my_files - "'me' in owners and mimeType != application/vnd.google-apps.folder"
my_folders - "'me' in owners and mimeType = application/vnd.google-apps.folder"
my_google_files - "'me' in owners and mimeType != application/vnd.google-apps.folder and mimeType contains 'vnd.google'"
my_non_google_files - "'me' in owners and not mimeType contains 'vnd.google'"
my_items - "'me' in owners"
others_files - "not 'me' in owners and mimeType != application/vnd.google-apps.folder"
others_folders - "not 'me' in owners and mimeType = application/vnd.google-apps.folder"
others_google_files - "not 'me' in owners and mimeType != application/vnd.google-apps.folder and mimeType contains 'vnd.google'"
others_non_google_files - "not 'me' in owners and not mimeType contains 'vnd.google'"
others_items - "not 'me' in owners"
writable_files - "'me' in writers and mimeType != application/vnd.google-apps.folder"

4.50.03

Added sorting capability to the following commands.
    gam <UserTypeEntity> show drivefileacl <DriveFileEntity> [showtitles] (orderby <DriveFileOrderByFieldName> [ascending|descending])*
    gam <UserTypeEntity> print drivefileacls <DriveFileEntity> [todrive [<ToDriveAttributes>]]> [oneitemperrow] [showtitles] (orderby <DriveFileOrderByFieldName> [ascending|descending])*
    gam <UserTypeEntity> show filerevisions <DriveFileEntity> [select <DriveFileRevisionIDEntity>] [previewdelete]
        [showtitles] [<DriveFieldName>*|(fields <DriveFieldNameList>)] (orderby <DriveFileOrderByFieldName> [ascending|descending])*
    gam <UserTypeEntity> print filerevisions <DriveFileEntity> [todrive [<ToDriveAttributes>]] [oneitemperrow] [select <DriveFileRevisionIDEntity>] [previewdelete]
        [showtitles] [<DriveFieldName>*|(fields <DriveFieldNameList>)] (orderby <DriveFileOrderByFieldName> [ascending|descending])*
    gam <UserTypeEntity> show fileinfo <DriveFileEntity> [filepath] [allfields|<DriveFieldName>*|(fields <DriveFieldNameList>)] (orderby <DriveFileOrderByFieldName> [ascending|descending])*
    gam <UserTypeEntity> show filepath <DriveFileEntity> (orderby <DriveFileOrderByFieldName> [ascending|descending])*

Added print filepath command. gam print/show filepath require multiple API calls per file to construct the filepath, plan your use accordingly.
    gam <UserTypeEntity> print filepath <DriveFileEntity> [todrive [<ToDriveAttributes>]] [oneitemperrow] (orderby <DriveFileOrderByFieldName> [ascending|descending])*

Several shortcuts have been introduced to allow specifying basic Drive file queries.
They can be used in any command that uses <DriveFileEntity>.
They can not be used in the select <DriveFileEntityListTree> option of gam print filelist/filetree.
The shortcuts can be used as standalone arguments to gam print filelist.
    <DriveFileQueryShortcut> ::= all_files | all_folders | all_items | my_files | my_folders | my_items | others_files | others_folders | others_items
    <TeamDriveFileQueryShortcut> ::= all_files | all_folders | all_items
    <DriveFileEntity> ::=
        <DriveFileIDEntity> |
        <DriveFileNameEntity> |
        <DriveFileQueryEntity> |
        <DriveFileQueryShortcut> |
        root |
        <TeamDriveIDEntity> [<TeamDriveFileQueryShortcut>] |
        <TeamDriveNameEntity> [<TeamDriveFileQueryShortcut>] |
        <TeamDriveFileNameEntity> |
        <TeamDriveFileQueryEntity> |
        <FileSelector> | <CSVkmdSelector> | <CSVSubkeySelector>) | <CSVDataSelector>)

Keyword to query mappings:
all_files - "mimeType != application/vnd.google-apps.folder"
all_folders - "mimeType = application/vnd.google-apps.folder"
all_items - "" (An empty query specifies all files and folders)
my_files - "'me' in owners and mimeType != application/vnd.google-apps.folder"
my_folders - "'me' in owners and mimeType = application/vnd.google-apps.folder"
my_items - "'me' in owners"
others_files - "not 'me' in owners and mimeType != application/vnd.google-apps.folder"
others_folders - "not 'me' in owners and mimeType = application/vnd.google-apps.folder"
others_items - "not 'me' in owners"

Examples:
Show ACls for folders not owned by the user: gam user testuser@domain.com show drivefileacls others_folders
Print revisions for files owned by the user: gam user testuser@domain.com print filerevisions my_files one_item_per_row
Print a file list of all of the users folders: gam user testuser@domain.com print filelist my_folders

4.50.02

Added argument oneitemperrow to print drivefileacls.
    gam <UserTypeEntity> print drivefileacls <DriveFileEntity> [showtitles] [oneitemperrow] [todrive [<ToDriveAttributes>]]

With print drivefileacls, by default the ACLs selected for display are all output on one line as a repeating item with the matching file id.
When oneitemperrow is specified, each ACL is output on a separate row with the matching file id. This simplifies processing the CSV file
with subsequent Gam commands.

Enhanced commands for managing Drive file revisions. The info filerevisions command was deleted
as the enhancements to show filerevisions made it superfluous. You can now select sets of revisions
to process. For delete filerevisions, the selection is required, for print and show it is optional;
if not specified, all file revisions are processed.
    <DriveFileRevisionID> ::= <String>
    <DriveFileRevisionIDList> ::= "<DriveFileRevisionID>(,<DriveFileRevisionID>)*"
    <DriveFileRevisionIDEntity> ::=
        (<DriveFileRevisionID>) | (id <DriveFileRevisionID>) | (id:<DriveFileRevisionID>) | (ids <DriveFileRevisionIDList>) | (ids:<DriveFileRevisionIDList>) |
        (first|last|allexceptfirst|allexceptlast <Number>) |
        (before|after <DateTime>) | (range <DateTime> <DateTime>)

<DriveFileRevisionIDEntity> can select specific revisions by ID or can select revisions by position in the list or by modification date.
first <Number> - process the first <Number> revisions.
last <Number> - process the last <Number> revisions.
allexceptfirst <Number> - process all revisions except the first <Number> revisions.
allexceptlast <Number> - process all revisions except the last <Number> revisions.
before <DateTime> - process all revisions with a modification date before <DateTime>.
after <DateTime> - process all revisions with a modification date equal to or after <DateTime>.
range <DateTime> <DateTime> - process all revisions with a modification date equal to or after the first <DateTime> and before the second <DateTime>.

    gam <UserTypeEntity> delete filerevisions <DriveFileEntity> select <DriveFileRevisionIDEntity> [previewdelete]
        [showtitles] [doit] [max_to_delete <Number>]

showtitles - output file title as well as file id in messages; this requires an additional API call per file.
previewdelete - output revisions to be deleted but do not delete them
doit - no revisions are deleted unless doit is specified
max_to_delete <Number> - no revisions are deleted if the number of revisions to delete exceeds <Number>; the default value is one. Set <Number> to 0 for no limit.

When deleting revisions, the last remaining revision can not be deleted. If the <Number> or <DateTime> selections identify all of the revisions for a file,
the following adjustments are made:
first <Number> - leave the latest revision
last <Number> - leave the earliest revision
allexceptfirst <Number> - not applicable, can't select all revisions
allexceptlast <Number> -  not applicable, can't select all revisions
before <DateTime> - leave the latest revision
after <DateTime> - leave the earleist revision
range <DateTime> <DateTime> - leave the earliest revision

    <RevisionsFieldName> ::=
        filesize|
        id|
        keepforever|
        lastmodifyinguser|
        lastmodifyingusername|
        md5checksum|
        mimetype|
        modifieddate|
        modifiedtime|
        originalfilename|
        pinned|
        publishauto|
        published|
        publishedoutsidedomain|
        size

    gam <UserTypeEntity> show filerevisions <DriveFileEntity> [select <DriveFileRevisionIDEntity>] [previewdelete]
        [showtitles] [<DriveFieldName>*|(fields <DriveFieldNameList>)]
    gam <UserTypeEntity> print filerevisions <DriveFileEntity> [todrive [<ToDriveAttributes>]] [select <DriveFileRevisionIDEntity>] [previewdelete]
        [showtitles] [oneitemperrow] [<DriveFieldName>*|(fields <DriveFieldNameList>)]

When select <DriveFileRevisionIDEntity> is omitted, all revisions are displayed. When select <DriveFileRevisionIDEntity> is specified,
previewdelete will make the list of revisions displayed match the list that would be processed by delete filerevisions.

showtitles - output file title as well as file id in output; this requires an additional API call per file.

With print filerevisions, by default the revisions selected for display are all output on one line as a repeating item with the matching file id.
When oneitemperrow is specified, each revision is output on a separate row with the matching file id. This simplifies processing the CSV file
with subsequent Gam commands.

4.50.01

Extended commands for managing Drive file revisions.
    gam <UserTypeEntity> delete filerevision <DriveFileEntity> <DriveFileRevisionID> [showtitles]
    gam <UserTypeEntity> info filerevision <DriveFileEntity> <DriveFileRevisionID> [showtitles]
    gam <UserTypeEntity> show filerevisions <DriveFileEntity> [showtitles]
    gam <UserTypeEntity> print filerevisions <DriveFileEntity> [todrive [<ToDriveAttributes>]] [showtitles]

4.50.00

This version of Gam has two major areas of change: a new version of the Google Drive API is used and Team Drives are supported.

Google Drive API

All Google Drive API calls have been converted from v2 to v3, see: https://developers.google.com/drive/v3/web/migration
Many of the changes are internal to Gam and have no visible effect. Google has modified/renamed many field names and these will affect
scripts that parse the output from gam print/show drivesettings/drivefileacls/fileinfo/filelist/filerevisions. Additionally, Google has dropped
some fields and their values are no longer available. On input, Gam accepts both the old and new field names.

A variable, drive_v3_native_names (default value is False), has been added to gam.cfg to control the field names on output.
When True, the v3 native field names are used; when False, the v3 native field names are mapped to the v2 field names.

If you have scripts that process the output from these print commands, you may have to make modifications to your scripts.
Run your print/show commands with a previous version of Gam and save the output.
With drive_v3_native_names = False, run your print/show commands with this version of Gam and compare the output to that saved in the previous run;
modify your scripts that process the output as appropriate.

There is a cost to mapping the v3 field names back to the v2 field names; you can avoid this cost by setting drive_v3_native_names = True,
running your print/show commands, comparing the output and making the appropriate script modifications.

print/show drivesettings
Dropped fields:
        DRIVE
        GMAIL
        PHOTOS
        domainSharingPolicy
        lauguageCode
Renamed fields (Old->New):
        name->displayName,
        quotaBytesTotal->limit
        quotaBytesUsed->usageInDrive
        quotaBytesUsedAggregate->usage
        quotaBytesUsedInTrash->usageInDriveTrash

print/show drivefileacls
Dropped fields:
        authKey
Renamed fields (Old->New):
        name->displayName
        withLink->allowFileDiscovery
        
print/show fileinfo/filelist
Dropped fields:
        defaultOpenWithLink
        embedLink
        exportLinks
        labels(hidden)
        markedViewedByMeDate
        openWithLinks
        selfLink
        parents(isRoot)
        parents(parentLink)
        parents(selfLink)
        permissions(selfLink)
        selfLink
        userPermission(selfLink)
Renamed fields (Old->New):
        alternateLink->webViewLink
        capabilities(canChangeRestrictedDownload)->capabilities(canChangeViewersCanCopyContent)
        createdDate->createdTime
        expirationDate->expirationTime
        fileSize->size
        lastViewedByMeDate->viewedByMeTime
        modified->modifiedByMe
        modifiedByMeDate->modifiedByMeTime
        modifiedDate->modifiedTime
        restricted->viewersCanCopyContent
        sharedWithMeDate->sharedWithMeTime
        title->name
        trashedDate->trashedTime
        viewed->viewedByMe
        withLink->allowFileDiscovery

print/show filerevisions
Dropped fields:
        exportLinks
        publishedLink
        selfLink
Renamed fields (Old->New):
        fileSize->size
        isAuthenticatedUser->me
        modifiedDate->modifiedTie
        picture.url->photoLink
        pinned->keepForever

The parents field of a file has undergone the most change. In Drive v2 it was a list of compound items with three sub-fields per item: id, isRoot, parentLink.
In Drive v3 the parents field is a list of simple items, the parent ids. The following examples show how the parents field is output in a CSV file for a
file with two parents.
Previous versions of Gam:
Owner,title,parents,parents.0.isRoot,parents.0.id,parents.0.parentLink,parents.1.isRoot,parents.1.id,parents.1.parentLink
testuser@domain.com,TestFile,2,True,PPPP1111,https://www.googleapis.com/drive/v2/files/PPPP1111,False,PPPP2222,https://www.googleapis.com/drive/v2/files/PPPP2222

Current version of Gam with drive_v3_name_names = false
Owner,title,parents,parents.0.id,parents.1.id
testuser@domain.com,TestFile,2,PPPP1111,PPPP2222

Current        version        of Gam with drive_v3_name_names        = true
Owner,name,parents
testuser@domain.com,TestFile,PPPP1111 PPPP2222

TeamDrive

Added commands to directly manipulate Team Drives.

    <TeamDriveID> ::= <String>
    <TeamDriveName> ::= <String>
    <TeamDriveEntity> ::= <TeamDriveID> | (teamdriveid <TeamDriveID>) | (teamdriveid:<TeamDriveID>) | (teamdrive <TeamDriveName>) | (teamdrive:<TeamDriveName>)

    gam <UserTypeEntity> create teamdrive <Name> [themeid <String>]
    gam <UserTypeEntity> update teamdrive <TeamDriveEntity> [name <Name>] [themeid <String>]
    gam <UserTypeEntity> delete teamdrive <TeamDriveEntity>
    gam <UserTypeEntity> info teamdrive <TeamDriveEntity>
    gam <UserTypeEntity> print teamdrives [todrive [<ToDriveAttributes>]]
    gam <UserTypeEntity> show teamdrives

The Team Drive theme IDs are available with gam <UserTypeEntity> show drivesettings.

Added support for Team Drives to various drive commands.

A Google Drive (My Drive) can be accessed by its ID or by the identifier root.
A Team Drive can be accessed by its ID or name. This latter capability is supplied by Gam as the Drive API
considers all Team Drives to have the same name, Team Drive; the name you specify when creating a Team Drive
is not used by the Drive API.

The user that creates a Team Drive is given the permission role organizer for the Team Drive;
to manage permission roles for other users for the Team Drive itself, the drivefileacl commands are used.
These commands must be issued by a user with permission role organizer.
For these commands, <DriveFileEntity> is extended:
    <TeamDriveIDEntity> ::= (teamdriveid <DriveFileItem>) | (teamdriveid:<DriveFileItem>)
    <TeamDriveNameEntity> ::= (teamdrive <TeamDriveName>) | (teamdrive:<TeamDriveName>)
    <DriveFileEntity> ::=
        <TeamDriveIDEntity> |
        <TeamDriveNameEntity>

    gam <UserTypeEntity> add drivefileacl <DriveFileEntity> anyone|(user <UserItem>)|(group <GroupItem>)|(domain <DomainName>)
        (role <DriveFileACLRole>) [withlink|(allowfilediscovery|discoverable [<Boolean>])] [expiration <Time>] [sendemail] [emailmessage <String>] [showtitles]
    gam <UserTypeEntity> update drivefileacl <DriveFileEntity> <DriveFilePermissionIDorEmail>
        (role <DriveFileACLRole>) [withlink|(allowfilediscovery|discoverable [<Boolean>])] [expiration <Time>] [removeexpiration [<Boolean>]] [showtitles]
    gam <UserTypeEntity> delete drivefileacl <DriveFileEntity> <DriveFilePermissionIDorEmail> [showtitles]
    gam <UserTypeEntity> show drivefileacl <DriveFileEntity> [showtitles]
    gam <UserTypeEntity> print drivefileacl <DriveFileEntity> [todrive [<ToDriveAttributes>]] [showtitles]

To manage permission roles for files/folders on a Team Drive, <DriveFileEntity> is extended:
    <TeamDriveFileNameEntity> ::= (teamdrivefilename <DriveFileName>) | (teamdrivefilename:<DriveFileName>)
    <TeamDriveFileQueryEntity> ::= (teamdrivequery <QueryDriveFile>) | (teamdrivequery:<QueryDriveFile>)
    <DriveFileEntity> ::=
        <TeamDriveFileNameEntity> |
        <TeamDriveFileQueryEntity>

When adding/updating/copying files/folders on Team Drives, <DriveFileAttributes> is extended to support Team Drives.
    <DriveFileAttributes> ::=
        (teamdriveparent <TeamDriveName>)|
        (teamdriveparentid <DriveFolderID>)|
        (teamdriveparentname <DriveFolderName>)
If the parent is the top level of the Team Drive, use: teamdriveparent <TeamDriveName>
If you know the ID of the parent folder, use: teamdriveparentid <DriveFolderID>
If the parent is some folder on the Team Drive, use: teamdriveparentname <DriveFolderName>

To display information about Team Drives and Team Drive files, <DriveFileEntity> is extended:
    <TeamDriveIDEntity> ::= (teamdriveid <DriveFileItem>) | (teamdriveid:<DriveFileItem>)
    <TeamDriveNameEntity> ::= (teamdrive <TeamDriveName>) | (teamdrive:<TeamDriveName>)
    <TeamDriveFileNameEntity> ::= (teamdrivefilename <DriveFileName>) | (teamdrivefilename:<DriveFileName>)
    <TeamDriveFileQueryEntity> ::= (teamdrivequery <QueryDriveFile>) | (teamdrivequery:<QueryDriveFile>)
    <DriveFileEntity> ::=
        <TeamDriveIDEntity> |
        <TeamDriveNameEntity> |
        <TeamDriveFileNameEntity>|
        <TeamDriveFileQueryEntity>
    gam <UserTypeEntity> show fileinfo <DriveFileEntity> [filepath] [allfields|<DriveFieldName>*|(fields <DriveFiledNameList>)]
    gam <UserTypeEntity> show filerevisions <DriveFileEntity>
    gam <UserTypeEntity> show filepath <DriveFileEntity>

To display a file tree for a Team Drive, select <DriveFileEntity> is extended:
    <DriveFileEntity> ::=
        <TeamDriveIDEntity> |
        <TeamDriveNameEntity> |
        <TeamDriveFileNameEntity>

    gam <UserTypeEntity> show filetree [anyowner|(showownedby any|me|others)]
        [select <DriveFileEntity>|orphans] [depth <Number>] (orderby <DriveOrderByFieldName> [ascending|descending])*

To display a file list for a Team Drive, select <DriveFileEntity> is extended:
    <DriveFileEntity> ::=
        <TeamDriveIDEntity> |
        <TeamDriveNameEntity> |
        <TeamDriveFileNameEntity> |
        <TeamDriveFileQueryEntity>

To display a file list that spans Team Drives, use the corpora <CorporaAttribute> option.
    CorporaAttribute> ::= allteamdrives|domain|user
allteamdrives: Lists files that the user has accessed and all Team Drives in which they are a member.
domain: Lists files that are shared to the domain, including both Team Drive and non-Team Drive files.
user: Lists files that the user has accessed, including both Team Drive and non-Team Drive files.

    gam <UserTypeEntity> print|show filelist [todrive [<ToDriveAttributes>]] [corpora <CorporaAttribute>] [anyowner|(showownedby any|me|others)]
        [query <QueryDriveFile>] [fullquery <QueryDriveFile>]
        [select <DriveFileEntity>|orphans] [depth <Number>] (orderby <DriveOrderByFieldName> [ascending|descending])*
        [filepath] [allfields|<DriveFieldName>*|(fields <DriveFiledNameList>)] [delimiter <String>]

To delete empty folders on a Team Drive, the delete emptydrivefolders command has been extended.
    gam <UserTypeEntity> delete emptydrivefolders [<TeamDriveEntity>]

To empty the trash on a Team Drive, the empty drivetrash command has been extended.
    gam <UserTypeEntity> empty drivetrash [<TeamDriveEntity>]

The following commands are not applicable to Team Drives.
    gam <UserTypeEntity> transfer drive <UserItem> [keepuser]
    gam <UserTypeEntity> transfer ownership <DriveFileEntity> <UserItem> [includetrashed] (orderby <DriveOrderByFieldName> [ascending|descending])* [preview] [filepath] [todrive [<ToDriveAttributes>]]
    gam <UserTypeEntity> claim ownership <DriveFileEntity> [skipids <DriveFileEntity>] [skipusers <UserTypeEntity>] [subdomains <DomainNameEntity>] [includetrashed] [restricted [<Boolean>]] [writerscantshare [<Boolean>]] [preview] [filepath] [todrive [<ToDriveAttributes>]]
    gam <UserTypeEntity> collect orphans (orderby <DriveOrderByFieldName> [ascending|descending])*
        [targetuserfoldername <DriveFileName>] [preview] [todrive [<ToDriveAttributes>]]

4.44.53

Modified progress messages in gam claim ownership to match those in gam transfer ownership.
        
4.44.52

When all users is specified with gam info users, suspended users are now included.

4.44.51

Courtesy of Jay, show detailed license counts for gam info customer/domain/instance.

4.44.50

Fix bug affecting internationalized headers in gam print/show messages.

4.44.49

Handle incorrectly encoded internationalized headers in gam print/show messages.

4.44.48

Updated gam create group to avoid Google API issue that generated an error when the group description contains a newline.

4.44.47

Updated gam create/update group to use update semantics for group settings to avoid unexpected results due to Google issue #32460496.

4.44.46

Placed name at top of permissions section for gam show fileinfo.

4.44.45

Handle internationalized headers in gam print/show messages.

4.44.44

Process text/rfc822-headers in print/show messages when showbody is specified.

4.44.43

When collecting orphaned files into a target folder, only orphaned files owned by the user are collected.

4.44.42

Fix bug in add/update drivefileacl where role commenter was not properly handled.

4.44.41

Update gam print drivesettings to handle teamDriveThemes columns.

4.44.40

Added arguments to show messages/threads to display plain text attachments. Selected attachments can be shown by specifying an attachmentnamepattern.
    gam <UserTypeEntity> show messages|threads (((query <QueryGmail>) (matchlabel <LabelName>) [or|and])* [quick|notquick] [max_to_show|max_to_process <Number>] [includespamtrash])|(ids <MessageIDEntity>)
        [headers <String>] [showlabels] [showbody] [showsize] [showsnippet] [showattachments [attachmentnamepattern <RegularExpression>]]

Show all attachments:
    gam user testuser@domain.com show messages showattachments
Show attachments named sample.txt:
    gam user testuser@domain.com show messages showattachments attachmentnamepattern "sample.txt"
Show attachments with 2017 in their name:
    gam user testuser@domain.com show messages showattachments attachmentnamepattern ".*2017.*"

4.44.39

When collecting orphaned files into a target folder, the folder is not created unless orphaned files are located.

4.44.38

Fix bug with print/show messages when showbody is specified.

Added command to collect a users orphaned Drive files/folders into a single folder.
Only orphaned files not in the trash are processed.

    gam <UserTypeEntity> collect orphans (orderby <DriveOrderByFieldName> [ascending|descending])*
        [targetuserfoldername <DriveFileName>] [preview] [todrive [<ToDriveAttributes>]]

(orderby <DriveOrderByFieldName> [ascending|descending])* - Specify the order in which files are processed.

[targetuserfoldername <DriveFileName>] - This is the parent folder name for the orphaned files; the default is "#user# orphaned files".
In this string, #user# and #email# will be replaced by the source user email address, #username# will be replaced by the source user mail address without the domain.

[preview] - If preview is specified, no files are collected; a CSV file listing the files to be collected is output.
[todrive [<ToDriveAttributes>]] - Specifies that the CSV file be written to Google Drive.

Example:
Collect a users orphaned files into the folder "Orphans - testuser@domain.com" on their Drive.
    gam user testuser@domain.com collect orphans targetuserfoldername "Orphans - #user#"

4.44.37

Following Jay's suggestion, gam delete token now reports an error if you attempt to delete a non-existent token.

gam print/show messages now prints the original message when you get a non-delivery message from Google.

4.44.36

Fix bug with print/show messages when showbody is specified.

4.44.35

Handle ERROR: 403: domainPolicy - The domain policy has disabled third-party Drive apps

4.44.34

Added charset option to file option of note option of contact attributes.
Added charset option to file option of note option of user attributes.
    <ContactAttributes> ::=
        ...
        (note <String>|(file <FileName> [charset <Charset>]))|
        ...
    <UserAttributes> ::=
        ...
        (note|notes clear|([text_plain|text_html] <String>|(file <FileName> [charset <Charset>])))|
        ...
    gam update contact 1234 note file contact1234notes.txt charset UTF-8
    gam update user testuser@domain.com note file testusernotes.txt charset UTF-8

4.44.33

Added never_time to gam.cfg to specify the value to be substituted whenever a Google datetime variable
has the value "1970-01-01T00:00:00.000Z"; the default value is 'Never'. 
To keep the Google value: never_time = 1970-01-01T00:00:00.000Z
To use some other date/time value: never_time = 1999-12-31T23:59:59.999Z
To use some distinguished value: never_time = 0
To continue using Never: never_time = Never

Improved Unicode character handling for gam csv and Windows.

4.44.32

Update gam create project with Jay's latest changes: client_secrets.json and oauth2service.json must not exist;
Client ID and Client Secret are validated.

Fix gam show labels display basename to properly handle labels with embedded slashes.

4.44.31

Handle additional OAuth error.

4.44.30

Added display argument to gam show labels to allow choice of data to display.
    gam <UserTypeEntity> show labels|label [onlyuser [<Boolean>]] [showcounts [<Boolean>]] [nested [<Boolean>]] [display allfields|basename|fullname]
If display is not specified or display allfields is specified, the full name of the label and the fields (type, id, labelListVisibility, messageListVisibility) are displayed.
If showCounts is specified, the fields (messagesTotal, messagesUnread, threadsTotal, threadsUnread) are also displayed.
If display fullname is specified, the full name of the label, and no other fields, is displayed.
If display basename is specified, the base name (rightmost component) of the label, and no other fields, is displayed.
The display fullname/basename options are most useful in conjunction with nested.

4.44.29

gam show labels now prints labels sorted by type (system, user) and name making it much easier to read.
Added nested argument to gam show labels; this causes nested labels to be indented under their parent label
to allow the hierarchy to be more clearly visible.
    gam <UserTypeEntity> show labels|label [onlyuser [<Boolean>]] [showcounts [<Boolean>]] [nested [<Boolean>]]
For the onlyuser, showcounts and nested arguments, if <Boolean> is omitted, True is assumed.

Added buildpath argument to gam add label; this causes Gam to build all components of a multi-level label.
If buildpath is omitted or set to False, all parent labels in a multi-level label must be present for the add to succeed.
If buildpath is present and <Boolean> is omitted or set to True, all parent labels in a multi-level label are created
as necessary for the add to succeed.
    gam <UserTypeEntity> [add] label|labels <String> [messagelistvisibility hide|show] [labellistvisibility hide|show|showifunread] [buildpath [<Boolean>]]
Example: gam user user@domain.com add label "Top/Middle/Bottom" buildpath

4.44.28

Fix bug when deleting/updating label containing accented characters.

4.44.27

Optimized gam print printjobs and gam printjob fetch when olderthan/newerthan <PrintJobAge> is specified so that
additional printjobs are not downloaded from Google once a printjob out of range is encountered. For newerthan, this works
because the printjobs are downloaded in reverse chronological order; once a printjob is found to be older
than the newerthan <PrintJobAge>, all remaining printjobs can be ignored. To get this optimization for olderthan,
the download order must be reversed so that the printjobs are downloaded in ascending order. The following three cases are optimized:
    gam print printjobs newerthan <PrintJobAge>
    gam print printjobs newerthan <PrintJobAge> orderby createtime descending
    gam print printjobs olderthan <PrintJobAge> orderby createtime ascending

4.44.26

Added countsonly argument to gam print courses; in conjunction with show all|students|teachers, it eliminates
the student/teacher profile columns and outputs only the columns with student/teacher counts.
    gam print courses [todrive [<ToDriveAttributes>]] [teacher <UserItem>] [student <UserItem>]
        [delimiter <String>] [alias|aliases] [show all|students|teachers] [countsonly] [fields <CourseFieldNameList>] [skipfields <CourseFieldNameList>]

4.44.25

At Jay's suggestion, added activeTimeRanges.minutes column to gam print cros/crosactivity.
activeTimeRanges.activeTime: milliseconds
activeTimeRanges.duration: hh:mm:ss
activeTimeRanges.minutes: minutes

The column headers for the following print commands have been adjusted to make the most common headers appear at the left
and the remaining headers be sorted: courses, course-participants, domainaliases, mobile, printers, printjobs.

4.44.24

Added start <Date> and end <Date> arguments to gam info cros and gam print cros to allow filtering of activeTimeRanges.
These arguments have no effect unless the activetimeranges|timeranges field name is specified.
If start <Date> is not specified, then there is no filtering for starting date.
If end <Date> is not specified, then there is no filtering for ending date.
    gam info cros <CrosEntity> [nolists] [listlimit <Number>] [start <Date>] [end <Date>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>]
    gam <CrOSTypeEntity> info [nolists] [listlimit <Number>] [start <Date>] [end <Date>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>]
    gam [<CrOSTypeEntity>] print cros [todrive [<ToDriveAttributes>]] [query <QueryCrOS>]|[select <CrOSTypeEntity>]
        [orderby <CrOSOrderByFieldName> [ascending|descending]] [nolists] [listlimit <Number>] [start <Date>] [end <Date>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>]

Based on code by Jay, added a command to get CrOS device activity.
    gam [<CrOSTypeEntity>] print crosactivity [todrive [<ToDriveAttributes>]] [query <QueryCrOS>]|[select <CrOSTypeEntity>]
        [orderby <CrOSOrderByFieldName> [ascending|descending]] [recentusers] [timeranges] [listlimit <Number>] [start <Date>] [end <Date>]
        [delimiter <String>] 

The basic column headers are: deviceId,annotatedAssetId,annotatedLocation,serialNumber,orgUnitPath.
If recentusers is specified, all of the recent users email addresses, separated by the delimiter <String>,
are put on a separate row, with header recentUsers.email, in addition to the basic headers.
If timeranges is specified, each pair of time range values, activeTimeRanges.date and activeTimeRanges.duration,
are put on a separate row with the basic headers.
The default is to include both recentusers and timeranges.
The listlimit <Number> argument limits the number of recent users and time ranges to <Number>. If <Number> equals zero, there is no limit.
The start <Date> and end <Date> arguments filter the time ranges.

Example: gam print crosactivity recentusers start 2017-03-01 end 2017-03-31 listlimit 10 delimiter " "
For each CrOS device, thus will yield a space delimited list of the 10 most recent users for the month of March.

4.44.23

When todrive is specified and gam.cfg/no_browser is true, the email regarding the upload will be sent to the
email address specified in gam.cfg/todrive_user or the email address specified with the tduser command line argument.
If neither of these options is specified, the email is sent to the G Suite administrator.
Previously, the email was always sent to the G Suite administrator.

4.44.22

Use service account for uploading todrive reports and sending email messages when no_browser is true.

4.44.21

Corrected my error in add smime. S/MIME .p12 files are binary, there is no need for a charset option; in fact, even if you didn't specify a charset,
the code didn't operate correctly.
    gam <UserTypeEntity> add smime file <FileName> [password <Password>] [sendas|sendasemail <EmailAddress>] [default]

4.44.20

Fix gam <UserTypeEntity> add smime, original code from Jay was not correct.

4.44.19

Courtesy of Jay, handle additional values in gam report customer.
Handle Google changes that broke gam create project.

4.44.18

Courtesy of Jay, show customer license info in gam info customer/instance.
Handle bad data from Google in gam report customer.

4.44.17

gam print contacts/contactgroups now output user placeholder rows as necessary when csv_output_users_audit is true.

4.44.16

Handle Google change that dropped domain and admin email address from credentials.

4.44.15

Improved error messages for gam add/delete delegates, they should be easier to understand.

4.44.14

Email addresses in the gmail.com domain can have arbitrary dots in the name. When adding such an address to a group,
Google maps the name to have the dots specified when the account was set up regardless of the dots specified in the address to be added.
Email addresses in the gmail.com domain have an equivalent email address in the googlemail.com domain. When adding such an address to a group,
Google maps the domain name to the domain name specified when the account was set up regardless of the domain name specified in the address to be added.
These mappings cause erroneous deletes and duplicate adds when syncing group membership as the email address in the group may not match
the email address in the list of email addresses to sync even though they are equivalent.
Gam now maps all email addresses in the gmail.com and googlemail.com domains to a canonical form before comparing the current group email addresses
with the email addresses on the command line. If an email address is to be added, it is added with the email address specified on the command line.
If an email address is to be deleted, it is deleted using the email address from the group.

4.44.13

Added csv_output_users_audit to gam.cfg, its default value is False.
Gam print commands that print objects belonging to users don't print rows for users that don't have
any of the following objects: calendars, calendar ACLs, calendar events, delegates, filters,
forwarding addresses, sendas addresses, S/MIME certificates and tokens. When csv_output_users_audit is true,
a placeholder row will be output with the user's email address; these rows will useful for auditing purposes only,
they can not be successfuly used in a gam csv command.
Example:, produce an audit CSV file showing the delegates for the Sales group.
     gam config auto_batch_min 1 csv_output_users_audit true redirect csv SalesDelegatesAudit.csv multiprocess group Sales print delegates

4.44.12

Fixed bug where extra \r was output on each line when writing CSV files on Windows.

4.44.11

Previously, specifying todrive with a print command caused the CSV file to be uploaded to Google Drive,
it could not be saved locally at the same time. Now, you can have the CSV file saved locally and uploaded to Google Drive
in the same command. The tdlocalcopy subargument to todrive causes the CSV file to be saved and uploaded.
Added todrive_localcopy to gam.cfg with a default value of false; this value is the default for tdlocalcopy.
You can specify tdlocalcopy false/true on the command line to override the default value from gam.cfg.
    <ToDriveAttributes> ::=
        (tdtitle <String>)|
        (tduser <EmailAddress>)|
        (tdparent id:<DriveFolderID>|<DriveFolderName>)|
        (tdtimestamp [<Boolean>] [tddaysoffset <Number>] [tdhoursoffset <Number])|
        (tdlocalcopy [<Boolean>])
Current options:
  Output to stdout:
    gam print users
    gam redirect csv - print users
  Save file locally:
    gam print users > ./Users.csv
    gam redirect csv - print users > ./Users.csv
    gam redirect csv ./Users.csv print users
  Upload file to Google Drive:
    gam print users todrive
    gam redirect csv - print users todrive
Current options that don't perform as expected, data is not saved locally:
  Save file locally and upload to Google Drive:
    gam print users todrive > ./Users.csv
    gam redirect csv - print users todrive > ./Users.csv
    gam redirect csv ./Users.csv print users todrive
New options:
  Output to stdout and upload to Google Drive:
    gam print users todrive tdlocalcopy true
    gam redirect csv - print users todrive tdlocalcopy true
  Save file locally and upload to Google Drive:
    gam print users todrive tdlocalcopy true > ./Users.csv
    gam redirect csv - print users todrive tdlocalcopy true > ./Users.csv
    gam redirect csv ./Users.csv print users todrive tdlocalcopy true

4.44.10

Handle corrupt files in gamcache by turning caching off for the current command.

4.44.09

Reduce default value for num_threads in gam.cfg from 25 to 5; 25 is too high for some APIs, e.g., Google+.
Handle additional errors from oauthclient/client.py.
Improve error handling for mobile device operations.

4.44.08

Allow empty values for customer_id and domain in gam.cfg.

4.44.07

Clean up exception handling.

4.44.06

Changed headings of gam print vacation CSV file to match command line arguments.
    User,enabled,contactsonly,domainonly,startdate,enddate,subject,html,message

4.44.05

Added print vacation command.
    gam <UserTypeEntity> print vacation [todrive [<ToDriveAttributes>]]        

Handle 1801 - Invalid value error in gam audit export.

Handle 111 - Connection refused error in gam print gplusprofile.

4.44.04

Handle Unknown Error when getting G+ profile.

4.44.03

Handle "Domain cannot use apis." error.

4.44.02

Added nocache argument to gam get drivefile to prevent the Google API from caching a file download. Due to a flaw in a Python library,
caching the download of certain files throws an exception preventing the file from being downloaded.
    gam <UserTypeEntity> get drivefile <DriveFileEntity> [format <FileFormatList>] [targetfolder <FilePath>] [revision <Number>] [nocache]

4.44.01

Clean up error messages when Google API requires that Gam wait before retrying.

4.44.00

Added Reseller API support, derived from Jay's initial code.
    <ResoldCustomerAttributes> ::=
        (email|alternateemail <EmailAddress>)|
        (contact|contactname <String>)|
        (phone|phonenumber <String>)|
        (name|organizationname <String>)|
        (address|address1|addressline1 <String>)|
        (address2|addressline2 <String>)|
        (address3|addressline3 <String>)|
        (city|locality <String>)|
        (state|region <String>)|
        (zipcode|postal|postalcode <String>)|
        (country|countrycode <String>)

    gam create resoldcustomer <CustomerDomain> (customer_auth_token <String>) <ResoldCustomerAttributes>+
    gam update resoldcustomer <CustomerID> [customer_auth_token <String>] <ResoldCustomerAttribues>+
    gam info resoldcustomer <CustomerID>

    gam create resoldsubscription <CustomerID> (sku <SKUID>)
         (plan annual_monthly_pay|annual_yearly_pay|flexible|trial) (seats <NumberOfSeats> <MaximumNumberOfSeats>)
         [customer_auth_token <String>] [deal <String>] [purchaseorderid <String>]
    gam update resoldsubscription <CustomerID> <SKUID>
        activate|suspend|startpaidservice|
        (renewal auto_renew_monthly_pay|auto_renew_yearly_pay|cancel|renew_current_users_monthly_pay|renew_current_users_yearly_pay|switch_to_pay_as_you_go)|
        (seats <NumberOfSeats> [<MaximumNumberOfSeats>])|
        (plan annual_monthly_pay|annual_yearly_pay|flexible|trial [deal <String>] [purchaseorderid <String>] [seats <NumberOfSeats> [<MaximumNumberOfSeats>]])
    gam delete resoldsubscription <CustomerID> <SKUID> cancel|downgrade|transfer_to_direct
    gam info resoldsubscription <CustomerID>  <SKUID>
    gam show resoldsubscriptions [customerid <CustomerID>] [customer_auth_token <String>] [customer_prefix <String>]
    gam print resoldsubscriptions [todrive [<ToDriveAttributes>]] [customerid <CustomerID>] [customer_auth_token <String>] [customer_prefix <String>]

Added createifnotfound to update users. If, when attempting to update a single user, the user is not found, this argument causes Gam to create the user.
This is a special purpose feature, it will typically be used when an information system outputs a CSV file of user data but does not indicate which
users are new.
    gam update user <UserItem> <UserAttributes>* [clearschema <SchemaName>] [clearschema <SchemaName>.<FieldName>] [createifnotfound]
    gam update users <UserTypeEntity> <UserAttributes>* [clearschema <SchemaName>] [clearschema <SchemaName>.<FieldName>] [createifnotfound]
    gam <UserTypeEntity> update users <UserAttrubutes>* [clearschema <SchemaName>] [clearschema <SchemaName>.<FieldName>] [createifnotfound]
Example:
    gam  redirect stdout Update.log multiprocess redirect stderr stdout csv Users.csv gam update user "~Email" firstname "~Firstname" lastname "~Lastname" password "~Password" org "~Org" createifnotfound

4.43.04

Make no_cache = False and cache_discovery_only = True be the default.
Change the signal file for cache_discovery_only to allcache.txt
When gam.cfg is being initialized, cache_discovery_only will be set to false if the file is present, otherwise true.

4.43.03

Improve error messages for invalid queries and custom schemas in info/print users.

4.43.02

Fix bug in gam add drivefileacl where incorrect parameter was passed to API.

4.43.01

When todrive tdparent id:<DriveFolderID>|<DriveFolderName> is specified, in addition to checking that the parent is an existing folder, the folder is verified as being writable.

4.43.00

Continued code refactoring.

The elements of a <ProductIDList> or <SKUIDList> must be separated by commas not spaces; this applies to gam print licenses, gam info users, gam print users
and gam licenses <SKUIDLIst> <Command> ...

Added LicensesDisplay column to CSV file for gam print users licenses to show descriptive name of license SKU.
The Licenses column still displays the actual SKU.

Added tduser <EmailAddress> to <ToDriveAttributes>.
Added todrive_user to gam.cfg
Anywhere you can specify todrive, there are additional subarguments following the todrive argument that let you title the file,
direct the uploaded file to a particular user and location and add a timestamp to the file title.
    <ToDriveAttributes> ::=
        (tdtitle <String>)|(tduser <EmailAddress>)|(tdparent id:<DriveFolderID>|<DriveFolderName>)|(tdtimestamp <Boolean> [tddaysoffset <Number>] [tdhoursoffset <Number])
The tdtitle argument specifies the title for the uploaded file, if not specified, the Gam default title is used.
The tduser argument specifies the user to receive the uploaded file; if not specified, the todrive_user value from gam.cfg is used;
that value defaults to the user named in oauth2.txt.
The tdparent argument specifies an existing/writable parent folder for the uploaded file; if not specified, the todrive_parent value from gam.cfg is used;
that value defaults to the root folder.
The tdtimestamp argument specifies whether a timestamp (of the time the file is uploaded to Google) will be added to the title of the uploaded file;
if not specified, the todrive_timestamp value from gam.cfg is used, that value defaults to False.
The tddaysoffset and tdhoursoffset arguments let you specify values that subtract time from the timestamp, they default to 0.
A possible use for these values is as documentation to reflect the end of the time period that the uploaded report covers.
Example: generate a list of user IDs and names, title the file "User IDs and Names", upload it to the "GAM Reports" folder of usermgr@domain.com, add a timestamp to the title.
    gam print users todrive tdtitle "User IDs and Names" tduser usermgr@domain.com tdparent "GAM Reports" tdtimestamp true id name

4.42.10

Define NullHandler for logging to accommodate Python 2.6.

4.42.09

Handle unbalanced quotes errors in gam batch.
If errors are encountered a batch file, none of the commands will be executed.

4.42.08

Fixed bug where the file description was not set on a redirected multiprocess CSV file when todrive was specified.

4.42.07

For print courses, sort column headings in a more meaningful order, put courseMaterialSets in rightmost columns.

4.42.06

In gam print courses, length columns are not included for the materials field in courseMaterialSets as this makes for too many columns.

4.42.05

Added restricted argument to gam claim ownership to restrict viewers and commenters from copying, downloading and printing the claimed files.
    gam <UserTypeEntity> claim ownership <DriveFileEntity> [skipids <DriveFileEntity>] [skipusers <UserTypeEntity>] [subdomains <DomainNameEntity>] [includetrashed]
        [restricted [<Boolean>]] [writerscantshare [<Boolean>]] [preview] [filepath] [todrive [<ToDriveAttributes>]]

4.42.04

When debug_level is > 0 and stdout is redirected, the http debug output is now properly redirected as well.

4.42.03

Handle error where the batch.bat file in gam batch batch.bat contains a gam batch/csv command or a command that invokes an auto batch.
Fix control-C handling.

4.42.02

Handle httplib.ResponseNotReady error.

4.42.01

Changed gam info user formatjson to show licenses in SKU ID (SKU Display Name) format.

4.42.00

Fixed problem where control-C was not recognized when multiple processes were running via gam batch/csv.
Gam terminates cleanly on Linux/MacOS when you hit control-C in this situation; on Windows exceptions are
thrown but Gam does terminate.

4.41.08

Eliminate unnecessary/possibly invalid use of fields=u'' in various API calls.

4.41.07

Added labelidsonly argument to gam print/show filters to improve performance in special cases.
When you get a filter from Google, all labels mentioned in the filter are specified with their internal Id, not the label name the user sees.
Gam has to make an extra API call to get the labels so it can map from id to name so the output reflects the label names that are familiar to the user.
If you don't need to see the label names, you can eliminate the extra API call by specifying labelidsonly.
    gam <UserTypeEntity> show filters [labelidsonly]
    gam <UserTypeEntity> print filters [labelidsonly] [todrive [<ToDriveAttributes>]]

4.41.06

More fixes to gam user deprovision.

4.41.05

Fix coding error in gam user deprovision that prevented tokens from being deleted if there were no ASPs.

4.41.04

Additional license SKU cleanup.
Speed up gam print users licenses.

4.41.03

Additional license SKU cleanup.

4.41.02

Added skuDisplay column to CSV file for gam print licenses to show descriptive name of license SKU.
The skuId column still displays the actual SKU.

4.41.01

Add product <ProductID> argument to license commands to allow for future changes by Google.
Improve license handling courtesy of Jay.
    gam <UserTypeEntity> add license <SKUID> [product|productid <ProductID>]
    gam <UserTypeEntity> update license <SKUID> [product|productid <ProductID>] [from] <SKUID>
    gam <UserTypeEntity> delete license <SKUID> [product|productid <ProductID>]

4.41.00

Thanks to Kim Nilsson for inspiring the following change.
Many Gam commands have this form:
    gam <UserTypeEntity> command arguments
    gam <CrOSTypeEntity> command arguments
<UserTypeEntity> and <CrOSTypeEntity> get data either from Google via API calls or from local files.
Previously, Gam would get the data and then parse the command and arguments; any syntax error terminated processing.
If the data was coming from Google via API calls, all of the time/bandwidth spent getting the data was wasted.
Now, if the data is coming from Google via API calls, it is not retrieved unless command/argument processing is successfully completed.
If auto_batch_min from gam.cfg is greater than zero, the data is retrieved immediately as the data must be passed to the Gam subprocesses.

4.40.12

Fix redirect csv/stdout/stderr file error handling.

4.40.11

G Suite Enterprise SKU changed from Google-Apps-Enterprise to 1010020020.
Improve redirect csv/stdout/stderr.

4.40.10

Code clean up.

4.40.09

Improve redirect stdout multiprocess with auto_batch.

4.40.08

Handle SSLHandshakeError as a retryable error.

4.40.07

Previously, auto_batch processing was disabled for info, show and print because the output from the
multiple processes was mixed together. With the introduction of redirect csv/stdout multiprocess in 4.40.00,
this restriction has been eliminated. The following template illustrates the proper form of the command.
    gam config num_threads 10 auto_batch_min 1 redirect csv ./output.csv multiprocess all users print ...
    gam config num_threads 10 auto_batch_min 1 redirect stdout ./output.txt multiprocess all users show ...

4.40.06

Added support for reporting user's two step verification status.
Additional work on calendars.
Additional code cleanup.

Added S/MIME support thanks to Jay. You must be a G Suite Enterprise customer to use these commands.
    gam <UserTypeEntity> add smime file <FileName> [password <Password>] [sendas|sendasemail <EmailAddress>] [default]
    gam <UserTypeEntity> update smime [id <SmimeID>] [sendas|sendasemail <EmailAddress>] [default]
    gam <UserTypeEntity> delete smime [id <SmimeID>] [sendas|sendasemail <EmailAddress>]
    gam <UserTypeEntity> show smimes [primaryonly]
    gam <UserTypeEntity> print smimes [todrive [<ToDriveAttributes>]] [primaryonly]

4.40.05

Fixed todrive. 

Restore gam calendar/calendars commands.
The column labeled id in gam print calendars has been changed to calendarId.

Code clean up.
Documentation updates.

4.40.04

More cleanup of redirect stdout/stderr multiprocess.
Add return code to stdout/stderr Start lines when show_multiprocess_info is true.

4.40.03

Fix error with redirect stdout multiprocess.
Add return code to stdout/stderr End lines when show_multiprocess_info is true.

4.40.02

Improved performance of gam modify/spam messages by using new batchModify API function.

Added message_batch_size to gam.cfg
    message_batch_size
        When deleting or modifying Gmail messages, how many should be processed in each batch
        Default: 1000

Added message_max_results to gam.cfg
    message_max_results
        When retrieving lists of Gmail messages from API, how many should be retrieved in each chunk
        Default: 1000

4.40.01

Housecleaning.
Improve handling member of type CUSTOMER in groups.
Handle errors when updating a users photo.

4.40.00

Added classroom_max_results to gam.cfg
    classroom_max_results
        When retrieving lists of Google Classroom items from API, how many should be retrieved in each chunk
        Default: 0 (Google defined limit)

Added convertcrnl argument to gam print orgs, it causes \n to be converted to \\n in description, otherwise \n is not changed in that field.
gam print orgs|ous [todrive [<ToDriveAttributes>]] [toplevelonly] [from_parent <OrgUnitItem>] [allfields|<OrgUnitFieldName>*|(fields <OrgUnitFieldNameList>)] [convertcrnl]

SKU Google-Apps-Unlimited renamed to Google-Apps-Enterprise.

Added multiprocess subargument to redirect csv/stdout/stderr arguments to allow the multiple processes started by gam csv to write intelligently to a redirected CSV/stdout/stderr file.
You can redirect stdout and stderr to null and stderr can be redirected to stdout.
<Redirect> ::=
        redirect csv <FileName> [multiprocess] [append] [noheader] [charset <Charset>] [columndelimiter <Character>] |
        redirect stdout <FileName> [multiprocess] [append] |
        redirect stdout null |
        redirect stderr <FileName> [multiprocess] [append] |
        redirect stderr stdout |
        redirect stderr null
Examples:
    gam redirect stdout Users.txt multiprocess csv Users.csv gam info user ~primartEmail
The output from each of the gam info user ~User commands will be combined into the single file UserInfo.txt
    gam redirect csv UserDelegates.csv multiprocess csv Users.csv gam user ~User print delegates
The output from each of the gam user ~User print delegates commands will be combined into the single file UserDelegates.csv.

Added show_multiprocess_info to gam.cfg.
    show_multiprocess_info
        Enable/disable showing multiprocess info in redirected stdout/stderr
        Default: False
Example:
Example:
$ gam config show_multiprocess_info false redirect stdout ./Users.txt multiprocess csv Users.csv gam info user ~primaryEmail
$ more Users.txt
User: testuser1@domain.com (1/1)
  Settings:
    First Name: Test
    Last Name: User1
    Full Name: Test User1
...
User: testuser2@domain.com@ (1/1)
  Settings:
    First Name: Test
    Last Name: User2
    Full Name: Test User2
...

$ gam config show_multiprocess_info true redirect stdout ./Users.txt multiprocess csv Users.csv gam info user ~primaryEmail
$ more Users.txt
stdout:      0, Start: 2017-01-26T11:35:00.897773-08:00, Cmd: /Users/admin/gam config show_multiprocess_info true redirect stdout ./Users.txt multiprocess csv Users.csv gam info user ~primaryEmail
stdout:      1, Start: 2017-01-26T11:35:00.902709-08:00, Cmd: gam info user testuser1
User: testuser1@domain.com (1/1)
  Settings:
    First Name: Test
    Last Name: User1
    Full Name: Test User1
...
stdout:      1,   End: 2017-01-26T11:35:02.656837-08:00
stdout:      2, Start: 2017-01-26T11:35:00.910729-08:00, Cmd: gam info user testuser2
User: testuser2@domain.com@ (1/1)
  Settings:
    First Name: Test
    Last Name: User2
    Full Name: Test User2
...
stdout:      2,   End: 2017-01-26T11:35:02.849646-08:00
stdout:      0,   End: 2017-01-26T11:35:02.907141-08:00

The gam printer and gam printers commands have been combined; both forms can handle multiple printerIDs.
    gam print|printers <PrinterIDEntity> add user|manager|owner <UserTypeEntity>|domain:<DomainName>|public
    gam print|printers <PrinterIDEntity> delete <UserTypeEntity>|domain:<DomainName>|public
    gam print|printers <PrinterIDEntity> sync user|manager|owner <UserTypeEntity>|domain:<DomainName>|public

Added new forms of commands to manage multiple users.
    gam <UserTypeEntity> update users <UserAttrubutes> [clearschema <SchemaName>] [clearschema <SchemaName>.<FieldName>]
    gam <UserTypeEntity> delete users
    gam <UserEntity> undelete users [org|ou <OrgUnitPath>]
    gam <UserTypeEntity> info users [noaliases] [nogroups] [nolicenses|nolicences] [noschemas] [schemas|custom <SchemaNameList>] [userview] <UserFieldName>* [fields <UserFieldNameList>] [(products|product <ProductIDList>)|(skus|sku <SKUIDList>)] [formatjson]
The existing forms are:
    gam update users <UserTypeEntity> <UserAttributes>* [clearschema <SchemaName>] [clearschema <SchemaName>.<FieldName>]
    gam delete users <UserTypeEntity>
    gam undelete users <UserEntity> [org|ou <OrgUnitPath>]
    gam info users <UserTypeEntity> [noaliases] [nogroups] [nolicenses|nolicences] [noschemas] [schemas|custom <SchemaNameList>] [userview] <UserFieldName>* [fields <UserFieldNameList>] [(products|product <ProductIDList>)|(skus|sku <SKUIDList>)] [formatjson]

Gam calendar processing has been rewritten to expand its capabilities.
Previous versions could:
Manage a users list of calendars
Manage access to a users primary calendar
Transfer ownership of all of a users calendars to another user
Add and delete events in a users primary calendar
Provide limited event selection: keyword matching only
Replace attendees in a users primary calendar for all events within a datetime range

This version can:
Manage a users list of calendars
Create, modify and remove calendars for a user
Manage access to any calendar a user owns
Transfer ownership of a selection of a users calendars to another user
Add, update, delete and display events in any calendar for which a user has access
Provide expanded event selection: keyword matching, date selection, field matching, attendee matching
Replace attendees for selected events in any calendar for which a user has access

<CalendarSelectProperties> ::=
        (minaccessrole <CalendarACLRole>)|showdeleted|showhidden

<CalendarAddEntity> ::= <EmailAddressList> | resource <ResourceID> | resources <ResourceIDList> | (calendars <CalendarList> | <FileSelector> | <CSVkmdSelector> | <CSVDataSelector>)
<CalendarEntity> ::= allcalendars | primary | EmailAddressList> | resource <ResourceID> | resources <ResourceIDList> | (calendars <CalendarList> | <FileSelector> | <CSVkmdSelector> | <CSVDataSelector>) | <CalendarSelectProperties>+
<CalendarPrintShowEntity> ::= allcalendars | primary | <CalendarSelectProperties>+

<CalendarAttributes> ::=
        (backgroundcolor <ColorHex>)|
        (colorindex|colorid <CalendarColorIndex>)|
        (foregroundcolor <ColorHex>)|
        (hidden <Boolean>)|
        (notification clear|(email|sms eventcreation|eventchange|eventcancellation|eventresponse|agenda))|
        (reminder clear|(email|sms|pop <Number>)|(<Number> email|sms|pop))|
        (selected <Boolean>)|
        (summary <String>)

Manage a users list of calendars

gam <UserTypeEntity> add calendars <CalendarAddEntity> <CalendarAttributes>*
gam <UserTypeEntity> update calendars <CalendarEntity> <CalendarAttributes>+
gam <UserTypeEntity> delete calendars <CalendarEntity>

gam <UserTypeEntity> info calendars <CalendarEntity>
gam <UserTypeEntity> show calendars <CalendarPrintShowEntity> [permissions]
gam <UserTypeEntity> print calendars <CalendarPrintShowEntity> [todrive [<ToDriveAttributes>]] [permissions]

gam <UserTypeEntity> show calsettings

<CalendarSettings> ::==
        (summary <String>)|(description <String>)|(location <String>)|(timezone <String>)

Create, modify and remove calendars for a user

gam <UserTypeEntity> create calendar <CalendarSettings>
gam <UserTypeEntity> modify calendars <CalendarEntity> <CalendarSettings>
gam <UserTypeEntity> remove calendars <CalendarEntity>

<CalendarACLRole> ::=
        editor|freebusy|freebusyreader|owner|reader|writer

<CalendarACLScope> ::= [user:]<EmailAddress>|group:<EmailAddress>|domain[:<DomainName>]|default
<CalendarACLScopeList> ::== '<CalendarACLScope>(,<CalendarACLScope>)*'
<CalendarACLScopeEntity>::= <ACLScopeList> | <FileSelector> | <CSVkmdSelector> | <CSVDataSelector>

Manage access to any calendar a user owns

gam <UserTypeEntity> add calendaracls <CalendarEntity> <CalendarACLRole> <CalendarACLScopeEntity>
gam <UserTypeEntity> update calendaracls <CalendarEntity> <CalendarACLRole> <CalendarACLScopeEntity>
gam <UserTypeEntity> delete calendaracls <CalendarEntity> <CalendarACLRole>] <CalendarACLScopeEntity>

gam <UserTypeEntity> info calendaracls <CalendarEntity> <CalendarACLScopeEntity>
gam <UserTypeEntity> show calendaracls <CalendarEntity>
gam <UserTypeEntity> print calendaracls <CalendarEntity> [todrive [<ToDriveAttributes>]]

Transfer ownership of a selection of a users calendars to another user

gam <UserTypeEntity> transfer calendars <UserItem> <CalendarEntity> [keepuser] [retainrole <CalendarACLRole>]

<EventSelectProperties:> ::=
        (endtime|timemax <Time>)|
        (query <QueryCalendar>)|
        (privateextendedproperty <String>)|
        (sharedextendedproperty <Syting>)|
        showdeletedevents|
        showhiddeninvitations|
        singleevents|
        (starttime|timemin <Time>)|
        (updatedmin <Time>)

<EventMatchProperties:> ::=
        (matchfield attendees <EmailAddressList>)|
        (matchfield creatoremail <RegularExpression>)|
        (matchfield creatorname <RegularExpression>)|
        (matchfield description <RegularExpression>)|
        (matchfield location <RegularExpression>)|
        (matchfield organizeremail <RegularExpression>)|
        (matchfield organizername <RegularExpression>)|
        (matchfield summary <RegularExpression>)

<EventEntity> ::=
        (events <EventIdList> | <FileSelector> | <CSVkmdSelector> | <CSVSubkeySelector> | <CSVDataSelector>)|
        (<EventSelectProperties>+ <EventMatchProperties>*)

<EventAddAttributes> ::=
        (anyonecanaddself <Boolean>)|
        (attendee <EmailAddress>)|
        available|
        (colorindex|colorid <EventColorIndex>))|
        (description <String>)|
        (end (allday <Date>)|<Time>)|
        (guestscaninviteothers <Boolean>)|
        guestscantinviteothers|
        (guestscanseeotherguests <Boolean>)|
        guestscantseeothers|
        (location <String>)|
        (noreminders|(reminder email|popup|sms <Number>))|
        notifyattendees|
        (optionalattendee <EmailAddress>)|
        (privateproperty <PropertyKey> <PropertyValue>)|
        (recurrence <RRULE, EXRULE, RDATE and EXDATE line>)|
        (reminder <Number> email|popup|sms))|
        (sendnotifications <Boolean>)|
        (sharedproperty <PropertyKey> <PropertyValue>)|
        (source <String> <URL>)|
        (start (allday <Date>)|<Time>)|
        (status confirmed|tentative|cancelled)|
        (summary <String>)|
        tentative
        (timezone <Timezone>)|
        (transparency opaque|transparent)|
        (visibility default|public|prvate)

Note!!!
The following attributes are equivalent:
        available = transparency transparent
        guestscantinviteothers = guestscaninviteothers False
        guestscantseeothers = guestscanseeotherguests False
        tentative = status tentative

<EventUpdateAttributes> ::=
        <EventAddAttributes>|
        (clearprivateproperty <PropertyKey>)|
        (clearsharedproperty <PropertyKey>)

Add update and delete events in any calendar for which a user has access

gam <UserTypeEntity> add event <CalendarEntity> [id <String>] <EventAddAttributes>+
gam <UserTypeEntity> update events <CalendarEntity> <EventEntity> <EventUpdateAttributes>+
gam <UserTypeEntity> delete events <CalendarEntity> <EventEntity> [doit] [notifyattendees]
gam <UserTypeEntity> wipe events <CalendarEntity>
gam <UserTypeEntity> move events <CalendarEntity> <EventEntity> to <CalendarItem> [notifyattendees]
gam <UserTypeEntity> update calattendees <CalendarEntity> <EventEntity> [anyorganizer] [csv <FileName>] (replace <EmailAddress> <EmailAddress>)* [doit]

<EventDisplayProperties> ::=
        (alwaysincludeemail)|
        (icaluid <String>)|
        (maxattendees <Integer>)|
        (orderby starttime|updated)|
        (timezone <TimeZone>)

gam <UserTypeEntity> info events <CalendarEntity> <EventEntity>
gam <UserTypeEntity> show events <CalendarPrintShowEntity> ([allevents] <EventSelectProperties>*) <EventDisplayProperties>*
gam <UserTypeEntity> print events <CalendarPrintShowEntity> ([allevents] <EventSelectProperties>*) [todrive [<ToDriveAttributes>]] <EventDisplayProperties>*

gam resource calendar processing has been rewritten.

# Resource Calendars

<ResourceID> ::= <String>
<ResourceIDList> ::= '<ResourceID>(,<ResourceID>)*'
<ResourceEntity> ::= <ResourceIDList> | <FileSelector> | <CSVkmdSelector>

<ResourceFieldName> ::=
        acls|
        description|
        email|
        id|
        name|
        type
<ResourceFieldNameList> ::= '<ResourceFieldName>(,<ResourceFieldName>)*'

gam create resource <ResourceID> <Name> [description <String>] [type <String>]
gam update resource <ResourceID> [name <Name>] [description <String>] [type <String>]
gam delete resource <ResourceID>
gam info resource <ResourceID>

gam update resources <ResourceEntity> [name <Name>] [description <String>] [type <String>]
gam delete resources <ResourceEntity>
gam info resources <ResourceEntity>

gam show resources [allfields|<ResourceFieldName>*|(fields <ResourceFieldNameList>)] [convertcrnl]
gam print resources [todrive [<ToDriveAttributes>]] [allfields|<ResourceFieldName>*|(fields <ResourceFieldNameList>)] [convertcrnl]

gam resource <ResourceID> add calendaracls <CalendarACLRole> <CalendarACLScopeEntity>
gam resource <ResourceID> update calendaracls <CalendarACLRole> <CalendarACLScopeEntity>
gam resource <ResourceID> delete calendaracls <CalendarACLRole>] <CalendarACLScopeEntity>
gam resource <ResourceID> info calendaracls <CalendarACLScopeEntity>

gam resources <ResourceEntity> add calendaracls <CalendarACLRole> <CalendarACLScopeEntity>
gam resources <ResourceEntity> update calendaracls <CalendarACLRole> <CalendarACLScopeEntity>
gam resources <ResourceEntity> delete calendaracls <CalendarACLRole>] <CalendarACLScopeEntity>
gam resources <ResourceEntity> info calendaracls <CalendarACLScopeEntity>

4.39.26

The csv argument has been dropped from gam printer <PrinterIDEntity> showacls. A new command has been added to
output printer ACLs to a CSV file.
    gam printers <PrinterIDEntity> showacls
    gam printers <PrinterIDEntity> printacls [todrive [<ToDriveAttributes>]]

Added fields <ResourceFieldNameList> to gam print resources
    <ResourceFieldName> ::=
        description|
        email|
        id|
        name|
        type
    <ResourceFieldNameList> ::= '<ResourceFieldName>(,<ResourceFieldName>)*'

    gam print resources [todrive [<ToDriveAttributes>]] [allfields|<ResourceFieldName>*|(fields <ResourceFieldNameList>)] [convertcrnl]

Handle bad data from Google in gam report users.

4.39.25

Added buildpath argument to gam create org.
    gam create org|ou <Name> [description <String>] [parent <OrgUnitItem>] [inherit|noinherit|(blockinheritance <Boolean>)] [buildpath]
You can create an org unit in two ways: specify the full path to the org unit or specify the org unit name and parent path.
These are equivalent:
    gam create org /aaa/bbb/ccc/ddd
    gam create ddd parent /aaa/bbb/ccc
The API requires a separate org unit name and parent path, gam makes this separation for you regardless of how you entered the data.
It is an error if the parent path does not exist. In this case, specifying the buildpath argument causes gam to build the parent path.
Suppose /aaa exists and you enter the command: gam create org /aaa/bbb/ccc/ddd buildpath. The initlal API will fail because /aaa/bbb/ccc
does not exist. Gam builds /aaa/bbb, then /aaa/bbb/ccc and finally /aaa/bbb/ccc/ddd.
If a description is specified, it is only applied to the last name in the full path, ddd in this example.

Added fields argument to gam print orgs.
    <OrgUnitFieldName> ::=
        description|
        id|orgunitid|
        inherit|blockinheritance|
        name|
        parentid|parentorgunitid|
        parent|parentorgunitpath|
        path|orgunitpath
    <OrgUnitFieldNameList> ::= '<OrgUnitFieldName>(,<OrgUnitFieldName>)*'

    gam print orgs|ous [todrive [<ToDriveAttributes>]] [toplevelonly] [from_parent <OrgUnitItem>] [allfields|<OrgUnitFieldName>*|(fields <OrgUnitFieldNameList>)]

4.39.24

Added command gam show orgtree to show a tree of organization units. The from_parent argument lets you specify
a particular starting point.
    gam show orgtree [from_parent <OrgUnitItem>]

4.39.23

Update http2lib/cacerts.txt

4.39.22

Apply Jay's fix to correct gam create project problem.

4.39.21

When specifiying multivalued schema field values, empty values can be suppressed by using the multinonempty option.
This is most useful when updating users from a CSV file where users have different numbers of values for a multivalued schema field.
    <SchemaName>.<FieldName> [multivalued|multivalue|value|multinonempty [type work|home|other|(custom <String>)]] <String>)

4.39.20

Handle group member of type customer when processing groups.

4.39.19

Added skipfields <CourseFieldNameList> argument to gam print courses to allow deselection of specific fields to print.
    gam print courses [todrive [<ToDriveAttributes>]] [teacher <UserItem>] [student <UserItem>] [alias|aliases] [delimiter <String>]
        [show all|students|teachers] [fields <CourseFieldNameList>] [skipfields <CourseFieldNameList>]

4.39.18

group <GroupName> should only return users except when updating groups or printer ACLs. Previously, group <GroupName> returned
all members (users and groups) which would cause errors when executing commands like: gam group <GroupName> ...
Previously, this command would print all group members: gam group <GroupName> print
Now, it will only print the users; use this command to get the list of member (user and group) email addresses:  gam print group-members group <GroupName> email

4.39.17

Handle enable API error in gam create project.

4.39.16

Allow newlines in calendar event descriptions.

4.39.15

Start transition of delegate handling from GData to GAPI.
Dropped csv argument from gam show delegates; use gam print delegates to get CSV format.
    gam <UserTypeEntity> show delegates|delegate
    gam <UserTypeEntity> print delegates [todrive [<ToDriveAttributes>]]

4.39.14

Date change in 4.39.13 was off by one day, corrected.

4.39.13

Update gam report admin|calendars|drive|groups|logins|mobile|tokens to print start_time and end_time parameters as dates rather than big integers.

4.39.12

Added fields <CourseFieldNameList> argument to gam print courses to allow selection of specific fields to print.

<CourseFieldName> ::=
        alternatelink|
        coursegroupemail|
        coursematerialsets|
        coursestate|
        creationtime|
        description|
        descriptionheading|
        enrollmentcode|
        guardiansenabled|
        id|
        name|
        ownerid|
        room|
        section|
        teacherfolder|
        teachergroupemail|
        updatetime
<CourseFieldNameList> ::= '<CourseFieldName>(,<CourseFieldName>)*'

    gam print courses [todrive [<ToDriveAttributes>]] [teacher <UserItem>] [student <UserItem>] [alias|aliases] [delimiter <String>] [show all|students|teachers] [fields <CourseFieldNameList>]

4.39.11

Fixed gam create project.

4.39.10

Fixed gam transfer drive to move orphaned files of the source user to the proper folder of the target user.

4.39.09

Added suspended argument to gam update group clear so that only suspended members of a group are removed.
    gam update group <GroupItem> clear [member] [manager] [owner] [suspended]
    gam update groups <GroupEntity> clear [member] [manager] [owner] [suspended]

4.39.08

Added shownoneditable argument to gam print aliases; this will show noneditable aliases in a column labeled NonEditableAlias.

4.39.07

Fixed my coding mistake in gam info user that prevented licences from being printed.

4.39.06

Changed gam print groups output when any of members/memberscount/managers/managerscount/owners/ownerscount are specified.
When members/managers/owners are specified, there will be two columns per role: Members,MembersCount,Managers,ManagersCount,Owners,OwnersCount
When memberscount/managerscount/ownerscount are specified, there will be one column per role: MembersCount,ManagersCount,OwnersCount

Use batch processing to get licenses more quickly in gam info user.

4.39.05

Added directmemberscount to <GroupFieldName>; if this field is specified in gam print groups, it shows the number of entries in a group.

4.39.04

On initial run build drive_dir if it doesn't exist.

Fix error message in gam oauth create regarding no browser to reference no_browser in gam.cfg not nobrowser.txt.

4.39.03

Fix problem where gam update checking was performed on every call.

4.39.02

Handle suspended/no-calendar-access user in calendar commands.

4.39.01

Use patch API rather than update API for gam update customer.

4.39.00

For calendar/calendars add/update/delete acl, the scope can be specified in a new form to make it consistent with other commands.
    <ACLScope> ::= <EmailAddress>|user:<EmailAddress>|group:<EmailAddress>|domain:<DomainName>)|domain|default
    gam calendar <CalendarEntity> add acl <CalendarACLRole> <ACLScope>
    gam calendar <CalendarEntity> update acl <CalendarACLRole> <ACLScope>
    gam calendar <CalendarEntity> del|delete acl [<CalendarACLRole>] <ACLScope>

Updated calendars update/delete/move/info event to allow queries. You specify event queries or event IDs.
    gam calendar <CalendarEntity> update event (q|query|eventquery <QueryCalendar>)+|<EventIDEntity> <EventAttributes>+
    gam calendar <CalendarEntity> delete event (q|query|eventquery <QueryCalendar>)+|<EventIDEntity> [doit] [notifyattendees]
    gam calendar <CalendarEntity> move event (q|query|eventquery <QueryCalendar>)+|<EventIDEntity> to <CalendarItem> [notifyattendees]
    gam calendar <CalendarEntity> info event (q|query|eventquery <QueryCalendar>)+|<EventIDEntity>

Added primary, role <CalendarACLRole>, showdeleted, showhidden and permissions to gam print/show calendars.
    <CalendarACLRole> ::= editor|freebusy|freebusyreader|owner|reader|writer
    gam <UserTypeEntity> show calendars [primary] [role <CalendarACLRole>] [showdeleted] [showhidden] [permissions]
    gam <UserTypeEntity> print calendars [todrive [<ToDriveAttributes>]] [primary] [role <CalendarACLRole>] [showdeleted] [showhidden] [permissions]
By default, information for all visible, non-deleted calendars is shown.
primary limits the selection to the user's primary calendar.
role <CalendarACLRole> limits the selection to those calendars where the user's role is at least <CalendarACLRole>.
showdeleted adds deleted calendars to the selection.
showhidden adds hidden calendars to the selection.
permissions adds permission information for user owned calendars to the output.

Renamed command to batch delete drivefileacls.
    Old: gam <UserTypeEntity> wipe drivefileacls <DriveFileEntity> <PermissionIDEntity>
    New: gam <UserTypeEntity> delete permissions <DriveFileEntity> <PermissionIDEntity>

Eliminated command gam calendar <CalendarEntity> wipe acls

4.38.05

Allow = in gam config. The = is optional but must be surrounded by spaces if included.
    <Config> ::=
        config (<VariableName> [=] <Value)* [save] [verify]

4.38.04

Fixed bug in gam config verify.

4.38.03

Fixed bug in redirect stdout.

4.38.02

Added replace argument to gam update calattendees to allow simple attendee replacements without having to use a CSV file.
    gam <UserTypeEntity> update calattendees [csv <FileName>] (replace <EmailAddress> <EmailAddress>)* [dryrun] [start|starttime|timemin <Time>] [end|endtime|timemax <Time>] [allevents]

4.38.01

Add additional error handling for wipe drivefileacls and add drivefilepermissions.

4.38.00

Added command to batch add drivefileacls.
    <DriveFilePermission> ::= anyone|anyonewithlink|user:<EmailAddress>|group:<EmailAddress>|domain:<DomainName>|domainwithlink:<DomainName>;<DriveFileACLRole>
    <DriveFilePermissionList> ::= '<DriveFilePermission>(,<DriveFilePermission)*'
    <DriveFilePermissionEntity> ::= <DriveFilePermissionList> | <FileSelector> | <CSVkmdSelector> | <CSVDataSelector>
    gam <UserTypeEntity> add drivefilepermissions <DriveFileEntity> <DriveFilePermissionEntity> [expiration <Time>] [sendmail] [emailmessage <String>]
Given a CSV file AddPerms.csv with three columns:
Owner,driveFileId,permissions
foo@domain.com,1-1234,"anyone;reader,user:foo@domain.com;writer,group:foo@domain.com;commenter"
goo@domain.com,1-5678,"domain:domain.com;reader"
hoo@domain.com,2-1234,"domainwithlink:domain.com;writer"
All of the permissions for each driveFileId for each owner can be added with a single command:
    gam csvkmd users AddPerms.csv keyfield Owner subkeyfield driveFileId datafield permissions delimiter "," add permissions csvsubkey driveFileId csvdata permissions

Added countsonly and summary arguments to gam report when activities are selected. When countsonly is specified, the columns will be (emailAddress, event names)
showing counts for each event for each email address. When countsonly and summary are both specified there will be two columns output (event, count) showing event names and counts.
Added yesterday to gam report when activities are selected; this sets start and end to the 24 hour period spanning the previous day.
    gam report admin|calendar|calendars|drive|docs|doc|groups|group|logins|login|mobile|tokens|token [todrive [<ToDriveAttributes>]] [maxresults <Number>]
        [([start <Time>] [end <Time>])|yesterday] [(user all|<UserItem>)|(select <UserTypeEntity>)] [event <String>] [filter|filters <String>] [ip <String>] [countsonly] [summary]

4.37.06

Fixed bug in gam show drivefileacls when role was reader and additionalRoles[0] was commenter.
Always show role as commenter rather than role as reader with additionalRoles commenter.


4.37.05

Improve message/thread error handling when ids argument is used.

4.37.04

Expanded csvkmd to take a subkeyfield, this is used to support wipe drivefileacls.
    <CrOSTypeEntity> ::=
                (csvkmd cros <FileName> [charset <Charset>] [columndelimiter <String>] [fields <FieldNameList>]
                        keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
                        subkeyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
                        (matchfield <FieldName> <RegularExpression>)*
                        [datafield <FieldName>(:<FieldName)* [delimiter <String>]])|
    <UserTypeEntity> ::=
                (csvkmd users|groups|ous|ous_and_children|courseparticipants|students|teachers <FileName> [charset <Charset>] [columndelimiter <String>] [fields <FieldNameList>]
                        keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
                        subkeyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
                        (matchfield <FieldName> <RegularExpression>)*
                        [datafield <FieldName>(:<FieldName)* [delimiter <String>]])|
    <CSVkmdSelector> ::=
                csvkmd <FileName> [charset <Charset>] [columndelimiter <String>] [fields <FieldNameList>]
                       keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
                       subkeyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
                       (matchfield <FieldName> <RegularExpression>)*
                       [datafield <FieldName>(:<FieldName)* [delimiter <String>]]

Added command to batch delete drivefileacls.
    gam <UserTypeEntity> wipe drivefileacls <DriveFileEntity> <PermissionIDEntity>
Given a CSV file DeletePerms.csv with three columns:
Owner,driveFileId,permissionIds
foo@domain.com,1-1234,"anyone,32737237,4343434"
foo@domain.com,1-5678,54758584584754
goo@domain.com,2-1234,7847834783
hoo@domain.com,3-5678,"4837448347834,dhjshdjshdjshj,sjahd8wu8"
All of the permissionIds for each driveFileId for each owner can be deleted with a single command:
    gam csvkmd users DeletePerms.csv keyfield Owner subkeyfield driveFileId datafield permissionIds delimiter "," wipe drivefileacls csvsubkey driveFileId csvdata permissionIds

4.37.03

Handle GAPI Bad Gateway error.

4.37.02

Added show all|students|teachers argument to gam print courses. This allows you to get course and participant information in the same CSV file.
    gam print courses [todrive [<ToDriveAttributes>]] [teacher <UserItem>] [student <UserItem>] [alias|aliases] [delimiter <String>] [show all|students|teachers]

Handle additional Google misreporting invalid group in gam print groups settings.

4.37.01

Correct CSV handling for gam redirect csv foo.csv multiprocess loop loop.csv gam ...

4.37.00

Initialize logging with NullHandler.
Point to new Wiki.
Reorganize GamCommands.txt.

4.36.06

Define logging level as CRITICAL to keep APIs silent.
Define Google Product SKU Google-Apps-For-Government (gafg)

4.36.05

Fixed bug in doCSV.

4.36.04

Fix bug in SetGlobalVariables.

4.36.03

Added addparents and removeparents arguments to gam update drivefile to allow adding/removing parents to/from a file.
    <DriveFileUpdateAttributes> ::=
        (localfile <FileName>)|
        (ocr)|(ocrlanguage <Language>)|(restricted|restrict <Boolean>)|(starred|star <Boolean>)|(trashed|trash <Boolean>)|(viewed|view <Boolean>)|
        (lastviewedbyme <Time>)|(modifieddate <Time>)|(description <String>)|(mimetype gdoc|gdocument|gdrawing|gfolder|gdirectory|gform|gfusion|gpresentation|gscript|gsite|gsheet|gspreadsheet)|
        (parentid <DriveFolderID>)|(parentname <FolderName>)|(addparents <DriveFolderIDList>)|(removeparents <DriveFolderIDList>)|writerscantshare
    gam <UserTypeEntity> update drivefile <DriveFileEntity> [copy] [newfilename <DriveFileName>] <DriveFileUpdateAttributes>*

4.36.02

Allow quotes around section name in gam.cfg to fix an initial setup error.

4.36.01

Fix error when passing delimiter to CSV file routines.

4.36.00

Note!!! Syntax changed; the redirect argument has been changed to avoid an ambiguity. Previously, if you wanted to redirect multiple files,
you would say: redirect csv <FileName> ... stdout <FileName> ... stderr <FileName> ...
Now, you must put redirect before each redirected file: redirect csv <FileName> ... redirect stdout <FileName> ... redirect stderr <FileName> ...
<Redirect> ::=
    redirect csv <FileName> [multiprocess] [append] [noheader] [charset <Charset>] [columndelimiter <Character>] |
    redirect stdout <FileName> [append] |
    redirect stderr <FileName> [append]

Identified multi-processing errors, switched back from multi-threading.

Added multiprocess subargument to redirect csv argument to allow the multiple processes started by gam csv to write intelligently to a single CSV file.
    gam redirect csv UserDelegates.csv multiprocess csv Users.csv gam user ~User print delegates
The output from each of the gam user ~User print delegates commands will be combined into the single file UserDelegates.csv.

4.35.01

Improved performance of gam print groups when select <groupEntity> is specified.

4.35.00

Reverted to multi-threading, multi-processing was causing errors.

Added argument columndelimiter <String> to all places where a CSV file can be specified to allow specification of an alternate column delimiter.
    <CrOSTypeEntity> ::=
                (croscsvfile <FileName>(:<FieldName>)+ [charset <Charset>] [columndelimiter <String>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <String>])|
                (csvkmd cros <FileName> [charset <Charset>] [columndelimiter <String>] [fields <FieldNameList>]
                        keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
                        (matchfield <FieldName> <RegularExpression>)*
                        [datafield <FieldName>(:<FieldName)* [delimiter <String>]])|
    <UserTypeEntity> ::=
                (csvfile <FileName>(:<FieldName>)+ [charset <Charset>] [columndelimiter <String>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <String>])|
                (csvkmd users|groups|ous|ous_and_children|courseparticipants|students|teachers <FileName> [charset <Charset>] [columndelimiter <String>] [fields <FieldNameList>]
                        keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
                        (matchfield <FieldName> <RegularExpression>)*
                        [datafield <FieldName>(:<FieldName)* [delimiter <String>]])|
    <CSVkmdSelector> ::= csvkmd <FileName> [charset <Charset>] [columndelimiter <String>] [fields <FieldNameList>]
                            keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
                            (matchfield <FieldName> <RegularExpression>)*
                            [datafield <FieldName>(:<FieldName)* [delimiter <String>]]
    <FileSelector> ::= (file <FileName> [charset <Charset>])|(csvfile <FileName>(:<FieldName>)+ [charset <Charset>] [columndelimiter <String>] [fields <FieldNameList>])
    gam csv <FileName>|- [charset <Charset>] [columndelimiter <String>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* gam <GAMArgumentList>
    gam loop <FileName>|- [charset <Charset>] [columndelimiter <String>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* gam <GAMArgumentList>

Note!!! Syntax changed; delimiter was changed to columndelimiter in the redirect argument.
    <Redirect> ::=
        redirect [csv <FileName> [append] [noheader] [charset <Charset>] [columndelimiter <Character>] [stdout <FileName> [append]] [stderr <FileName> [append]]

4.34.05

Fix error in gam print groups.

In gam info group, sort extended settings.

4.34.04

Call logging.basicConfig to handle logging messages for oauth2client.contrib.multiprocess_file_storage.

4.34.03

Added memberscount, managerscount and ownerscount arguments to gam print groups; they cause the number of members/managers/owners to be shown,
not the list of email addresses. If any of the members, managers or owners arguments are specified and countsonly is specified, only the counts will be shown.
    gam print groups [todrive [<ToDriveAttributes>]] ([domain <DomainName>] [member <UserItem>])|[select <GroupEntity>]
        [maxresults <Number>] [allfields|([settings] <GroupFieldName>* [fields <GroupFieldNameList>])] [convertcrnl] [delimiter <String>]
        [members|memberscount] [managers|managerscount] [owners|ownerscount] [countsonly]

4.34.02

Added allfields argument to gam print groups; this selects all of the basic group settings and all of the extended groups settings.
    gam print groups [todrive [<ToDriveAttributes>]] ([domain <DomainName>] [member <UserItem>])|[select <GroupEntity>]
        [maxresults <Number>] [convertcrnl] [delimiter <String>] [countsonly]
        [members] [managers] [owners] [allfields|([settings] <GroupFieldName>* [fields <GroupFieldNameList>])]

4.34.01

Additional error checking for group settings operations.

4.34.00

Added csv_input_column_delimiter, csv_output_convert_text_nl, csv_output_column_delimiter and csv_output_field_delimiter to gam.cfg.
    csv_input_column_delimiter
        Column delimiter used when reading CSV files; this must be a single character
        Default: ','
    csv_output_convert_cr_nl
        Convert carriage returns (CR) to "\r" and newlines (NL) to "\n" when writing CSV files
        The commands gam print groups|sites|messages|threads and gam show sites|messages|threads have
        an argument, convertcrnl, that can set this value to true.
        For backwards compatability the default is False, True is probably the preferred value.
        Default: False
    csv_output_column_delimiter
        Column delimiter used when writing CSV files; this must be a single character
        The redirect csv <FileName> [append] [charset <CharSet>] [delimiter <Character>] argument can override this value.
        Default: ','
    csv_output_field_delimiter
        Field list delimiter used when writing CSV output files; this must be a single character
        With the default value of an empty string:
        Each of the gam print courses|datatransfers|filelist|groups|messages|printers|printjobs|sites|threads|tokens|users commands has a delimiter <String> argument that can override this value.
        Default: ' '

Added show_convert_cr_nl to gam.cfg.
    show_convert_cr_nl
        Convert carriage returns (CR) to "\r" and newlines (NL) to "\n" when showing data
        Convert newlines in text fields to "\n" when showing data
        Default: False

4.33.02
Added noheader argument to gam redirect csv to suppress witing column headers to CSV file.
For redirect csv, the optional arguments must appear in the order shown.
    <Redirect> ::=
        redirect [csv <FileName> [append] [noheader] [charset <Charset>] [delimiter <Character>] [stdout <FileName> [append]] [stderr <FileName> [append]]

4.33.01

Anywhere you can specify todrive, there are additional subarguments following the todrive argument that let you title the file,  direct the uploaded file to a particular location and add a timestamp to the file title.
    <ToDriveAttributes> ::=
        (tdtitle <String>)|(tdparent id:<DriveFolderID>|<DriveFolderName>)|(tdtimestamp <Boolean> [tddaysoffset <Number>] [tdhoursoffset <Number])
The tdtitle argument specifies the title for the uploaded file, if not specified, the Gam default title is used.
The tdparent argument specifies the parent folder for the uploaded file; it must specify an existing Drive folder owned by the user named in oauth2.txt.
The tdtimestamp argument specifies whether a timestamp (of the time the file is uploaded to Google) will be added to the title of the uploaded file.
tdparent and tdtimestamp default to the values specified in gam.cfg.
The tddaysoffset and tdhoursoffset arguments let you specify values that subtract time from the timestamp, possibly as documentation to reflect the end of the time period that the uploaded report covers.
Example, generate a list of users, upload to the 'GAM Reports' folder, add a timestamp to the title.
    gam print users todrive tdparent 'GAM Reports' tdtimestamp true id name
To make these values be the default, add the following two lines to gam.cfg.
    todrive_parent = 'GAM Reports'
    todrive_timestamp = true
To override these values, change them on the command line.
    gam print users todrive tdparent root tdtimestamp false id name

4.33.00

Thanks to Jay, multithreading was changed to multiprocessing for gam batch and gam csv; this should increase performance.

4.32.01

Converted convertfooternl argument to converttextnl in gam print groups, it causes \n to be converted to \\n in customFooterText, defaultMessageDenyNotificationText and description,
otherwise \n is not changed in those fields.
    gam print groups [todrive [<ToDriveAttributes>]] ([domain <DomainName>] [member <UserItem>])|[select <GroupEntity>]
        [maxresults <Number>] [delimiter <String>] [converttextnl] [countsonly]
        [members] [managers] [owners] [settings] <GroupFieldName>* [fields <GroupFieldNameList>]

4.32.00

Added member_max_results variable to gam.cfg. When retrieving lists of Google Group members from API, this variable controls how many should be retrieved in each chunk.
The default value is 200; larger numbers should speed up processing with groups with large numbers of members.

gam print groups has been rewritten to improve performance when members|owners|managers|settings are specified. Previously, the list of groups was retrieved with one API call,
then additional API calls were used per group to get the member and settings data; with N groups, there were 1, 1+N or 1+2N total API calls made based on the arguments given.
Now, the additional API calls are batched (based on batch_size in gam.cfg) to reduce the total number of calls; with N groups, there are 1 or 1+N/batch_size total API calls.
Even if batch_size is one, the members and settings API calls are combined.
Additionally, more checking has been added to handle the case where Google mis-reports that a group does not exist.

4.31.01

Fixed error when formatjson argument was used with gam info group/user.

4.31.00

The Email Settings API, used by versions of Gam prior to 4.18.00, would automatically create a label if a you added a filter that specified a label that didn't exist.
The Gmail API, used by versions of Gam from 4.18.00 on, does not automatically create the label, thus, you don't get the expected result.
This version of Gam creates the label for you to give the expected result.

4.30.09

Reference gam create project and gam check serviceaccount rather than https://github.com/jay0lee/GAM/wiki/CreatingClientSecretsFile.
Handle Google misreporting invalid group in gam print groups settings.

4.30.08

Do not get/set settings for special groups abuse and postmaster.

4.30.07

Handle additional API errors when dealing with groups.

4.30.06

Improve gam print groups settings performance.

4.30.05

Strip carriage returns from signature and vacation message.

4.30.04

Added html argument to gam add sendas/update sendas/signature to control newline (\n) processing when signature is read from a file.
    gam <UserTypeEntity> [add] sendas <EmailAddress> <Name> [signature|sig <String>|(file <FileName> [charset <CharSet>]) (replace <Tag> <String>)*] [html] [replyto <EmailAddress>] [default] [treatasalias <Boolean>]
    gam <UserTypeEntity> update sendas <EmailAddress> [name <Name>] [signature|sig <String>|(file <FileName> [charset <CharSet>]) (replace <Tag> <String>)*] [html] [replyto <EmailAddress>] [default] [treatasalias <Boolean>]
    gam <UserTypeEntity> signature|sig <String>|(file <FileName> [charset <Charset>]) (replace <Tag> <String>)* [html] [name <String>] [replyto <EmailAddress>] [default] [primary] [treatasalias <Boolean>]
When html is not specified, newlines are converted to <br/>; this allows simple, multi-line files to be interpreted properly by Google.
When html is specified, newlines are not converted to <br/>; this allows multi-line HTML files to be interpreted properly by Google, no extra blank lines will be included.

4.30.03

Improve Unicode handling when reading files.

4.30.02

Thanks to Jay for the following.
Added gam create project command which is used to create Client and Service Account IDs.
    gam create project [<EmailAddress>]

4.30.01

New columns have been added to CSV files generated by gam print commands; these columns show the number of instances of repeating items.
If a CSV row has the columns: item.0, item.1, ... or item.0.attr1, item.0.attr2, item.1.attr1, item.1.attr2 ...,
the new column will be item showing the number of instances. If a row has no instances of item, the column will be blank.

4.30.00

Thanks to Jay for the following.
Added command to delete calendar events by ID or query from a single calendar.
    gam calendar <CalendarItem> deleteevent (id|eventid <EventID>)* (q|query|eventquery <QueryCalendar>)* [doit] [notifyattendees]
The id argument may be repeated to specify multiple IDs.
A calendar query is a free text search of all of the words in <QueryCalendar>, it is an "and" query.
To perform an "or" query, enter multiple query arguments.
Example, delete all events with "Bob" and "Carol" or "Ted and Alice" in them.
    gam calendar testcal delete event query "Bob Carol" query "Ted Alice" doit
The doit argument is required to actually perform the deletions.

Added notifyattendees argument to gam calendar delete/move event.
    gam calendar <CalendarEntity> delete event <EventIDEntity> [notifyattendees]
    gam calendar <CalendarEntity> move event <EventIDEntity> to <CalendarItem> [notifyattendees]

Added support for newline characters in the unstructured field of a user's address.
$ gam update user testuser address type home unstructured "123 Main Street\nAnytown, CA 12345\nUSA" primary
User: testuser@domain.com, Updated (1/1)
$ gam info user testuser nogroups nolicenses name address
User: testuser@domain.com (1/1)
  Settings:
    First Name: Test
    Last Name: User
    Full Name: Test User
  Addresses:
    type: home
      sourceIsStructured: False
      formatted: 123 Main Street\nAnytown, CA 12345\nUSA

Added optional <EmailAddress> to gam oauth create; if not specified, you will be prompted to enter an email address.
This email address will be used to direct your browser to login at accounts.google.com with the specified address for scope authorization.
The intent is to help prevent using some other currently open session in your browser from doing the scope authorization.
    gam oauth|oauth2 create|request [<EmailAddress>]

Added command to verify Service Account scope authorization. For each Service Account used by GAM, a test is performed to verify that the
scope is authorized. Typically, this command would be executed for a single user.
    gam <UserTypeEntity> check serviceaccount

$ gam user testuser check serviceaccount
User: testuser@domain.com, Check 12 Scopes (1/1)
  Scope: https://mail.google.com/                                    , Checked: PASS (1/12)
  Scope: https://sites.google.com/feeds                              , Checked: PASS (2/12)
  Scope: https://www.google.com/m8/feeds                             , Checked: PASS (3/12)
  Scope: https://www.googleapis.com/auth/activity                    , Checked: PASS (4/12)
  Scope: https://www.googleapis.com/auth/calendar                    , Checked: PASS (5/12)
  Scope: https://www.googleapis.com/auth/drive                       , Checked: PASS (6/12)
  Scope: https://www.googleapis.com/auth/gmail.settings.basic        , Checked: PASS (7/12)
  Scope: https://www.googleapis.com/auth/gmail.settings.sharing      , Checked: PASS (8/12)
  Scope: https://www.googleapis.com/auth/plus.login                  , Checked: PASS (9/12)
  Scope: https://www.googleapis.com/auth/plus.me                     , Checked: PASS (10/12)
  Scope: https://www.googleapis.com/auth/userinfo.email              , Checked: PASS (11/12)
  Scope: https://www.googleapis.com/auth/userinfo.profile            , Checked: PASS (12/12)

All scopes passed!
Service Account Client name <Redacted>.apps.googleusercontent.com is fully authorized.

$ gam user testuser check serviceaccount
User: testuser@domain.com, Check 12 Scopes (1/1)
  Scope: https://mail.google.com/                                    , Checked: PASS (1/12)
  Scope: https://sites.google.com/feeds                              , Checked: FAIL (2/12)
  Scope: https://www.google.com/m8/feeds                             , Checked: PASS (3/12)
  Scope: https://www.googleapis.com/auth/activity                    , Checked: PASS (4/12)
  Scope: https://www.googleapis.com/auth/calendar                    , Checked: FAIL (5/12)
  Scope: https://www.googleapis.com/auth/drive                       , Checked: PASS (6/12)
  Scope: https://www.googleapis.com/auth/gmail.settings.basic        , Checked: PASS (7/12)
  Scope: https://www.googleapis.com/auth/gmail.settings.sharing      , Checked: PASS (8/12)
  Scope: https://www.googleapis.com/auth/plus.login                  , Checked: PASS (9/12)
  Scope: https://www.googleapis.com/auth/plus.me                     , Checked: PASS (10/12)
  Scope: https://www.googleapis.com/auth/userinfo.email              , Checked: PASS (11/12)
  Scope: https://www.googleapis.com/auth/userinfo.profile            , Checked: PASS (12/12)

ERROR: Some scopes failed! Please go to:

https://admin.google.com/domain.com/AdminHome?#OGX:ManageOauthClients

and grant Service Account Client name:

<Redacted>.apps.googleusercontent.com

Access to scopes:

https://mail.google.com/,
https://sites.google.com/feeds,
https://www.google.com/m8/feeds,
https://www.googleapis.com/auth/activity,
https://www.googleapis.com/auth/calendar,
https://www.googleapis.com/auth/drive,
https://www.googleapis.com/auth/gmail.settings.basic,
https://www.googleapis.com/auth/gmail.settings.sharing,
https://www.googleapis.com/auth/plus.login,
https://www.googleapis.com/auth/plus.me,
https://www.googleapis.com/auth/userinfo.email,
https://www.googleapis.com/auth/userinfo.profile

4.29.06

Added todrive_parent and todrive_timestamp variables to gam.cfg.
todrive_parent specifies the parent folder for CSV files when todrive is specified; can be id:<DriveFolderID> or <DriveFolderName>; default is root.
It must specify an existing Drive folder owned by the user named in oauth2.txt.
todrive_timestamp enables/disables adding a timestamp to the title of CSV files when todrive is specified; default is false.

Note!!! Syntax changed.
Anywhere you can specify todrive, there are additional subarguments following the todrive argument that let you direct the uploaded file to a particular location and add a timestamp to the file title.
    <ToDriveAttributes> ::=
        (tdparent id:<DriveFolderID>|<DriveFolderName>)|(tdtimestamp <Boolean> [tddaysoffset <Number>] [tdhoursoffset <Number])
The tdparent argument specifies the parent folder for the uploaded file; it must specify an existing Drive folder owned by the user named in oauth2.txt.
The tdtimestamp argument specifies whether a timestamp (of the time the file is uploaded to Google) will be added to the title of the uploaded file.
tdparent and tdtimestamp default to the values specified in gam.cfg.
The tddaysoffset and tdhoursoffset arguments let you specify values that subtract time from the timestamp, possibly as documentation to reflect the end of the time period that the uploaded report covers.
Example, generate a list of users, upload to the 'GAM Reports' folder, add a timestamp to the title.
    gam print users todrive tdparent 'GAM Reports' tdtimestamp true id name
To make these values be the default, add the following two lines to gam.cfg.
    todrive_parent = 'GAM Reports'
    todrive_timestamp = true
To override these values, change them on the command line.
    gam print users todrive tdparent root tdtimestamp false id name

4.29.05

Added simple argument to gam version for use by scripts.
      gam version [check] [simple]

4.29.04

Add ability to specify an alternate CSV field delimiter in redirect csv.
For redirect csv, the optional arguments must appear in the order shown.
    <Redirect> ::=
        redirect [csv <FileName> [append] [charset <Charset>] [delimiter <Character>] [stdout <FileName> [append]] [stderr <FileName> [append]]

4.29.03

Fixed bug in archive messages.

4.29.02

Allow empty values in user attribute fields.

Added todrive_conversion variable to gam.cfg. When a command specifies todrive, Gam attempts to convert the CSV file to a Google Sheet when uploading the file.
When todrive_conversion is False, no conversion will be performed.

4.29.01

Allow empty values in Contact fields. The blank value will be accepted and the entry will be cleared.

4.29.00

Note!!! oauth2.txt has been reorganized to circumvent a Google limitation and you must reauthorize your Client ID.
If you have customized the list of authorized scopes in a prior version, do 'gam oauth create' in that version, note the settings and then enter e to exit.
After installing this version, you must immediately perform a 'gam oauth create' and enter the settings noted above.
If you haven't customized the list of authorized scopes in a prior version, just do 'gam oauth create' in this version and proceed.
This version and prior versions can share the new oauth2.txt file.
After you've determined that you won't be using a prior version any longer, you can issue the following command to delete the authorizations for the previous version of gam.
    gam oauth delete previous

Added command to archive messages to a group.
    gam <UserTypeEntity> archive messages <GroupItem> (((query <QueryGmail>) (matchlabel <LabelName>) [or|and])+ [quick|notquick] [doit] [max_to_archive <Number>])|(ids <MessageIDEntity>)
To use this command you must add the following scope to the list of authorized scopes for your Client ID:
    https://www.googleapis.com/auth/apps.groups.migration

Thanks to Mattias Bystedt for the following enhancement.
Anywhere you can specify todrive, there are additional subarguments following the todrive argument that let you direct the uploaded file to a particular location and add a timestamp to the file title.
    <ToDriveAttributes> ::=
        (tdparentid <DriveFolderID>)|(tdparentname <DriveFolderName>)|(tdtimestamp [tddaysoffset <Number>] [tdhoursoffset <Number])
The tdparentid/tdparentname arguments specify the parent folder for the uploaded file; they must specify an existing Drive folder owned by the user named in oauth2.txt.
The tdtimestamp argument adds a timestamp (of the time the file is uploaded to Google) to the title of the uploaded file. The tddaysoffset and tdhoursoffset let you specify values that
subtract time from the timestamp, possibly as documentation to reflect the end of the time period that the uploaded report covers.
If these arguments are not specified, the functionaality is as before, the file is uploaded to your root folder with no tiemstamp added to the title.
Example, generate a list of users, upload to the 'GAM Reports' folder, add a timestamp to the title.
    gam print users todrive tdparentname 'GAM Reports' tdtimestamp id name

4.28.01

Correct initialization of scopes list in gam oauth create.

4.28.00

The internal processing of claim/transfer ownership, show filetree and print/show filelist with a select has been rewritten to improve performance.
Previously, the code used an order N-squared process to identify a folder and its descendents; this got unwieldly with large N, say 100000.
The new method uses an order 2N process; print/show filelist without a select is unchanged, it was an order N process.

Added showownedby argument to print/show filelist to allow specification of file ownership.
Added orphans option to select argument in print/show filelist to allow identifying those files that are not on a path from the root folder.
This often occurs with files/folders that are shared with you.
    gam <UserTypeEntity> print|show filelist [todrive] [anyowner|(showownedby any|me|others)] [query <QueryDriveFile>] [fullquery <QueryDriveFile>] [select <DriveFileEntity>|orphans] [depth <Number>]
        [filepath] [allfields|<DriveFieldName>*] (orderby <DriveOrderByFieldName> [ascending|descending])*
By default, print/show filelist starts with a query of "'me' in owners".
If you specify query "xxx", "and xxx" is appended to the current query; you can repeat the query argument to build up a longer query.
If you specify fullquery "xxx", the query is set to "xxx" eliminating the initial "'me' in owners".
If you specify showownedby any or anyowner, all files accessible by the user are listed.
If you specify showownedby me, all files owned by the user are listed; this is the default.
If you specify showownedby others, only files not owned by the user are listed.
The depth <Number> argument controls whether files or folders within a selected folder are listed.
If <Number> equals -1 (the default), all files and folders in the selected folder and below are listed.
If <Number> is 0, files or folders within a selected folder are listed, no descendents are listed.
If <Number> is greater than 0, the files and folders within the selected folder and those files and folders <Number> levels below the selected folder are listed.

When the select argument is not used, the list of files that match the query are listed.
Example, list all files/folders owned by the user:
    gam user testuser print filelist
Example, list all files/folders owned by the user that begin with the word 'Test':
    gam user testuser print filelist query "title contains 'Test'"
Example, list all files/folders owned by any user that are starred and have been modified since a given date.
    gam user testuser print filelist full query "starred = true and modifiedDate >= '2016-10-15T00:00:00Z'"

The select argument specifies a starting point for output; all files that match the query and are descendents of the starting folder are listed.

Example, get a list of files/folders without a parent, owned by anyone, do not show their descendents:
    gam user testuser print filelist select orphans showownedby any depth 0
Example, get a list of files/folders and their descendents, owned by the user,  in the folder 'Top Folder' owned by the user:
    gam user testuser print filelist select drivefilename 'Top Folder' showownedby me

Added showownedby argument to show filetree to allow specification of file ownership.
Added orphans option to select argument to show filetree to allow identifying those files that are not on a path from the root folder.
This often occurs with files/folders that are shared with you.
    gam <UserTypeEntity> show filetree [anyowner|(showownedby any|me|others)] [select <DriveFileEntity>|orphans] [depth <Number>] (orderby <DriveOrderByFieldName> [ascending|descending])*
By default, show filetree displays all files owned by the user.
If you specify showownedby any or anyowner, all files accessible by the user are displayed.
If you specify showownedby me, all files owned by the user are displayed; this is the default.
If you specify showownedby others, all files not owned by the user are displayed.
The depth <Number> argument controls whether files or folders within a selected folder are displayed.
If <Number> equals -1 (the default), all files and folders in the selected folder and below are displayed.
If <Number> is 0, files or folders within a selected folder are displayed, no descendents are displayed.
If <Number> is greater than 0, the files and folders within the selected folder and those files and folders <Number> levels below the selected folder are displayed.

When the select argument is not used, the root folder is selected.
The select argument specifies an alternate starting point for output.
Example, display the tree of files/folders owned by the user:
    gam user testuser show filetree
Example, display the tree of files/folders owned by anyone to a depth of 2:
    gam user testuser show filetree showownedby any depth 2

Emample, display the tree of files/folders without a parent, owned by anyone, and their descendents:
    gam user testuser show filetree select orphans showownedby any
Example, display the tree of  files/folders, owned by the user, in a folder owned by another user:
    gam user testuser show filetree select anydrivefilename 'Other User Folder' showownedby me

Added preview, filepath and todrive arguments to claim/transfer ownership.
preview specifies that a CSV file showing the ownership changes be produced without actually performing the changes.
filepath is used with preview to show the file path for files.
    gam <UserTypeEntity> transfer ownership <DriveFileEntity> <UserItem> [includetrashed] (orderby <DriveOrderByFieldName> [ascending|descending])* [preview] [filepath] todrive]
    gam <UserTypeEntity> claim ownership <DriveFileEntity> [skipids <DriveFileEntity>] [skipusers <UserTypeEntity>] [subdomains <DomainNameEntity>] [includetrashed] [writerscantshare] [preview] [filepath] todrive]
For transfer ownership, the headers of the CSV file are: OldOwner,NewOwner,type,id,title
For claim ownership, the headers of the CSV file are: NewOwner,OldOwner,type,id,title
If filepath is specified, a paths header is added that show the total number of paths to the file; a header path.<N> is added for each path.

4.27.04

Fixed gam print tokens to show clientId.

4.27.03

Handle newlines in CrOS notes field.

4.27.02

Added depth <Number> argument to show filetree
    gam <UserTypeEntity> show filetree [anyowner] [select <DriveFileEntity>] (orderby <DriveOrderByFieldName> [ascending|descending])* [depth <Number>]
If <Number> equals -1 (the default), all files and folders below the selected folder are listed. The root folder is selected by default.
If <Number> is 0, files or folders within a selected folder are listed.
If <Number> is greater than 0, the files and folders within the selected folder and those files and folders depth-1 levels below the selected folder are listed.

Added anydrivefilename argument to allow specification of drive file names for files you don't own but can access, i.e., files shared with you.
    <DriveFileIDEntity> ::= (<DriveFileItem>)|(id <DriveFileItem>)|(id:<DriveFileItem>)|(ids <DriveFileList>)|(ids:<DriveFileList>)
    <DriveFileNameEntity> ::= (drivefilename <DriveFileName>)|(drivefilename:<DriveFileName>)|(anydrivefilename <DriveFileName>)|(anydrivefilename:<DriveFileName>)
    <DriveFileQueryEntity> ::= (query <QueryDriveFile>)|(query:<QueryDriveFile>)
    <DriveFileEntity> ::= <DriveFileIDEntity>|<DriveFileNameEntity>|<DriveFileQueryEntity>|root|<FileSelector>|<ArgsSelector>|<CSVkmdSelector>|<CSVDataSelector>)

4.27.01

Cleaned up processing of guardian invitation cancellations.

4.27.00
Note!!! Functionality change.
Changed command gam show filetree to show only files owned by the user by default; this makes it consistent with gam show filelist.
To get the prior behavior, add the anyowner argument.
    gam <UserTypeEntity> show filetree [anyowner] [select <DriveFileEntity>] (orderby <DriveOrderByFieldName> [ascending|descending])*

Added a new method of selecting a list of users to <UserTypeEntity>.
    group_users <GroupList> [members] [managers] [owners] [primarydomain] [domains <DomainNameList>] [recursive] end
From the list of groups in <GroupList>, users with the specified roles are selected. If no roles are specified, all users are selected.
If recursive is specified, users within nested groups are included. If primarydomain or domains <DomainNameList> are specified, only users from those domains are selected.
The end argument terminates the group_users selection.
To verify the selection, do: gam group_users <GroupList> [members] [managers] [owners] [primarydomain] [domains <DomainNameList>] [recursive] print
Example: gam group_users sales,marketing members recursive primarydomain print
Example: gam info users group_users sales,marketing members recursive primarydomain nogroups nolicenses noaliases name ou

Added a new column to the CSV file produced by print|show driveactivity. Currently, there is a column labeled eventTimeMillis which gives the time of the event
in milliseconds since the start of the current epoch. The new column is eventTime which show eventTimeMillis in the format yyyy-mm-ddThh:mm:ssZ.

Added timezone variable to gam.cfg. Google provides most times in UTC, this variable can be used to convert those times to local time.
The possible values are: utc, local and +|-hh:mm. The default value is utc.
timezone = utc - Time values are not converted.
timezone = local - Time values are converted to local time.
timezone = +|-hh:mm - Time values are converted to the specified offset from UTC.

Added invitations argument to gam delete guardian so that only a pending invitation for a guardian is cancelled.
    gam delete guardian|guardians <GuardianItem> <StudentItem> [invitations]

Added a command to cancel guardian invitations by invitation ID.
    gam cancel guardianinvitation|guardianinvitations <GuardianInvitationID> <StudentItem>

Added arguments to gam update user to enable clearing entire schemas or schema fields.
    gam update user <UserItem> <UserAttributes>+ [clearschema <SchemaName>] [clearschema <SchemaName>.<FieldName>]
See 4.23.03 for note about updating multi-valued schema fields.

Note!!! Functionality change.
Starting in Gam 4.18.00, gam signature and gam show signature were operating on the primary signature of a user, regardless of the user name passed on the command line.
Now, the commands work on the signature of the user specified on the command line. To get the previous behavior, user the primary argument.
    gam <UserTypeEntity> signature|sig <String>|(file <FileName> [charset <Charset>]) (replace <Tag> <String>)* [name <String>] [replyto <EmailAddress>] [default] [primary] [treatasalias <Boolean>]
    gam <UserTypeEntity> show signature|sig [format] [primary]

4.26.01

In order to use the gam info/print/show gal commands you must update your list of authorized scopes; you want to change the scope: https://www.google.com/m8/feeds/contacts to https://www.google.com/m8/feeds
for your OAuth2 Client and Service Accounts. (You are removing /contacts.)

4.26.00

Thanks to Jay for the following change.
Added arguments to gam update cros to perform device actions. See: https://developers.google.com/admin-sdk/directory/v1/reference/chromeosdevices/action
You can either update CrOS device attributes or perform a CrOS device action; if you specify both, only the device action will be performed.
    gam update cros <CrOSList> (<CrOSAttributes>+)|(action deprovision_same_model_replace|deprovision_different_model_replace|deprovision_retiring_device|disable|reenable [acknowledge_device_touch_requirement])
As a precatuion, none of the deprovisioning actions are performed unless you also specify the acknowledge_device_touch_requirement argument.

Implemented commands to show the global address list.
    gam <UserTypeEntity> info gal <ContactEntity> [basic|full] [fields <ContactFieldNameList>]
    gam <UserTypeEntity> show gal [query <QueryContact>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min yyyy-mm-dd]
        [basic|full] [orderby <ContactOrderByFieldName> [ascending|descending]] [fields <ContactFieldNameList>]
    gam <UserTypeEntity> print gal [todrive] [query <QueryContact>] [emailmatchpattern <RegularExpression>] [emailmatchtype work|home|other|<String>] [updated_min yyyy-mm-dd]
        [basic|full] [orderby <ContactOrderByFieldName> [ascending|descending]] [fields <ContactFieldNameList>]

4.25.04

Improve performance of gam print filelist select.

4.25.03

Eliminated depth column in gam print filelist select. Changed depth to default to -1.

4.25.02

Use collections.deque() to reduce memory usage on some gam print operations.

4.25.01

Added convertfooternl argument to gam print groups, it causes \n to be converted to \\n in customFooterText, otherwise \n is not changed.
Added countsonly argument to gam print groups, it causes the number of members/owners/managers to be shown, not the list of email addresses.
    gam print groups [todrive] ([domain <DomainName>] [member <UserItem>])|[select <GroupEntity>]
        [maxresults <Number>] [delimiter <String>] [convertfooternl] [countsonly]
        [members] [owners] [managers] [settings] <GroupFieldName>* [fields <GroupFieldNameList>]

4.25.00

Note!!! Syntax change.
Changed arguments to gam show filetree to allow selection of starting folder and specification of output ordering.
    gam <UserTypeEntity> show filetree [select <DriveFileEntity>] [orderby <DriveOrderByFieldName> [ascending|descending]]*
If select <DriveFileEntity> is omitted, the filetree output starts with the root folder.

Added select argument to print filelist to allow selection of a starting folder for the file list rather than the root folder.
Added anyowner argument to allowing listing of all files in users' drive rather than just those files owned by user.
    gam <UserTypeEntity> print|show filelist [anyowner] [todrive] ([query <QueryDriveFile>] [fullquery <QueryDriveFile>])|([select <DriveFileEntity>] [depth <Number>])
        [filepath] [allfields|<DriveFieldName>*] (orderby <DriveOrderByFieldName> [ascending|descending])*
If none of query, fullquery and select are specified, all of the users' files and folders starting at the root folder are listed.
If query or fullquery is specified, all of the users' files and folders matching the query are listed.
If select is specified, each file or folder selected by <DriveFileEntity> is listed.
The depth <Number> argument controls whether files or folders within a selected folder are listed when the select argument is specified.
If <Number> equals -1 (the default), all files and folders below the selected folder are listed.
If <Number> is 0, no files or folders within a selected folder are listed.
If <Number> is greater than 0, the files and folders within the selected folder and those files and folders depth-1 levels below the selected folder are listed.
When anyowner or fullquery are specified, the Owner column should be interpreted as the User column as some files shown may not owned by the user.

4.24.05

Update 4.24.04 was too complicated; if a drive file has no parents, it will have no paths; there is no need for "orphaned".
In gam print filelist, the headers will be "paths" with a value indicating the number of paths to the file; the paths have headers "path.0", "path.1", ...
If a file has no parents, "paths" will be 0 and there will be no values for "path.0", "path.1", ...

4.24.04

Whenever a file path is shown, there is also an indication as to whether the path is "orphaned", i.e., the file path does not start at the root of Drive.
In gam print filelist, for every header "path.#", there will also be a header "orphaned.#".

4.24.03

The commands gam show fileinfo/filepath and print filelist now show all file paths for a file or folder; previously, only one file path was shown.
The headers for gam print filelist have been changed. Previously, there was a header "path" with a value showing one possible path to a file.
Now, there is a header "paths" with a value indicating the number of paths to the file; the paths have headers "path.0", "path.1", ...
    gam <UserTypeEntity> show fileinfo <DriveFileEntity> [filepath] [allfields|<DriveFieldName>*]
    gam <UserTypeEntity> print|show filelist [todrive] [query <QueryDriveFile>] [fullquery <QueryDriveFile>] [filepath] [allfields|<DriveFieldName>*] (orderby <DriveOrderByFieldName> [ascending|descending])*
    gam <UserTypeEntity> show filepath <DriveFileEntity>

4.24.02

Added formatjson argument to info group/groups to cause output to be in JSON format.
    gam info group <GroupItem> [nousers] [noaliases] [groups] <GroupFieldName>* [fields <GroupFieldNameList>] [formatjson]
    gam info groups <GroupEntity> [nousers] [noaliases] [groups] <GroupFieldName>* [fields <GroupFieldNameList>] [formatjson]

4.24.01

Added formatjson argument to info user/users to cause output to be in JSON format.
    gam info user <UserItem> [noaliases] [nogroups] [nolicenses|nolicences] [noschemas] [schemas <SchemaNameList>] [userview] [fields <UserFieldNameList>] [products|product <ProductIDList>] [skus|sku <SKUIDList>] [formatjson]
    gam info users <UserTypeEntity> [noaliases] [nogroups] [nolicenses|nolicences] [noschemas] [schemas <SchemaNameList>] [userview] [fields <UserFieldNameList>] [products|product <ProductIDList>] [skus|sku <SKUIDList>] [formatjson]

4.24.00

Gam forward and print/show forward now use Gmail API. 

4.23.06

Handle multipart/mixed and multipart/related messages in print/show messages.

4.23.05

Handle carriage returns/linefeeds in message bodies.
In gam print messages/threads, convertbodynl causes \n to be converted to \\n, \r to be converted to \\r, otherwise \n and \r are not changed.
    gam <UserTypeEntity> print messages|threads (((query <QueryGmail>) (matchlabel <LabelName>) [or|and])* [quick|notquick] [max_to_print|max_to_process <Number>] [includespamtrash])|(ids <MessageIDEntity>)
        [headers <String>] [showlabels] [showbody] [convertbodynl] [showsize] [showsnippet] [todrive]

4.23.04

Added showbody argument to print/show messages/threads to allow display of plain message body.
    gam <UserTypeEntity> show messages|threads (((query <QueryGmail>) (matchlabel <LabelName>) [or|and])* [quick|notquick] [max_to_show|max_to_process <Number>] [includespamtrash])|(ids <MessageIDEntity>)
        [headers <String>] [showlabels] [showbody] [showsize] [showsnippet]
    gam <UserTypeEntity> print messages|threads (((query <QueryGmail>) (matchlabel <LabelName>) [or|and])* [quick|notquick] [max_to_print|max_to_process <Number>] [includespamtrash])|(ids <MessageIDEntity>)
        [headers <String>] [showlabels] [showbody]  [showsize] [showsnippet] [todrive]

4.23.03

Added support for specifying type in multi-valued schemas. Custom schema fields can be single-valued or multi-valued;
Gam has always supported both but has not supported the type characteristic within a multi-valued schema field.
In gam create/update user, schema fields are now specified as:
    <SchemaName>.<FieldName> [multivalued [type work|home|other|(custom <CustomType>)]] <String>
Examples:
TestSchema.SVField <String> - value is <String>
TestSchema.MVField <String> - type is work (default), value is <String>
TestSchema.MVField type home <String> - type is home, value is <String>
TestSchema.MVField type custom <CustomType> <String> - type is custom, customType is <CustomType>, value is <String>
Compatability note: In the unlikely case that you are currently setting a multi-valued schema field with the value "type",
i.e., TestSchema.MVField type, you will have to change this to TestSchema.MVField type work type.

If you have external programs that produce multi-column files of data, but witout headers, you have to add a
header row to the file before Gam can read the file as a CSV file. Now, you can use the file as is and specify the
headers in Gam. There are several places where the headers can be specified:
    croscsvfile <FileName>(:<FieldName>)+ [charset <Charset>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <String>]
    csvfile <FileName>(:<FieldName>)+ [charset <Charset>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* [delimiter <String>]
    csvkmd cros|users|groups|ous|ous_and_children|courseparticipants|students|teachers <FileName> [charset <Charset>] [fields <FieldNameList>]
               keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
           (matchfield <FieldName> <RegularExpression>)*
           [datafield <FieldName>(:<FieldName)* [delimiter <String>]]
    <CSVkmdSelector> ::= csvkmd <FileName> [charset <Charset>] [fields <FieldNameList>]
                                keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
                                (matchfield <FieldName> <RegularExpression>)*
                                [datafield <FieldName>(:<FieldName)* [delimiter <String>]]
    gam csv <FileName>|- [charset <Charset>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* gam <GAMArgumentList>
    gam loop <FileName>|- [charset <Charset>] [fields <FieldNameList>] (matchfield <FieldName> <RegularExpression>)* gam <GAMArgumentList>

4.23.02

Use Directory API to update customer language.

4.23.01

Improve handling of inappropriate email addresses in GAPI Service calls.

4.23.00

Allow mapping of keyfield value in csvkmd selectors. 
    <CSVkmdSelector> ::= csvkmd <FileName> [charset <Charset>]
        keyfield <FieldName> [keypattern <RegularExpression>] [keyvalue <String>] [delimiter <String>]
        (matchfield <FieldName> <RegularExpression>)*
        [datafield <FieldName>(:<FieldName)* [delimiter <String>]]

You want to update the membership of a collection of parent groups at your school, the data is coming from a database in a fixed format.
Example 1, CSV File GroupP1P2.csv, exactly the data you want, keypattern and keyvalue are not required
Group,P1Email,P2Email
2017-parents@domain.com,g1member11@domain.com,g1member12@domain.com
2017-parents@domain.com,g1member21@domain.com,g1member22@domain.com
2018-parents@domain.com,g2member11@domain.com,g2member11@domain.com
2018-parents@domain.com,g2member21@domain.com,g2member22@domain.com
...
For each row, the value from the Group column is used as the group name.
Verify data selection: gam list csvkmd GroupP1P2.csv keyfield Group datafield P1Email:P2Email data csvdata P1Email:P2Email
Execute: gam update groups csvkmd GroupP1P2.csv keyfield Group datafield P1Email:P2Email sync member csvdata P1Email:P2Email

Example 2, CSV File GradYearP1P2.csv, you have to convert GradYear to group name GradYear-parents@domain.com, keyvalue is required
GradYear,P1Email,P2Email
2017,g1member11@domain.com,g1member12@domain.com
2017,g1member21@domain.com,g1member22@domain.com
2018,g2member11@domain.com,g2member11@domain.com
2018,g2member21@domain.com,g2member22@domain.com
...
For each row, the value from the GradYear column replaces the keyField name in the keyvalue argument and that value is used as the group name.
Verify data selection: gam list csvkmd GradYearP1P2.csv keyfield GradYear keyvalue GradYear-parents@domain.com datafield P1Email:P2Email data csvdata P1Email:P2Email
Execute: gam update groups csvkmd GradYearP1P2.csv keyfield GradYear keyvalue GradYear-parents@domain.com datafield P1Email:P2Email sync member csvdata P1Email:P2Email

Example 3, CSV File GradYearP1P2.csv, you have to convert GradYear to group name 'LastTwoDigitsOfGradYear-parents@domain.com', keypattern and keyvalue are required.
GradYear,P1Email,P2Email
2017,g1member11@domain.com,g1member12@domain.com
2017,g1member21@domain.com,g1member22@domain.com
2018,g2member11@domain.com,g2member11@domain.com
2018,g2member21@domain.com,g2member22@domain.com
...
For each row, the value from the GradYear column is matched against the keypattern, the matched segments are substituted into the keyvalue argument and that value is used as the group name.
Verify data selection: gam list csvkmd GradYearP1P2.csv keyfield GradYear keypattern '20(..)' keyvalue '\1-parents@domain.com' datafield P1Email:P2Email data csvdata P1Email:P2Email
Execute: gam update groups csvkmd GradYearP1P2.csv keyfield GradYear keypattern '20(..)' keyvalue '\1-parents@domain.com' datafield P1Email:P2Email sync member csvdata P1Email:P2Email

4.22.03

Allow underscore as a valid character in site names. Thanks to Mattias Bystedt for reporting this.

4.22.02

Fix error in gam print group-members.

4.22.01

Handle cache_discovery_only when discovery is read from file.

4.22.00

Added cache_discovery_only variable to gam.cfg.
If no_cache = True, no GAM API calls are cached.
If no_cache = False and cache_discovery_only = False, all GAM API calls are cached.
If no_cache = False and cache_discovery_only = True, only GAM discovery API calls are cached.
The last combination caches GAM discovery API calls that usually return the same value
without consuming large amounts of disc space as when all GAM API calls are cached.

4.21.02

Retry Sites API calls on Internal Server Error

4.21.01

Added gam show sites command.
    gam [<UserTypeEntity>] show sites [domain|domains <DomainNameEntity>] [includeallsites] [withmappings] [role|roles all|<SiteACLRoleList>] [maxresults <Number>]

4.21.01

Expanded gam print sites to take a <DomandNameEntity> rather than just a <DomainName>. This allows printing site information for several domains with one command.
    gam [<UserTypeEntity>] print sites [todrive] [domain <DomainNameEntity>] [includeallsites] [withmappings] [roles all|<SiteACLRoleList>] [maxresults <Number>] [convertsummarynl]
Examples:
     gam print sites domain domain1.com,domain2.com
     gam redirect csv ./domains.csv print domains | gam print sites domain csvfile ./domains.csv:domainName

4.20.13

Fix uninitialized variable bug in doLoop.

4.20.12

Handle linefeeds in site summaries.
In gam print sites, convertsummarynl causes \n to be converted to \\n, otherwise \n is not changed.
In gam create/update sites, \\n is  converted to \n in summary <String>.
    gam [<UserTypeEntity>] print sites [todrive] [domain <DomainName>] [includeallsites] [withmappings] [roles all|<SiteACLRoleList>] [maxresults <Number>] [convertsummarynl]

4.20.11

Add includeallsites to gam print sites to expand list of sites printed for a user.
    gam [<UserTypeEntity>] print sites [todrive] [domain <DomainName>] [includeallsites] [withmappings] [roles all|<SiteACLRoleList>] [maxresults <Number>]

4.20.10

Handle incomplete author information in gam print siteactivity.

4.20.09

Added userfields to gam print group-members to allow output of additional user fields.
    gam print group-members|groups-members [todrive] ([domain <DomainName>] [member <UserItem>])|[group <GroupItem>]|[select <GroupEntity>]
        [membernames] <MembersFieldName>* [fields <MembersFieldNameList>] [userfields <UserFieldNameList>] [recursive [noduplicates]]

4.20.08

Expand gam calendar show events and add gam calendar print events.
    gam calendar <CalendarEntity> show events [alwaysincludeemail] [showdeleted] [showhiddeninvitations] [singleevents]
        [icaluid <String>] (privateextendedproperty <String>)* (sharedextendedproperty <String>)* [q|query <String>] [maxattendees <Number>]
        [starttime|timemin <Time>] [endtime|timemax <Time>] [updatedmin <Time>] [orderby starttime|updated]
    gam calendar <CalendarEntity> print events [todrive] [alwaysincludeemail] [showdeleted] [showhiddeninvitations] [singleevents]
        [icaluid <String>] (privateextendedproperty <String>)* (sharedextendedproperty <String>)* [q|query <String>] [maxattendees <Number>]
        [starttime|timemin <Time>] [endtime|timemax <Time>] [updatedmin <Time>] [orderby starttime|updated]

Handle untranslatable Unicode characters.

4.20.05

Implement command to claim Google Drive file ownership. Credit to Mattias Bystedt for the original code.
See: https://github.com/lerklompen/GAM/releases/tag/v3.66-writerscantshare
    gam <UserTypeEntity> claim ownership <DriveFileEntity> [skipids <DriveFileEntity>] [skipusers <UserTypeEntity>] [subdomains <DomainNameEntity>] [includetrashed] [writerscantshare]

4.20.04

Big fix.

4.20.03

Implement command to transfer Google Drive file ownership. Credit to Mattias Bystedt for the original code.
See: https://github.com/lerklompen/GAM/releases/tag/v3.66-writerscantshare
    gam <UserTypeEntity> transfer ownership <DriveFileEntity> <UserItem> [includetrashed] (orderby <DriveOrderByFieldName> [ascending|descending])*

4.20.02

Signatures and vacation messages were converting newlines to <br/> inappropriately, this has been corrected.

4.20.01

Selectors/commands that use the matchfield argument have been extended to allow multiple instances of matchfield.
To select a row from a CSV file, all matchfields must be present in the row and all <RegularExpression>s must match.
    <CrOSTypeEntity> ::=
                (croscsvfile <FileName>(:<FieldName>)+ [charset <Charset>] (matchfield <FieldName> <RegularExpression>)* [delimiter <String>])|
                (csvkmd cros <FileName> [charset <Charset>]
                        keyfield <FieldName> [delimiter <String>]
                        (matchfield <FieldName> <RegularExpression>)*
                        [datafield <FieldName>(:<FieldName)* [delimiter <String>]])|
    <UserTypeEntity> ::=
                (csvfile <FileName>(:<FieldName>)+ [charset <Charset>] (matchfield <FieldName> <RegularExpression>)* [delimiter <String>])|
                (csvkmd users|groups|ous|ous_and_children|courseparticipants|students|teachers <FileName> [charset <Charset>]
                        keyfield <FieldName> [delimiter <String>]
                        (matchfield <FieldName> <RegularExpression>)*
                        [datafield <FieldName>(:<FieldName)* [delimiter <String>]])|
    <CSVkmdSelector> ::= csvkmd <FileName> [charset <Charset>] keyfield <FieldName> [delimiter <String>] (matchfield <FieldName> <RegularExpression>)* [datafield <FieldName>(:<FieldName)* [delimiter <String>]]

    gam csv <FileName>|- [charset <Charset>] (matchfield <FieldName> <RegularExpression>)* gam <GAMArgumentList>
    gam loop <FileName>|- [charset <Charset>] (matchfield <FieldName> <RegularExpression>)* gam <GAMArgumentList>

The csvkmd datafield <FieldName> argument has been expanded to datafield <FieldName>(:<FieldName>)*.
This allows you to gather data from several columns; the columns do not have to be contiguous.
    <FieldName>(:<FieldName>*) must be the same in csvkmd and csvcros/csvdata.
    <CrOSTypeEntity> ::=
                (csvkmd cros <FileName> [charset <Charset>]
                        keyfield <FieldName> [delimiter <String>]
                        (matchfield <FieldName> <RegularExpression>)*
                        [datafield <FieldName>(:<FieldName)* [delimiter <String>]])|
                (csvcros <FieldName>(:<FieldName>*))
    <UserTypeEntity> ::=
                (csvkmd users|groups|ous|ous_and_children|courseparticipants|students|teachers <FileName> [charset <Charset>]
                        keyfield <FieldName> [delimiter <String>]
                        (matchfield <FieldName> <RegularExpression>)*
                        [datafield <FieldName>(:<FieldName)* [delimiter <String>]])|
                (csvdata <FieldName>(:<FieldName>*))
    <CSVkmdSelector> ::= csvkmd <FileName> [charset <Charset>] keyfield <FieldName> [delimiter <String>] (matchfield <FieldName> <RegularExpression>)* [datafield <FieldName>(:<FieldName)* [delimiter <String>]]

Given the file GroupFourUsers.csv:
Group,UserA,UserB,UserC,UserD
group1@bar.com,user1a@bar.com,user1b@bar.com,user1c@bar.com,user1d@bar.com
group2@bar.com,user2a@bar.com,user2b@bar.com,user2c@bar.com,user2d@bar.com
...
gam update groups csvkmd GroupFourUsers.csv keyfield Group datafield UserA:UserB:UserC:UserD sync members csvdata UserA:UserB:UserC:UserD

4.20.00

The data selector csvfile <FileName>:<FieldName> has been expanded to <FileName>(:<FieldName>)+.
This allows you to gather data from several columns; the columns do not have to be contiguous.

Given the file FourUsers.csv:
UserA,UserB,UserC,UserD
user1a@bar.com,user1b@bar.com,user1c@bar.com,user1d@bar.com
user2a@bar.com,user2b@bar.com,user2c@bar.com,user2d@bar.com
...
gam update group group@bar.com sync members csvfile FourUsers.csv:UserA:UserB:UserC:UserD

4.19.06

Expanded the options for parameter substitution in gam csv, RE pattern substitution is now available.
An argument containing instances of ~~xxx~!~pattern~!~replacement~~ has ~~...~~ replaced by re.sub(pattern, replacement, value of field xxx from the CSV file)
An argument containing instances of ~~xxx~~ has xxx replaced by the value of field xxx from the CSV file
An argument containing exactly ~xxx is replaced by the value of field xxx from the CSV file
For example, ~~primaryEmail~!~^(.+)@(.+)$~!~\1 AT \2~~ would replace foo@bar.com (from the primaryEmail column) with foo AT bar.com

4.19.05

Added products <ProductIDList> argument to gam info user <User> so that licenses for desired products can be shown.
You can specify products or skus but not both.
    gam info user [<UserItem>] [noaliases] [nogroups] [nolicenses|nolicences] [noschemas] [schemas <SchemaNameList>] [userview] <UserFieldName>* [fields <UserFieldNameList>] [(products|product <ProductIDList>)|(skus|sku <SKUIDList>)]
         

4.19.04

When specifying a flat file or CSV file as the source of a list of items, you can specify a delimiter so that multiple values can be
obtained from a single row of a flat file or a single column of a CSV file.
file <FileName> [charset <CharSet>] [delimiter <String>]
csvfile <FileName>:<FieldName> [charset <CharSet>] [delimiter <String>]
Suppose you have a program that queries a database to get the email addresses for all families at your school; there is one file per grade,
one row per family and multiple email addresses per row separated by spaces. For example, here is SecondGrade.txt
momfamily1@domain.com dadfamily1@domain.com
momfamily2@domain.com dadfamily2@domain.com
momfamily3@domain.com
...
The specification: file SecondGrade.txt delimiter ' '
would produce the list:
momfamily1@domain.com
dadfamily1@domain.com
momfamily2@domain.com
dadfamily2@domain.com
momfamily3@domain.com
...

4.19.00

At Jay Lee's suggestion, gam update schema was updated to function in a manner expected by users.
The existing schema is read, any <SchemaFieldDefinitions> that have the same field name as an existing field will update that field.
Any <SchemaFieldDefinitions> that don't exist in the current schema will be added.
You can delete fields; it is an error to delete a field that doesn't exist.
It is an error to delete all of the fields in a schema; delete the schema if it is no longer required.
The previous model that required that the entire field list be supplied on an update still works.
    gam update schema <SchemaName> <SchemaFieldDefinition>* (deletefield <FieldName>)*
    gam update schemas <SchemaEntity> <SchemaFieldDefinition>* (deletefield <FieldName>)*

Thanks to Jay Lee, classroom student guardians are now supported.
    gam create guardian|guardianinvite|inviteguardian <EmailAddress> <UserItem>
    gam delete guardian|guardians <GuardianID <UserItem>
    gam show guardian|guardians [invitedguardian <GuardianID>] [student <UserItem>] [invitations] [states <GuardianStateList>] [<UserTypeEntity>]
    gam print guardian|guardians [todrive] [invitedguardian <GuardianID>] [student <UserItem>] [invitations] [states <GuardianStateList>] [<UserTypeEntity>]

4.18.08

Added removeexpiration <Boolean> argument to gam update drivefileacl to allow removal of ACL expiration date.
    gam <UserTypeEntity> update drivefileacl <DriveFileEntity> <PermissionID>
        (role <DriveFileACLRole>) [withlink|(allowfilediscovery <Boolean>)] [removeexpiration <Boolean>] [transferownership <Boolean>] [showtitles]

Changed the CSV file headers for gam print delegates.
Old: User, delegateName, delegateAddress, delegationStatus
New: Delegator, Delegate, Delegate Email, Delegate ID, Status

4.18.06

Added noshow argument to gam get photo to suppress displaying of photo data
    gam <UserTypeEntity> get photo [drivedir|(targetfolder <FilePath>)] [noshow]

4.18.05

The idfirst argument has been dropped from all print commands as its effect is now the default. Eliminate it from any scripts.

The command print is now a synonym for show for driveactivity, drivesettings, filelist.

The column headings for gam print org are now consistent regardless of what fields are chosen to display.
The headings are: Path, ID, Name, Description, Parent, ParentID, InheritanceBlocked

4.18.03

Added command to print Gmail Profiles to CSV file, dropped all arguments from gam show gmailprofile.
    gam <UserTypeEntity> print gmailprofile [todrive]
    gam <UserTypeEntity> show gmailprofile

Added command to print Goggle+ Profiles to CSV file, dropped all arguments from gam show gplusprofile.
    gam <UserTypeEntity> print gplusprofile [todrive]
    gam <UserTypeEntity> show gplusprofile

Added command to print user schemas to CSV file, renamed command to display formatted user schemas to gam show schemas.
    gam print schema|schemas [todrive]
    gam show schema|schemas

Added command to print user access tokens to CSV file.
    gam <UserTypeEntity> print tokens|token|3lo|oauth [todrive] [clientid <ClientID>]

Added command to move a Google drive file to the trash.
    gam <UserTypeEntity> trash drivefile <DriveFileEntity>
This is equivalent to: gam <UserTypeEntity> delete drivefile <DriveFileEntity> trash

Added command to remove a Google drive file from the trash.
    gam <UserTypeEntity> untrash drivefile <DriveFileEntity>
This is equivalent to: gam <UserTypeEntity> delete drivefile <DriveFileEntity> untrash

Added commands to process Gmail threads in the same manner as messages.
Added and, or arguments to message processing commands. These arguments allow you to combine queries and matchlabels; the default conjunction is and.
Added quick and notquick arguments to message processing commands.
By default, gam delete/modify/spam/trash/untrash messages fetches all matching messages from Google and then processes only max_to_process of them.
To speed up fetching, specify quick and only max_to_process of the matching messages will be fetched. You must still specify doit to perform the operation.
By default, gam print/show messages fetch only max_to_process matching messages from Google and then processes them.
To see how many messages actually match, specify notquick and all matching messages will be fetched; only max_to_process of them will be processed.

    gam <UserTypeEntity> delete messages|threads (((query <Query>) (matchlabel <LabelName>) [or|and])+ [quick|notquick] [doit] [max_to_delete|max_to_process <Number>])|(ids <MessageIDEntity>)
    gam <UserTypeEntity> modify messages|threads (((query <Query>) (matchlabel <LabelName>) [or|and])+ [quick|notquick] [doit] [max_to_modify|max_to_process <Number>])|(ids <MessageIDEntity>) (addlabel <LabelName>)* (removelabel <LabelName>)*
    gam <UserTypeEntity> spam messages|threads (((query <Query>) (matchlabel <LabelName>) [or|and])+ [quick|notquick] [doit] [max_to_spam|max_to_process <Number>])|(ids <MessageIDEntity>)
    gam <UserTypeEntity> trash messages|threads (((query <Query>) (matchlabel <LabelName>) [or|and])+ [quick|notquick] [doit] [max_to_trash|max_to_process <Number>])|(ids <MessageIDEntity>)
    gam <UserTypeEntity> untrash messages|threads (((query <Query>) (matchlabel <LabelName>) [or|and])+ [quick|notquick] [doit] [max_to_untrash|max_to_process <Number>])|(ids <MessageIDEntity>)
    gam <UserTypeEntity> show messages|threads (((query <Query>) (matchlabel <LabelName>) [or|and])* [quick|notquick] [max_to_show|max_to_process <Number>] [includespamtrash])|(ids <MessageIDEntity>) [headers <String>] [showlabels] [showsize] [showsnippet]
    gam <UserTypeEntity> print messages|threads (((query <Query>) (matchlabel <LabelName>) [or|and])* [quick|notquick] [max_to_print|max_to_process <Number>] [includespamtrash])|(ids <MessageIDEntity>) [headers <String>] [showlabels] [showsize] [showsnippet] [todrive]

All commands that process messages and threads now use the value of email_batch_size from gam.cfg to create batches to speed up processing.

Added select argument to gam print cros to allow selection of source of ChromeOS devices.
Add optional <UserTypeEntity> to gam print users and <CroSTypeEntity> to gam print cros.
    gam [<CrOSTypeEntity>] print cros [todrive] [query <QueryCrOS>]|[select <CrOSTypeEntity>]
        [orderby <CrOSOrderByFieldName> [ascending|descending]] [nolists] [listlimit <Number>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>]
    gam [<UserTypeEntity>] print users [todrive] ([domain <DomainName>] [query <QueryUser>] [deleted_only|only_deleted])|[select <UserTypeEntity>]
        [delimiter <String>] [groups] [license|licenses|licence|licences] [emailpart|emailparts|username]
        [orderby <UserOrderByFieldName> [ascending|descending]] [userview]
        [basic|full|allfields | <UserFieldName>* | fields <UserFieldNameList>]

Added arguments to gam info cros to allow specification of desired output fields.
    gam info cros <CrosDeviceEntity> [nolists] [listlimit <Number>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>]
    gam info croses <CrOSEntity> [nolists] [listlimit <Number>]
        [basic|full|allfields] <CrOSFieldName>* [fields <CrOSFieldNameList>]

Added drivedir and targetfolder <FilePath> arguments to gam printjob fetch and gam get photo to
allow specification of the destination folder for the file retrieved from Google. The default
location for these commands is the current working directory, drivedir specifies the value of drive_dir from gam.cfg and
targetfolder <FilePath> specifies a user-chosen path.
    gam printjob|printjobs <PrinterID>|any fetch
        [olderthan|newerthan <PrintJobAge>] [query <QueryPrintJob>]
        [status <PrintJobStatus>]
        [orderby <PrintJobOrderByFieldName> [ascending|descending]]
        [owner|user <EmailAddress>]
        [limit <Number>] [drivedir|(targetfolder <FilePath>)]
    gam <UserTypeEntity> get photo [drivedir|(targetfolder <FilePath>)]

4.18.02

Set exit/return code when no items are found to process in a command.
For example, if you want to test for the existance of a Google drive folder:
gam <UserTypeEntity> show fileinfo drivefilename 'Top Folder' and mimeType ='application/vnd.google-apps.folder'" id
The exit/return code is 0 if the folder exists, 60 if it doesn't.

4.18.01

Added variable email_batch_size to gam.cfg, the default is 100 and the range is 1 to 100.
gam print/show messages/threads use this variable to batch retrieval of items from Gmail; it speeds up processing by a factor of ten.

4.18.0

Improve Gmail filter processing.
    gam <UserTypeEntity> [add] filter [from <EmailAddress>] [to <EmailAddress>] [subject <String>] [haswords|query <List>] [nowords|negatedquery <List>] [musthaveattachment|hasattachment] [excludechats] [size larger|smaller <ByteCount>]
        [label <LabelID>] [important|notimportant] [star] [trash] [markread] [archive] [neverspam] [forward <EmailAddress>]
    gam <UserTypeEntity> delete filters <FilterIDEntity>
    gam <UserTypeEntity> show filters
    gam <UserTypeEntity> info filters <FilterIDEntity>
    gam <UserTypeEntity> print filters [todrive]

Add commands to process Gmail forwarding addresses.
    gam <UserTypeEntity> add forwardingaddress|forwardingaddresses <EmailAddressEntity>
    gam <UserTypeEntity> delete forwardingaddress|forwardingaddresses <EmailAddressEntity>
    gam <UserTypeEntity> show forwardingaddress|forwardingaddresses
    gam <UserTypeEntity> info forwardingaddress|forwardingaddresses <EmailAddressEntity>
    gam <UserTypeEntity> print forwardingaddress|forwardingaddresses [todrive]

Improve Gmail forward processing.
    gam <UserTypeEntity> forward <FalseValues>
    gam <UserTypeEntity> forward <TrueValues> keep|leaveininbox|archive|delete|trash|markread <EmailAddress>
    gam <UserTypeEntity> show forward
    gam <UserTypeEntity> print forward [todrive]

Improve Gmail sendas processing.
    gam <UserTypeEntity> [add] sendas <EmailAddress> <Name> [replyto <EmailAddress>] [default] [treatasalias <Boolean>] [signature|sig <String>|(file <FileName> [charset <CharSet>]) (replace <REPattern> <String>)*]
    gam <UserTypeEntity> update sendas <EmailAddress> [name <Name>] [replyto <EmailAddress>] [default] [treatasalias <Boolean>] [signature|sig <String>|(file <FileName> [charset <CharSet>]) (replace <REPattern> <String>)*]
    gam <UserTypeEntity> delete sendas <EmailAddressEntity>
    gam <UserTypeEntity> show sendas [format]
    gam <UserTypeEntity> info sendas <EmailAddressEntity> [format]
    gam <UserTypeEntity> print sendas [todrive]

Improve Gmail signature processing.
    gam <UserTypeEntity> signature|sig <String>|(file <FileName> [charset <Charset>]) (replace <Tag> <String>)* [name <String>] [replyto <EmailAddress>] 
    gam <UserTypeEntity> show signature|sig [format]

Use Gmail API for POP/IMAP/Vacation processing.
    gam <UserTypeEntity> imap|imap4 <Boolean> [noautoexpunge] [expungebehavior archive|deleteforever|trash] [maxfoldersize 0|1000|2000|5000|10000]
    gam <UserTypeEntity> pop|pop3 <Boolean> [for allmail|newmail|mailfromnowon|fromnowown] [action keep|leaveininbox|archive|delete|trash|markread]
    gam <UserTypeEntity> vacation <FalseValues>
    gam <UserTypeEntity> vacation <TrueValues> subject <String> (message <String>)|(file <FileName> [charset <CharSet>]) (replace <Tag> <String>)* [html]
        [contactsonly] [domainonly] [startdate <Date>] [enddate <Date>]
    gam <UserTypeEntity> show vacation [format]

The output of the command gam [<UserTypeEntity>] print contacts has been modified.
The first three column headings are User|Domain, ContactID, Name; the remaining column headings are sorted.
The column names for address, email, externalid, event, im, jot, organization, phone, relation, userdefinedfield and website have changed.
Using email as an example, if a user has two work email addresses and a home email address, the columns/values would have been:
Home Email,Home Email Primary,Work Email,Work Email Primary,Work Email 2,Work Email 2 Primary
home@domain.com,false,work1@domain.com,true,work2@domain.com,false
The new column headings are:
Emails.0.count,Emails.1.address,Emails.1.rank,Emails.1.type,Emails.2.address,Emails.2.rank,Emails.2.type,Emails.3.address,Emails.3.rank,Emails.3.type
3,home@domain.com,notprimary,home,work1@domain.com,primary,work,work2@domain.com,notprimary,work

The new headings should make processing the CSV file easier and allows gam csv to directly use the data from the CSV file.

Added command gam show contacts, it performs optional queries or shows all contacts.
    gam show contacts [query <Query>] [updated_min yyyy-mm-dd]
        [basic|full] [showgroups] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]])
    gam <UserTypeEntity> show contacts [query <Query>] [contactgroup <ContactGroupItem>] [updated_min yyyy-mm-dd]
        [basic|full] [showgroups] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]]

Modified command gam info contacts to operate only on contacts identified by their IDs.
    gam info contacts <ContactEntity> [basic|full] [showgroups]
    gam <UserTypeEntity> info contacts <ContactEntity> [basic|full] [showgroups]
If you have scripts that use the query or contactgroups arguments with gam info contacts, change info to show.

Added showgroups argument to gam info/print/show contacts to display output of contact group information.

Added emailmatchpattern <REPattern> and [emailmatchtype work|home|other|<String>] arguments to gam delete/print/show contacts
to allow matching on contact email addresses. emailmatchtype is only used when emailmatchpattern is specified.
Added fields argument to gam info/print/show contacts to allow selection of fields to display.
    gam delete contacts <ContactEntity>|([query <Query>] [emailmatchpattern <REPattern>] [emailmatchtype work|home|other|<String>] [updated_min yyyy-mm-dd]
    gam info contacts <ContactEntity> [basic|full] [showgroups] [fields <ContactFieldNameList>]
    gam show contacts [query <Query>] [emailmatchpattern <REPattern>] [emailmatchtype work|home|other|<String>] [updated_min yyyy-mm-dd]
        [basic|full] [showgroups] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]] [fields <ContactFieldNameList>]
    gam print contacts [todrive] [query <Query>] [emailmatchpattern <REPattern>] [emailmatchtype work|home|other|<String>] [updated_min yyyy-mm-dd]
        [basic|full] [showgroups] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]] [fields <ContactFieldNameList>]

    gam <UserTypeEntity> delete contacts <ContactEntity>|([query <Query>] [contactgroup <ContactGroupItem>] [emailmatchpattern <REPattern>] [emailmatchtype work|home|other|<String>] [updated_min yyyy-mm-dd]
    gam <UserTypeEntity> info contacts <ContactEntity> [basic|full] [showgroups] [fields <ContactFieldNameList>]
    gam <UserTypeEntity> show contacts [query <Query>] [contactgroup <ContactGroupItem>] [emailmatchpattern <REPattern>] [emailmatchtype work|home|other|<String>] [updated_min yyyy-mm-dd]
        [basic|full] [showgroups] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]] [fields <ContactFieldNameList>]
    gam <UserTypeEntity> print contacts [todrive] [query <Query>] [contactgroup <ContactGroupItem>] [emailmatchpattern <REPattern>] [emailmatchtype work|home|other|<String>] [updated_min yyyy-mm-dd]
        [basic|full] [showgroups] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]] [fields <ContactFieldNameList>]

Added command to show all of a user's contact groups.
    gam <UserTypeEntity> show contactgroups [updated_min yyyy-mm-dd]
        [basic|full] [showdeleted] [orderby <ContactOrderByFieldName> [ascending|descending]]

Added command to print calendars to CSV file, dropped all arguments from gam show calendars.
    gam <UserTypeEntity> print calendars [todrive]
    gam <UserTypeEntity> show calendars

4.17.B

Add alternative command to add delegates and command to print delegates.
    gam <UserTypeEntity> add delegate|delegates <UserEntity>
    gam <UserTypeEntity> print delegates [todrive]

4.17.7

Added Message-Id to default list of message headers in print/show messages.
Added showsize argument to gam print/show messages to have message size output/

4.17.1

Handle errors when contact commands are applied to aliases.

4.17.0

Added commands to print messages/threads.
    gam <UserTypeEntity> print message|messages (query <Query> (matchlabel <LabelName>)* [max_to_show <Number>] [includespamtrash])|(ids <MessageIDEntity>) [headers <String>] [showlabels] [todrive]
    gam <UserTypeEntity> print thread|threads (query <Query> (matchlabel <LabelName>)* [max_to_show <Number>] [includespamtrash])|(ids <MessageIDEntity>) [headers <String>] [showlabels] [todrive]

Added command to empty drive drive trash.
    gam <UserTypeEntity> empty drivetrash

4.16.6

Credit to Steve Main for suggesting the following enhancement.
Added argument to gam <UserTypeEntity> signature and gam <UserTypeEntity> vacation to allow pattern substitution in the signature and vacation message.
    gam <UserTypeEntity> signature <String>|(file <FileName> [charset <Charset>]) (replace <Tag> <String>)*
    gam <UserTypeEntity> vacation <TrueValues> subject <String> (message <String>)|(file <FileName> [charset <CharSet>]) [contactsonly] [domainonly]
        [startdate <Date>] [enddate <Date>] (replace <Tag> <String>)*
Every instance of {Tag} in the signature/message will be replaced by <String>. Instances of the form {RT}...{Tag}...{/RT} will be eliminated
if there was no <Tag> specified that matches Tag or if a <Tag> matching Tag was specified but the matching <String> is empty.
This is especially useful with CSV files.
gam csv Users.csv gam user '~User' signature file SignatureTemplate.txt replace 'User' '~User' replace 'Title' '~Title'

4.16.5

Added argument to gam xxx messages/threads to allow id lists to be specified. In this case doit and max_to_xxx are not required.
    gam <UserTypeEntity> delete message|messages (query <Query> (matchlabel <LabelName>)* [doit] [max_to_delete <Number>])|(ids <MessageIDEntity>)
    gam <UserTypeEntity> modify message|messages (query <Query> (matchlabel <LabelName>)* [doit] [max_to_modify <Number>])|(ids <MessageIDEntity>) (addlabel <LabelName>)* (removelabel <LabelName>)*
    gam <UserTypeEntity> spam message|messages (query <Query> (matchlabel <LabelName>)* [doit] [max_to_spam <Number>])|(ids <MessageIDEntity>)
    gam <UserTypeEntity> trash message|messages (query <Query> (matchlabel <LabelName>)* [doit] [max_to_trash <Number>])|(ids <MessageIDEntity>)
    gam <UserTypeEntity> untrash message|messages (query <Query> (matchlabel <LabelName>)* [doit] [max_to_untrash <Number>])|(ids <MessageIDEntity>)
    gam <UserTypeEntity> show message|messages (query <Query> (matchlabel <LabelName>)* [max_to_show <Number>] [includespamtrash])|(ids <MessageIDEntity>)
    gam <UserTypeEntity> show thread|threads (query <Query> (matchlabel <LabelName>)* [max_to_show <Number>] [includespamtrash])|(ids <MessageIDEntity>)

4.16.4

Added commands to show messages/threads.
    gam <UserTypeEntity> show message|messages (query <Query> (matchlabel <LabelName>)* [max_to_show <Number>] [includespamtrash])|(ids <MessageIDEntity>) [headers <String>] [showlabels]
    gam <UserTypeEntity> show thread|threads (query <Query> (matchlabel <LabelName>)* [max_to_show <Number>] [includespamtrash])|(ids <MessageIDEntity>) [headers <String>] [showlabels]

4.16.0

Implement user Contact Groups: see GamContacts.txt

Implement Sites: see GamSites.txt

The output of the command gam print contacts has been modified; the column heading User has been changed to Domain.
The output of the command gam <UserTypeEntity> print contacts has not changed.

4.15.0

Added domain <DomainName> and member <UserItem> arguments to gam print group-members to allow selecting subsets of groups.
    gam print group-members|groups-members [todrive] ([domain <DomainName>] [member <UserItem>])|[group <GroupItem>]|[select <GroupEntity>] [membernames] [fields <MembersFieldNameList>] [recursive [noduplicates]]
These new arguments are the same as for gam print groups.

Add arguments to gam show fileinfo to allow field selection.
    gam <UserTypeEntity> show fileinfo <DriveFileEntity> [filepath] [allfields|<DriveFieldNames>*]

Allow selection of CrOS devices by Organizational Unit.
    gam cros_ous <OrgUnitList> ...
    gam cros_ous_and_children <OrgUnitList> ..
The first form selects only the CrOS devices directly in the Org Units; the second form selects CrOS devices from the Org Units and all child Org Units.
Google does not support this selection directly in the API; gam has to download all CrOS devices and then perform the selection locally;
this could be time consumimg with very largs lists of CrOS devices.

Any place you can specify a Google Drive folder id, you can enter root to select the root folder.
    gam <UserTypeEntity> show fileinfo root

Add arguments to gam show filetree to allow selection of starting folder and specification of output ordering.
    gam <UserTypeEntity> show filetree [<DriveFileEntity>] [orderby <DriveOrderByFieldName> [ascending|descending]]*
If <DriveFileEntity> is omitted, the filetree output starts with the root folder.

Add fullquery argument to gam print|show filelist to allow arbitrary queries. The query <Query> argument always includes "'me' in owners" which limits the scope.
Add filepath argument to gam print|show filelist to show the file path of Google Drive files.
Add arguments to gam print|show filelist to allow specification of output ordering.
Getting the file path for many files is expensive, use sparingly.
    gam <UserTypeEntity> print|show filelist [todrive] [query <QueryDriveFile>] [fullquery <QueryDriveFile>] [filepath] [allfields|<DriveFieldName>*] (orderby <DriveOrderByFieldName> [ascending|descending])*

Processing of the arguments orderby <DriveOrderByFieldName> and ascending|descending has been slightly restricted. Previously, these areguments
could appear in any order and they could be separated by other arguments; now, they must appear as: orderby <OrderByFieldName> [ascending|descending]
gam show filelist/filetree allow specification of multiple orderby fields; all other commands allow specification of a single orderby field. 

The commands gam get drivefile, gam copy drivefile and gam update drivefile have been slightly restricted. Previously, these commands
allowed the <DriveFileEntity> to be specified anywhere in the list of arguments; now, <DriveFileEntity> must appear as the first argument after
the argument drivefile. This makes these commands consistent with gam delete drivefile and gam undelete drivefile.

Earlier updates

Added revision argument to gam <UserTypeEntity> get drivefile to allow downloading specific version of a file.
    gam <UserTypeEntity> get drivefile <DriveFileEntity> [format <FileFormatList>] [targetfolder <FilePath>] [revision <Number>]
Submitted by Seth Stein

Added command to show revisions of a file.
    gam <UserTypeEntity> show filerevisions <DriveFileEntity>
Submitted by Seth Stein

Warning messages are now written to stderr.
To capture all stdout and stderr ouput from a command in a single file, do: gam command > file 2>&1

Update gam <UserTypeEntity> delete groups to allow specification of a list of groups from which the users are to be deleted.
    gam <UserTypeEntity> delete|del group|groups [<GroupEntity>]

Add command to allow adding users to multiple groups.
    gam <UserTypeEntity> add group|groups [owner|manager|member] <GroupEntity>

Added skus <SKUIDList> argument to gam info user <User> so that licenses for desired SKUs can be shown.
    gam info user [<UserItem>] [noaliases] [nogroups] [nolicenses] [noschemas] [schemas <SchemaNameList>] [userview] [fields <UserFieldNamesList>] [skus|sku <SKUIDList>]

Removed language, name, admin_secondary_email, mx_verify, user_migrations, outbound_gateway, email_route from gam update instance
language, name and admin_secondary_email are present in gam update customer
    gam update customer [primary <DomainName>] [adminsecondaryemail|alternateemail <EmailAddress>] [language <LanguageCode] [phone|phonenumber <String>]
        [contact|contactname <String>] [name|organizationname <String>]
        [address1|addressline1 <String>]  [address2|addressline2 <String>]  [address3|addressline3 <String>]
        [locality <String>] [region <String>] [postalcode <String>] [country|countrycode <String>]

Add membernames argument to gam print group-members to include member name (in addition to member email) in output. Add fields argument to allow full specification of fields.
    gam print group-members|groups-members [todrive] [membernames] [fields <MembersFieldNameList>] [recursive [noduplicates]] [group <GroupItem>]|[select <GroupEntity>]

Add select argument to gam print users to allow selection of source of users.
    gam print users [todrive] ([domain <DomainName>] [query <Query>] [deleted_only|only_deleted])|[select <UserTypeEntity>]
        [delimiter <String>] [groups] [license|licenses] [emailpart|emailparts|username]
        [orderby familyname|lastname|givenname|firstname|email] [ascending|descending] [userview]
        [allfields | <UserFieldNames>* | fields <UserFieldNamesList>]

Add select argument to gam print groups/group-members to allow selection of groups.
    gam print groups [todrive] ([domain <DomainName>] [member <UserItem>])|[select <GroupEntity>]
        [maxresults <Number>] [delimiter <String>]
        [members] [owners] [managers] <GroupFieldNames>* [settings] [fields <GroupFieldNamesList>|<GroupSettingsFieldNamesList>]
    gam print group-members|groups-members [todrive] [recursive [noduplicates]] [group <GroupItem>]|[select <GroupEntity>]

Add select argument to gam report to allow selection of users. Add maxresults and nodatechange arguments.
    gam report users|user [todrive] [nodatechange] [maxresults <Number>]
        [date <Date>] [(user all|<UserItem>)|(select <UserTypeEntity>)] [filter|filters <String>] [fields|parameters <String>]
    gam report customers|customer|domain [todrive] [nodatechange]
        [date <Date>] [fields|parameters <String>]
    gam report admin|calendar|calendars|drive|docs|doc|groups|group|logins|login|mobile|tokens|token [todrive] [maxresults <Number>]
        [start <Time>] [end <Time>] [(user all|<UserItem>)|(select <UserTypeEntity>)] [event <String>] [filter|filters <String>] [ip <String>]
If nodatechange is specified, <Date> will not be moved back to the last acceptable date.
The maxResults argument, range 1-1000,  controls how many results are obtained in each packet from Google; it does not limit the total number of results.

Added charset argument to gam signature/vacation to allow specification of character set of file argument.
    gam <UserTypeEntity> signature|sig <String>|(file <FileName> [charset <Charset>]
    gam <UserTypeEntity> vacation <Boolean> [subject <String>] [message <String>]|[file <FileName> [charset <Charset>]] [contactsonly] [domainonly] [startdate <Date>] [enddate <Date>]

Added clear option to reminder and notification arguments of add/update calendar
    reminder clear|(email|sms|pop <Number>)
    notification clear|(email|sms eventcreation|eventchange|eventcancellation|eventresponse|agenda)

Jay added command to modify message labels.
    gam <UserTypeEntity> modify message|messages query <Query> (addlabel <LabelName>)* (removelabel <LabelName>)* [doit] [max_to_modify <Number>]

Added matchlabel argument to gam delete/modify/spam/trash/untrash messages as an additional way of selecting messages.
    gam <UserTypeEntity> delete message|messages query <Query> (matchlabel <LabelName>)* [doit] [max_to_delete <Number>]
    gam <UserTypeEntity> modify message|messages query <Query> (matchlabel <LabelName>)* (addlabel <LabelName>)* (removelabel <LabelName>)* [doit] [max_to_modify <Number>]
    gam <UserTypeEntity> spam message|messages query <Query> (matchlabel <LabelName>)* [doit] [max_to_modify <Number>]
    gam <UserTypeEntity> trash message|messages query <Query> (matchlabel <LabelName>)* [doit] [max_to_trash <Number>]
    gam <UserTypeEntity> untrash message|messages query <Query> (matchlabel <LabelName>)* [doit] [max_to_untrash <Number>]
A message must have all of the specified matchlabels to be selected.

Add fields argument to gam info user to allow selection of fields.
    gam info user [<User>] [noaliases] [nogroups] [nolicenses] [noschemas] [schemas <SchemaNameList>] [userview] [fields <UserFieldNamesList>]

Add fields argument to gam print users to allow expanded selection of fields.
    gam print users [todrive] ([domain <DomainName>] [query <Query>] [deleted_only|only_deleted])|[select <UserTypeEntity>]
        [delimiter <String>] [groups] [license|licenses] [emailpart|emailparts|username]
        [orderby familyname|lastname|givenname|firstname|email] [ascending|descending] [userview]
        [allfields | <UserFieldNames>* | fields <UserFieldNamesList>]

Add fields argument to gam info group to allow selection of fields.
    gam info group <Group> [nousers] [noaliases] [groups] [fields <GroupFieldNamesList>|<GroupSettingsFieldNamesList>]

Add fields argument to gam print groups to allow expanded selection of fields.
    gam print groups [todrive] ([domain <DomainName>] [member <UserItem>])|[select <GroupEntity>]
        [maxresults <Number>] [delimiter <String>]
        [members] [owners] [managers] <GroupFieldNames>* [settings] [fields <GroupFieldNamesList>|<GroupSettingsFieldNamesList>]

Add fields argument to gam info cros to allow selection of fields.
    gam info cros <CrOSDeviceID> [fields <CrOSFieldNamesList>]

Add fields argument to gam print cros to allow selection of fields.
    gam print cros [todrive] [query <Query>] [basic|full] [nolists|recentusers|timeranges] [listlimit <Number>]
        [orderby lastsync|location|notes|serialnumber|status|supportenddate|user] [ascending|descending] [fields <CrOSFieldNamesList>]

Add show argument to gam print course-participants to select what members to display; the default is all.
    gam print course-participants ... [show all|students|teachers]

Add untrash argument to gam delete drivefile to remove file from trash.
    gam <UserTypeEntity> delete drivefile <DriveFileEntity> [purge|untrash]

Add arguments to gam info group to suppress aliases listing and include groups of which this group is a member.
    gam info group <Group> ... [noaliases] [groups]

Add listlimit argument to gam print cros to limit number of timeranges and recentusers entries
    gam print cros ... [listlimit <Number>]

Added command to untrash messages
    gam <UserTypeEntity> untrash messages query <Query> [doit] [max_to_untrash <Number>]

Add a command to show the file path of a Google Drive file.
    gam <UserTypeEntity> show filepath <DriveFileEntity>

Add filepath argument to gam show fileinfo to show the file path of a Google Drive file.
    gam <UserTypeEntity> show fileinfo <DriveFileEntity> [filepath] [allfields|<DriveFieldName>*]

Modify gam update group <GroupItem> add/sync to allow suspended users to be excluded from being added to the group.
    gam update group <GroupItem> add [owner|manager|member] [notsuspended] <UserTypeEntity>
    gam update group <GroupItem> sync [owner|manager|member] [notsuspended] <UserTypeEntity>
This option is effective for the following values of <UserTypeEntity>:
    all users | ou|org <OrgUnitPath | ou_and_children|ou_and_child <OrgUnitPath> | query <Query>

Modify gam course <CourseID> add/sync to disallow suspended users from being added to the course.
    gam course <CourseID> add teachers|students <UserTypeEntity>
    gam course <CourseID> sync teachers|students <UserTypeEntity>
This option is effective for the following values of <UserTypeEntity>:
    all users | ou|org <OrgUnitPath | ou_and_children|ou_and_child <OrgUnitPath> | query <Query>

Modify gam <UserTypeEntity> show calendars command to allow output to CSV file.
    gam <UserTypeEntity> show calendars [csv] [todrive]

Implement Pull request #10 to allow copying of Drive folders
    gam <UserTypeEntity> copy drivefile <DriveFileEntity> [newfilename <DriveFileName>] [recursive] [parentid <DriveFolderID>] [parentname <FolderName>]

Implement a command for redirecting stdout, stderr and CSV files.
    gam [redirect csv {{Section}}|<FileName> [append] [charset <CharSet>]] [redirect stdout {{Section}}|<FileName> [append]] [rerirect stderr {{Section}}|<FileName> [append]] ...
The redirect arguments must appear before any other gam arguments.
If <FileName> is relative, it will be stored in ~/Downloads.

Add recursive argument to gam print group-members to show users from sub-groups rather than the sub-group name itself.
Two new columns indicate the sub-group that a user comes from and the depth of the sub-group.
The noduplicates argument ensures that a user only appears once in the list.

Process a csv file without subprocesses. The syntax is exactly the same as gam csv, but, rather than starting
a subprocess for each line, gam executes the command directly. There is no subprocess creation overhead, cleaner output,
but it will not execute as fast on large csv files as there is no parallelism.
    gam loop <Filename>|- gam ...

Improve support for languages with accented characters.
The following commands have been extended to allow specification of the character set used in the file.
    gam batch <Filename>|- [charset <Charset>]
    gam csv <Filename>|- [charset <Charset>] gam ...
    gam loop <Filename>|- [charset <Charset>] gam ...
<Charset> defaults to ascii; other typical values are: utf-8, utf-16, latin-1.

Extend gam csv/loop to select rows from a csv file by matching a field value.
    gam csv <Filename>|- [charset <Charset>] [matchfield <FieldName> <RegularExpression>] gam ...
    gam loop <Filename>|- [charset <Charset>] [matchfield <FieldName> <RegularExpression>] gam ...
<FieldName> does not have a leading ~ and must be a column heading in <FileName>.
For documentation on <RegularExpression> see https://docs.python.org/2/library/re.html
    gam csv DeptGroups.csv matchfield Department Sales gam print group-members group ~Group
DeptGroups.csv:
Department,Group
Sales,sales-ny@bar.com
Sales,sales-nj@bar.com
Marketing,mktg-ny@bar.com
Marketing,mktg-nj@bar.com

Add a command to support updating a list of ChromeOS devices.
Currently:
    gam update cros <DeviceID>|query:<Query> <CrOSAttributes>
    gam all cros update <CrOSAttributes>
Proposed:
    gam cros <DeviceIDList> update <CrOSAttributes>

Implement pull request #93 to be able to mark messages as spam.
    gam <UserTypeEntity> spam message|messages query <Query> [doit] [max_to_move <Number>]
<Number> defaults to 1.

Support user calendar creation/modification/deletion/information.
    <CalendarSettings> ::==
        (summary <String>)|(description <String>)|(location <String>)|(timezone <String>)
    gam <UserTypeEntity> create calendar|calendars <CalendarSettings>
    gam <UserTypeEntity> modify calendar <CalendarItem>|primary <CalendarSettings>
    gam <UserTypeEntity> remove calendar <CalendarItem>
    gam <UserTypeEntity> modify calendars <CalendarEntity>|primary <CalendarSettings>
    gam <UserTypeEntity> remove calendars <CalendarEntity>
    gam <UserTypeEntity> info calendars <CalendarEntity>|primary
Summary <string> is required when creating a calendar.
primary refers to the user's primary calendar, it is replaced with the user's email address.

The format argument in gam get drivefile is extended to offer more choices of file types and can be a list.
The possible formats are: csv|html|txt|tsv|jpeg|jpg|png|svg|pdf|rtf|pptx|xlsx|docx|odt|ods|openoffice|ms|microsoft|micro$oft
ms, microsoft and micro$oft are  shorthand for docx,pptx,xlsx
openoffice is shorthand for odt,ods
    gam get drivefile drivefilename <DriveFileEntity> format docx,rtf,txt,odt,pdf
This will get file XXX as long as it is in some text document format. If a file is available in multiple formats, the first
available format in the list is chosen.

Add a command to remove drive files from the trash.
    gam <UserTypeEntity> untrash drivefile <DriveFileEntity>

Extend gam update group to explicitly allow clearing members from a group.
    gam update group <GroupItem> clear [owner] [manager] [member]

Extend the gam course add and gam course remove commands to use the same participant selections as gam course sync.
    gam course <CourseID> add teachers|students <UserTypeEntity>
    gam course <CourseID> delete teachers|students <UserTypeEntity>
    gam course <CourseID> sync teachers|students <UserTypeEntity>
<UserTypeEntity> ::=
        <EmailAddress>|
        (all users)|
        (user <EmailAddress>)|
        (users <EmailAddressList>)|
        (group <EmailAddress)|
        (ou <OrgUnitPath)|
        (ou_and_children <OrgUnitPath)|
        (courseparticipants <CourseID>)|
        (students <CourseID>)|
        (teachers <CourseID>)|
        (file <FileName> [charset <Charset>])|
        (csvfile <FileName>:<FieldName> [charset <Charset>])|
        (query <Query>)|
        (groups <GroupList)|
        (ous|orgs <OrgUnitList)|
        (ous_and_children|ous_and_child <OrgUnitList)|
        (courseparticipants <CourseIDList>)|
        (students <CourseIDList>)|
        (teachers <CourseIDList>)|
        (args users|groups|ous|ous_and_children|courseparticipants|students|teachers <Marker> <UserItem>* <Marker>)|
        (datafile users|groups|ous|ous_and_children|courseparticipants|students|teachers <FileName> [charset <Charset>])|
        (csvkmd users|groups|ous|ous_and_children|courseparticipants|students|teachers <FileName> [charset <Charset>]
                keyfield <FieldName> [delimiter <String>]
                [matchfield <FieldName> <RegularExpression>]
                [datafield <FieldName> [delimiter <String>]])|
        (csvdata <FieldName>)

Allow user properties that are arrays, e.g., phone, organization, address, to be cleared.
Gam can currently set these arrays but has no way of removing all of the entries.
    gam update user <UserID> <Property> clear|none
<Property> is phone, organization, im, address, ...
    gam update user foo@bar.com phone none

Support user properties website and note.
In gam create user and gam update user add website argument.
    website home_page|blog|profile|work|home|other|ftp|reservations|app_install_page|<String> <Value>
    gam update user foo@bar.com website work www.bar.com
If <String> is specified instead of one of the pre-defined values, it will be marked custom.

    note text_plain|text_html file <FileName>
    note text_plain|text_html <String>
    gam update user foo@bar.com note text_plain "Works weekend shift"

Allow gam batch to read lines from stdin by specifying - instead of a file name.
    cat foo.bat | gam batch -
This makes gam batch have the same file options as gam csv; for those heavy duty scripting users.

Two new mutually exclusive arguments are defined for gam print mobile to set the amount of data retrieved.
    bam print mobile basic|full

A new argument (delimiter <String>) is defined in gam print users.
It is used when the groups argument is specified, <String> rather than a single space will separate the entries in the groups list.
    gam print users delimiter ',' groups

A new argument (delimiter <String>) is defined in gam print courses.
It is used when the aliases argument is specified, <String> rather than a single space will separate the entries in the aliases list.
    gam print courses delimiter ',' aliases

Extend gam version to force an update check.
    gam version check

Support event notification property in calendars.
In gam <UserTypeEntity> add calendar and gam <UserTypeEntity> update calendar, add notification argument; it may be repeated.
   notification email|sms event_creation|event_change|event_cancellation|event_response|agenda
   gam user foo@bar.com update calendar bar.com_xxx@group.calendar.google.com notification email event_creation notification sms event_change

Add an argument to gam <UserTypeEntity> show signature to format the signature.
   gam <UserTypeEntity> show signature|sig [format]

Add argument to gam print printjobs and gam printjob fetch to control number of retrieved print jobs.
   gam print printjobs ... limit <Number>
   gam printjob <PrinterId> fetch ... limit <Number>
limit specifies the maximum number of print jobs to retrieve; defaults to 25, set limit to 0 to retrieve all print jobs.

Clean up argument parsing, give user location of error in command line.
Currently:
    ./gam.py update user testuser1 address type foo formatted '123 main street' primary
    ERROR: wrong type should be custom, home, other or work. Got foo
Proposed:
    ./gam.py update user testuser1 address type foo formatted '123 main street' primary

    Command: ./gam.py update user testuser1 address type >>>foo<<< formatted '123 main street' primary
    ERROR: Invalid argument: expected <custom|home|other|work>
    Help: Documentation is at https://github.com/jay0lee/GAM/wiki
This change involves creating functions like getBoolean, getChoice, getInteger, that standardize argument
processing. Additionally, common processing of large argument lists is combined into a function.
For example, doCreateuser and doUpdateUser call getuserAttributes rather than repeating the argument processing.

Make reminder argument consistent in add/update calendar and calendar addevent.
    (reminder email|popup|sms <Number>)|(reminder <Number> email|popup|sms)

Make the file selection arguments for all drivefile and drivefileacl commands consistent.
    <DriveFileEntity> ::= ([id] <DriveFileItem>)|(ids <DriveFileList>|<FileSelector>|<ArgsSelector>|<CSVkmdSelector>|<CSVDataSelector>)|(drivefilename[:| ]<DriveFileName>)|(query[:| ]<QueryDriveFile>)|root
    
Corrected gam create resource so that type argument is properly recognized.

Add name and type specification argument for gam print resources.
    gam print resources [todrive] [allfields] [id] [name] [description] [email] [type]

Make the gam whatis command work better. Add an argument to suppress all output beyond the statement
indicating the type of the email address.
    gam whatis <EmailAddress> [noinfo]
If noinfo is specified, doGetUserInfo, doGetGroupInfo, doGetAliasInfo are not called.
If noinfo is not specified, the arguments in the doGetxxxInfo functions are processed starting at the correct point.
Additionally, each of the doGetxxxInfo functions silently ignore non-relevant arguments.
    gam whatis foo@bar.com nousers nogroups
If foo@bar.com is a user, nogroups takes effect and nousers is ignored.
If foo@bar.com is a group, nousers takes effect and nogroups is ignored.
If foo@bar.com is an alias, all arguments are ignored. 

All "Getting ...", "Retrieving ...", "Got ..." messages are now written to stderr.
Most already were but the following commands wrote to stdout:
    gam <UserTypeEntity> show gmailprofile
    gam <UserTypeEntity> deprov
    gam <UserTypeEntity> delete label
    gam <UserTypeEntity> transfer drive
    gam <UserTypeEntity> add drivefile
    gam <UserTypeEntity> update drivefile
    gam <UserTypeEntity> delete drivefile
    gam <UserTypeEntity> get drivefile

Add additional commands to manage calendar events.
    gam calendar <CalendarEntity> add event <EventAttributes>
    gam calendar <CalendarEntity> update event <EventIDEntity> <EventAttributes>
    gam calendar <CalendarEntity> delete event <EventIDEntity>
    gam calendar <CalendarEntity> move event <EventIDEntity> to <CalendarItem>
    gam calendar <CalendarEntity> info event <EventIDEntity>
    gam calendar <CalendarEntity> show events
    gam calendar <CalendarEntity> wipe events

Add additional command to manage calendar ACLs.
    gam calendar <CalendarEntity> add acl <CalendarACLRole> ([user] <EmailAddress>)|(group <EmailAddress>)|(domain [<DomainName>])|default
    gam calendar <CalendarEntity> update acl <CalendarACLRole> ([user] <EmailAddress>)|(group <EmailAddress>)|(domain [<DomainName>])|default
    gam calendar <CalendarEntity> del|delete acl ([user] <EmailAddress>)|(group <EmailAddress>)|(domain [<DomainName>])|default
    gam calendar <CalendarEntity> add acls <CalendarACLRole> <CalendarACLEntity>
    gam calendar <CalendarEntity> update acls <CalendarACLRole> <CalendarACLEntity>
    gam calendar <CalendarEntity> del|delete acls [<CalendarACLRole>] <CalendarACLEntity>
    gam calendar <CalendarEntity> info acl|acls <CalendarACLEntity>
    gam calendar <CalendarEntity> show acls

Reorganize gam so that it is importable on Mac OS/Linux.
This isn't elegant but it's a start; you can say:
    #!/usr/bin/env python
    import os, sys, shlex
    from gam import ProcessGAMCommand
    # Set appropriate values
    os.environ['GAMCFGDIR'] = '/Users/admin/GAM'
    GAM_STDOUT = '/tmp/gamstdout.out'
    # Choose how to produce args list
    rc = ProcessGAMCommand(shlex.split('/Users/admin/GAM/gam.py redirect stdout {0} info user admin'.format(GAM_STDOUT)))
    #rc = ProcessGAMCommand(['/Users/admin/GAM/gam.py',
    #                        'redirect', 'stdout', GAM_STDOUT,
    #                        'info', 'user', 'admin'])
    print 'GAM returned {0}'.format(rc)
    with open(GAM_STDOUT, 'rU') as f:
        for line in f:
            sys.stdout.write(line)

